#! /usr/bin/vvp
:ivl_version "11.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/system.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/va_math.vpi";
S_0x59b80659ec10 .scope module, "tb_Full_Adder" "tb_Full_Adder" 2 33;
 .timescale 0 0;
P_0x59b8065a17f0 .param/l "N" 0 2 34, +C4<00000000000000000000000000001000>;
v0x59b8065c5ee0_0 .var "Cin", 0 0;
v0x59b8065c5fa0_0 .net "Cout", 0 0, L_0x59b8065cba40;  1 drivers
v0x59b8065c6070_0 .net "Sum", 7 0, L_0x59b8065cb260;  1 drivers
v0x59b8065c6170_0 .var "a", 7 0;
v0x59b8065c6240_0 .var "b", 7 0;
v0x59b8065c6330_0 .var/i "i", 31 0;
v0x59b8065c63d0_0 .var/i "j", 31 0;
v0x59b8065c6490_0 .var/i "k", 31 0;
S_0x59b8065863f0 .scope module, "adder" "nbitfull_Adder" 2 40, 2 13 0, S_0x59b80659ec10;
 .timescale 0 0;
    .port_info 0 /INPUT 8 "a";
    .port_info 1 /INPUT 8 "b";
    .port_info 2 /INPUT 1 "Cin";
    .port_info 3 /OUTPUT 8 "Sum";
    .port_info 4 /OUTPUT 1 "Cout";
P_0x59b806598d60 .param/l "N" 0 2 13, +C4<00000000000000000000000000001000>;
L_0x59b8065cb930 .functor BUFZ 1, v0x59b8065c5ee0_0, C4<0>, C4<0>, C4<0>;
v0x59b8065c5860_0 .net "C", 8 0, L_0x59b8065cb530;  1 drivers
v0x59b8065c5960_0 .net "Cin", 0 0, v0x59b8065c5ee0_0;  1 drivers
v0x59b8065c5a20_0 .net "Cout", 0 0, L_0x59b8065cba40;  alias, 1 drivers
v0x59b8065c5ac0_0 .net "Sum", 7 0, L_0x59b8065cb260;  alias, 1 drivers
v0x59b8065c5ba0_0 .net *"_ivl_61", 0 0, L_0x59b8065cb930;  1 drivers
v0x59b8065c5c80_0 .net "a", 7 0, v0x59b8065c6170_0;  1 drivers
v0x59b8065c5d60_0 .net "b", 7 0, v0x59b8065c6240_0;  1 drivers
L_0x59b8065c6c80 .part v0x59b8065c6170_0, 0, 1;
L_0x59b8065c6db0 .part v0x59b8065c6240_0, 0, 1;
L_0x59b8065c6ee0 .part L_0x59b8065cb530, 0, 1;
L_0x59b8065c75c0 .part v0x59b8065c6170_0, 1, 1;
L_0x59b8065c7720 .part v0x59b8065c6240_0, 1, 1;
L_0x59b8065c7850 .part L_0x59b8065cb530, 1, 1;
L_0x59b8065c7f20 .part v0x59b8065c6170_0, 2, 1;
L_0x59b8065c80e0 .part v0x59b8065c6240_0, 2, 1;
L_0x59b8065c82f0 .part L_0x59b8065cb530, 2, 1;
L_0x59b8065c8890 .part v0x59b8065c6170_0, 3, 1;
L_0x59b8065c8a20 .part v0x59b8065c6240_0, 3, 1;
L_0x59b8065c8b50 .part L_0x59b8065cb530, 3, 1;
L_0x59b8065c9220 .part v0x59b8065c6170_0, 4, 1;
L_0x59b8065c9350 .part v0x59b8065c6240_0, 4, 1;
L_0x59b8065c9500 .part L_0x59b8065cb530, 4, 1;
L_0x59b8065c9b00 .part v0x59b8065c6170_0, 5, 1;
L_0x59b8065c9cc0 .part v0x59b8065c6240_0, 5, 1;
L_0x59b8065c9df0 .part L_0x59b8065cb530, 5, 1;
L_0x59b8065ca500 .part v0x59b8065c6170_0, 6, 1;
L_0x59b8065ca5a0 .part v0x59b8065c6240_0, 6, 1;
L_0x59b8065c9f20 .part L_0x59b8065cb530, 6, 1;
L_0x59b8065cac30 .part v0x59b8065c6170_0, 7, 1;
L_0x59b8065cae20 .part v0x59b8065c6240_0, 7, 1;
L_0x59b8065caf50 .part L_0x59b8065cb530, 7, 1;
LS_0x59b8065cb260_0_0 .concat8 [ 1 1 1 1], L_0x59b8065c6690, L_0x59b8065c7080, L_0x59b8065c7a30, L_0x59b8065c8490;
LS_0x59b8065cb260_0_4 .concat8 [ 1 1 1 1], L_0x59b8065c8df0, L_0x59b8065c9630, L_0x59b8065ca030, L_0x59b8065ca760;
L_0x59b8065cb260 .concat8 [ 4 4 0 0], LS_0x59b8065cb260_0_0, LS_0x59b8065cb260_0_4;
LS_0x59b8065cb530_0_0 .concat8 [ 1 1 1 1], L_0x59b8065cb930, L_0x59b8065c6b70, L_0x59b8065c74b0, L_0x59b8065c7e10;
LS_0x59b8065cb530_0_4 .concat8 [ 1 1 1 1], L_0x59b8065c8780, L_0x59b8065c9110, L_0x59b8065c99f0, L_0x59b8065ca3f0;
LS_0x59b8065cb530_0_8 .concat8 [ 1 0 0 0], L_0x59b8065cab20;
L_0x59b8065cb530 .concat8 [ 4 4 1 0], LS_0x59b8065cb530_0_0, LS_0x59b8065cb530_0_4, LS_0x59b8065cb530_0_8;
L_0x59b8065cba40 .part L_0x59b8065cb530, 8, 1;
S_0x59b806589220 .scope generate, "Full_adder_loop[0]" "Full_adder_loop[0]" 2 24, 2 24 0, S_0x59b8065863f0;
 .timescale 0 0;
P_0x59b806588fd0 .param/l "i" 0 2 24, +C4<00>;
S_0x59b806596180 .scope module, "FA" "Full_Adder" 2 25, 2 1 0, S_0x59b806589220;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "Cin";
    .port_info 3 /OUTPUT 1 "Sum";
    .port_info 4 /OUTPUT 1 "Cout";
L_0x59b8065c6570 .functor XOR 1, L_0x59b8065c6c80, L_0x59b8065c6db0, C4<0>, C4<0>;
L_0x59b8065c6690 .functor XOR 1, L_0x59b8065c6570, L_0x59b8065c6ee0, C4<0>, C4<0>;
L_0x59b8065c6780 .functor AND 1, L_0x59b8065c6c80, L_0x59b8065c6db0, C4<1>, C4<1>;
L_0x59b8065c68c0 .functor AND 1, L_0x59b8065c6db0, L_0x59b8065c6ee0, C4<1>, C4<1>;
L_0x59b8065c69b0 .functor OR 1, L_0x59b8065c6780, L_0x59b8065c68c0, C4<0>, C4<0>;
L_0x59b8065c6ac0 .functor AND 1, L_0x59b8065c6ee0, L_0x59b8065c6c80, C4<1>, C4<1>;
L_0x59b8065c6b70 .functor OR 1, L_0x59b8065c69b0, L_0x59b8065c6ac0, C4<0>, C4<0>;
v0x59b80659c7c0_0 .net "Cin", 0 0, L_0x59b8065c6ee0;  1 drivers
v0x59b806599990_0 .net "Cout", 0 0, L_0x59b8065c6b70;  1 drivers
v0x59b806596b60_0 .net "Sum", 0 0, L_0x59b8065c6690;  1 drivers
v0x59b806593d60_0 .net *"_ivl_0", 0 0, L_0x59b8065c6570;  1 drivers
v0x59b806586dd0_0 .net *"_ivl_10", 0 0, L_0x59b8065c6ac0;  1 drivers
v0x59b806583f70_0 .net *"_ivl_4", 0 0, L_0x59b8065c6780;  1 drivers
v0x59b8065bf690_0 .net *"_ivl_6", 0 0, L_0x59b8065c68c0;  1 drivers
v0x59b8065bf770_0 .net *"_ivl_8", 0 0, L_0x59b8065c69b0;  1 drivers
v0x59b8065bf850_0 .net "a", 0 0, L_0x59b8065c6c80;  1 drivers
v0x59b8065bf910_0 .net "b", 0 0, L_0x59b8065c6db0;  1 drivers
S_0x59b806598fb0 .scope generate, "Full_adder_loop[1]" "Full_adder_loop[1]" 2 24, 2 24 0, S_0x59b8065863f0;
 .timescale 0 0;
P_0x59b8065bfab0 .param/l "i" 0 2 24, +C4<01>;
S_0x59b80659bde0 .scope module, "FA" "Full_Adder" 2 25, 2 1 0, S_0x59b806598fb0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "Cin";
    .port_info 3 /OUTPUT 1 "Sum";
    .port_info 4 /OUTPUT 1 "Cout";
L_0x59b8065c7010 .functor XOR 1, L_0x59b8065c75c0, L_0x59b8065c7720, C4<0>, C4<0>;
L_0x59b8065c7080 .functor XOR 1, L_0x59b8065c7010, L_0x59b8065c7850, C4<0>, C4<0>;
L_0x59b8065c70f0 .functor AND 1, L_0x59b8065c75c0, L_0x59b8065c7720, C4<1>, C4<1>;
L_0x59b8065c7200 .functor AND 1, L_0x59b8065c7720, L_0x59b8065c7850, C4<1>, C4<1>;
L_0x59b8065c72f0 .functor OR 1, L_0x59b8065c70f0, L_0x59b8065c7200, C4<0>, C4<0>;
L_0x59b8065c7400 .functor AND 1, L_0x59b8065c7850, L_0x59b8065c75c0, C4<1>, C4<1>;
L_0x59b8065c74b0 .functor OR 1, L_0x59b8065c72f0, L_0x59b8065c7400, C4<0>, C4<0>;
v0x59b8065bfbc0_0 .net "Cin", 0 0, L_0x59b8065c7850;  1 drivers
v0x59b8065bfca0_0 .net "Cout", 0 0, L_0x59b8065c74b0;  1 drivers
v0x59b8065bfd60_0 .net "Sum", 0 0, L_0x59b8065c7080;  1 drivers
v0x59b8065bfe30_0 .net *"_ivl_0", 0 0, L_0x59b8065c7010;  1 drivers
v0x59b8065bff10_0 .net *"_ivl_10", 0 0, L_0x59b8065c7400;  1 drivers
v0x59b8065c0040_0 .net *"_ivl_4", 0 0, L_0x59b8065c70f0;  1 drivers
v0x59b8065c0120_0 .net *"_ivl_6", 0 0, L_0x59b8065c7200;  1 drivers
v0x59b8065c0200_0 .net *"_ivl_8", 0 0, L_0x59b8065c72f0;  1 drivers
v0x59b8065c02e0_0 .net "a", 0 0, L_0x59b8065c75c0;  1 drivers
v0x59b8065c03a0_0 .net "b", 0 0, L_0x59b8065c7720;  1 drivers
S_0x59b8065c0500 .scope generate, "Full_adder_loop[2]" "Full_adder_loop[2]" 2 24, 2 24 0, S_0x59b8065863f0;
 .timescale 0 0;
P_0x59b8065c06b0 .param/l "i" 0 2 24, +C4<010>;
S_0x59b8065c0770 .scope module, "FA" "Full_Adder" 2 25, 2 1 0, S_0x59b8065c0500;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "Cin";
    .port_info 3 /OUTPUT 1 "Sum";
    .port_info 4 /OUTPUT 1 "Cout";
L_0x59b8065c79c0 .functor XOR 1, L_0x59b8065c7f20, L_0x59b8065c80e0, C4<0>, C4<0>;
L_0x59b8065c7a30 .functor XOR 1, L_0x59b8065c79c0, L_0x59b8065c82f0, C4<0>, C4<0>;
L_0x59b8065c7aa0 .functor AND 1, L_0x59b8065c7f20, L_0x59b8065c80e0, C4<1>, C4<1>;
L_0x59b8065c7b60 .functor AND 1, L_0x59b8065c80e0, L_0x59b8065c82f0, C4<1>, C4<1>;
L_0x59b8065c7c50 .functor OR 1, L_0x59b8065c7aa0, L_0x59b8065c7b60, C4<0>, C4<0>;
L_0x59b8065c7d60 .functor AND 1, L_0x59b8065c82f0, L_0x59b8065c7f20, C4<1>, C4<1>;
L_0x59b8065c7e10 .functor OR 1, L_0x59b8065c7c50, L_0x59b8065c7d60, C4<0>, C4<0>;
v0x59b8065c0980_0 .net "Cin", 0 0, L_0x59b8065c82f0;  1 drivers
v0x59b8065c0a60_0 .net "Cout", 0 0, L_0x59b8065c7e10;  1 drivers
v0x59b8065c0b20_0 .net "Sum", 0 0, L_0x59b8065c7a30;  1 drivers
v0x59b8065c0bf0_0 .net *"_ivl_0", 0 0, L_0x59b8065c79c0;  1 drivers
v0x59b8065c0cd0_0 .net *"_ivl_10", 0 0, L_0x59b8065c7d60;  1 drivers
v0x59b8065c0e00_0 .net *"_ivl_4", 0 0, L_0x59b8065c7aa0;  1 drivers
v0x59b8065c0ee0_0 .net *"_ivl_6", 0 0, L_0x59b8065c7b60;  1 drivers
v0x59b8065c0fc0_0 .net *"_ivl_8", 0 0, L_0x59b8065c7c50;  1 drivers
v0x59b8065c10a0_0 .net "a", 0 0, L_0x59b8065c7f20;  1 drivers
v0x59b8065c1160_0 .net "b", 0 0, L_0x59b8065c80e0;  1 drivers
S_0x59b8065c12c0 .scope generate, "Full_adder_loop[3]" "Full_adder_loop[3]" 2 24, 2 24 0, S_0x59b8065863f0;
 .timescale 0 0;
P_0x59b8065c1470 .param/l "i" 0 2 24, +C4<011>;
S_0x59b8065c1550 .scope module, "FA" "Full_Adder" 2 25, 2 1 0, S_0x59b8065c12c0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "Cin";
    .port_info 3 /OUTPUT 1 "Sum";
    .port_info 4 /OUTPUT 1 "Cout";
L_0x59b8065c8420 .functor XOR 1, L_0x59b8065c8890, L_0x59b8065c8a20, C4<0>, C4<0>;
L_0x59b8065c8490 .functor XOR 1, L_0x59b8065c8420, L_0x59b8065c8b50, C4<0>, C4<0>;
L_0x59b8065c8500 .functor AND 1, L_0x59b8065c8890, L_0x59b8065c8a20, C4<1>, C4<1>;
L_0x59b8065c8570 .functor AND 1, L_0x59b8065c8a20, L_0x59b8065c8b50, C4<1>, C4<1>;
L_0x59b8065c8610 .functor OR 1, L_0x59b8065c8500, L_0x59b8065c8570, C4<0>, C4<0>;
L_0x59b8065c86d0 .functor AND 1, L_0x59b8065c8b50, L_0x59b8065c8890, C4<1>, C4<1>;
L_0x59b8065c8780 .functor OR 1, L_0x59b8065c8610, L_0x59b8065c86d0, C4<0>, C4<0>;
v0x59b8065c1730_0 .net "Cin", 0 0, L_0x59b8065c8b50;  1 drivers
v0x59b8065c1810_0 .net "Cout", 0 0, L_0x59b8065c8780;  1 drivers
v0x59b8065c18d0_0 .net "Sum", 0 0, L_0x59b8065c8490;  1 drivers
v0x59b8065c19a0_0 .net *"_ivl_0", 0 0, L_0x59b8065c8420;  1 drivers
v0x59b8065c1a80_0 .net *"_ivl_10", 0 0, L_0x59b8065c86d0;  1 drivers
v0x59b8065c1bb0_0 .net *"_ivl_4", 0 0, L_0x59b8065c8500;  1 drivers
v0x59b8065c1c90_0 .net *"_ivl_6", 0 0, L_0x59b8065c8570;  1 drivers
v0x59b8065c1d70_0 .net *"_ivl_8", 0 0, L_0x59b8065c8610;  1 drivers
v0x59b8065c1e50_0 .net "a", 0 0, L_0x59b8065c8890;  1 drivers
v0x59b8065c1f10_0 .net "b", 0 0, L_0x59b8065c8a20;  1 drivers
S_0x59b8065c2070 .scope generate, "Full_adder_loop[4]" "Full_adder_loop[4]" 2 24, 2 24 0, S_0x59b8065863f0;
 .timescale 0 0;
P_0x59b8065c2270 .param/l "i" 0 2 24, +C4<0100>;
S_0x59b8065c2350 .scope module, "FA" "Full_Adder" 2 25, 2 1 0, S_0x59b8065c2070;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "Cin";
    .port_info 3 /OUTPUT 1 "Sum";
    .port_info 4 /OUTPUT 1 "Cout";
L_0x59b8065c8d80 .functor XOR 1, L_0x59b8065c9220, L_0x59b8065c9350, C4<0>, C4<0>;
L_0x59b8065c8df0 .functor XOR 1, L_0x59b8065c8d80, L_0x59b8065c9500, C4<0>, C4<0>;
L_0x59b8065c8e60 .functor AND 1, L_0x59b8065c9220, L_0x59b8065c9350, C4<1>, C4<1>;
L_0x59b8065c8f00 .functor AND 1, L_0x59b8065c9350, L_0x59b8065c9500, C4<1>, C4<1>;
L_0x59b8065c8fa0 .functor OR 1, L_0x59b8065c8e60, L_0x59b8065c8f00, C4<0>, C4<0>;
L_0x59b8065c9060 .functor AND 1, L_0x59b8065c9500, L_0x59b8065c9220, C4<1>, C4<1>;
L_0x59b8065c9110 .functor OR 1, L_0x59b8065c8fa0, L_0x59b8065c9060, C4<0>, C4<0>;
v0x59b8065c2530_0 .net "Cin", 0 0, L_0x59b8065c9500;  1 drivers
v0x59b8065c2610_0 .net "Cout", 0 0, L_0x59b8065c9110;  1 drivers
v0x59b8065c26d0_0 .net "Sum", 0 0, L_0x59b8065c8df0;  1 drivers
v0x59b8065c2770_0 .net *"_ivl_0", 0 0, L_0x59b8065c8d80;  1 drivers
v0x59b8065c2850_0 .net *"_ivl_10", 0 0, L_0x59b8065c9060;  1 drivers
v0x59b8065c2980_0 .net *"_ivl_4", 0 0, L_0x59b8065c8e60;  1 drivers
v0x59b8065c2a60_0 .net *"_ivl_6", 0 0, L_0x59b8065c8f00;  1 drivers
v0x59b8065c2b40_0 .net *"_ivl_8", 0 0, L_0x59b8065c8fa0;  1 drivers
v0x59b8065c2c20_0 .net "a", 0 0, L_0x59b8065c9220;  1 drivers
v0x59b8065c2ce0_0 .net "b", 0 0, L_0x59b8065c9350;  1 drivers
S_0x59b8065c2e40 .scope generate, "Full_adder_loop[5]" "Full_adder_loop[5]" 2 24, 2 24 0, S_0x59b8065863f0;
 .timescale 0 0;
P_0x59b8065c2ff0 .param/l "i" 0 2 24, +C4<0101>;
S_0x59b8065c30d0 .scope module, "FA" "Full_Adder" 2 25, 2 1 0, S_0x59b8065c2e40;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "Cin";
    .port_info 3 /OUTPUT 1 "Sum";
    .port_info 4 /OUTPUT 1 "Cout";
L_0x59b8065c8d10 .functor XOR 1, L_0x59b8065c9b00, L_0x59b8065c9cc0, C4<0>, C4<0>;
L_0x59b8065c9630 .functor XOR 1, L_0x59b8065c8d10, L_0x59b8065c9df0, C4<0>, C4<0>;
L_0x59b8065c96a0 .functor AND 1, L_0x59b8065c9b00, L_0x59b8065c9cc0, C4<1>, C4<1>;
L_0x59b8065c9740 .functor AND 1, L_0x59b8065c9cc0, L_0x59b8065c9df0, C4<1>, C4<1>;
L_0x59b8065c9830 .functor OR 1, L_0x59b8065c96a0, L_0x59b8065c9740, C4<0>, C4<0>;
L_0x59b8065c9940 .functor AND 1, L_0x59b8065c9df0, L_0x59b8065c9b00, C4<1>, C4<1>;
L_0x59b8065c99f0 .functor OR 1, L_0x59b8065c9830, L_0x59b8065c9940, C4<0>, C4<0>;
v0x59b8065c32b0_0 .net "Cin", 0 0, L_0x59b8065c9df0;  1 drivers
v0x59b8065c3390_0 .net "Cout", 0 0, L_0x59b8065c99f0;  1 drivers
v0x59b8065c3450_0 .net "Sum", 0 0, L_0x59b8065c9630;  1 drivers
v0x59b8065c3520_0 .net *"_ivl_0", 0 0, L_0x59b8065c8d10;  1 drivers
v0x59b8065c3600_0 .net *"_ivl_10", 0 0, L_0x59b8065c9940;  1 drivers
v0x59b8065c3730_0 .net *"_ivl_4", 0 0, L_0x59b8065c96a0;  1 drivers
v0x59b8065c3810_0 .net *"_ivl_6", 0 0, L_0x59b8065c9740;  1 drivers
v0x59b8065c38f0_0 .net *"_ivl_8", 0 0, L_0x59b8065c9830;  1 drivers
v0x59b8065c39d0_0 .net "a", 0 0, L_0x59b8065c9b00;  1 drivers
v0x59b8065c3a90_0 .net "b", 0 0, L_0x59b8065c9cc0;  1 drivers
S_0x59b8065c3bf0 .scope generate, "Full_adder_loop[6]" "Full_adder_loop[6]" 2 24, 2 24 0, S_0x59b8065863f0;
 .timescale 0 0;
P_0x59b8065c3da0 .param/l "i" 0 2 24, +C4<0110>;
S_0x59b8065c3e80 .scope module, "FA" "Full_Adder" 2 25, 2 1 0, S_0x59b8065c3bf0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "Cin";
    .port_info 3 /OUTPUT 1 "Sum";
    .port_info 4 /OUTPUT 1 "Cout";
L_0x59b8065c9fc0 .functor XOR 1, L_0x59b8065ca500, L_0x59b8065ca5a0, C4<0>, C4<0>;
L_0x59b8065ca030 .functor XOR 1, L_0x59b8065c9fc0, L_0x59b8065c9f20, C4<0>, C4<0>;
L_0x59b8065ca0a0 .functor AND 1, L_0x59b8065ca500, L_0x59b8065ca5a0, C4<1>, C4<1>;
L_0x59b8065ca140 .functor AND 1, L_0x59b8065ca5a0, L_0x59b8065c9f20, C4<1>, C4<1>;
L_0x59b8065ca230 .functor OR 1, L_0x59b8065ca0a0, L_0x59b8065ca140, C4<0>, C4<0>;
L_0x59b8065ca340 .functor AND 1, L_0x59b8065c9f20, L_0x59b8065ca500, C4<1>, C4<1>;
L_0x59b8065ca3f0 .functor OR 1, L_0x59b8065ca230, L_0x59b8065ca340, C4<0>, C4<0>;
v0x59b8065c4060_0 .net "Cin", 0 0, L_0x59b8065c9f20;  1 drivers
v0x59b8065c4140_0 .net "Cout", 0 0, L_0x59b8065ca3f0;  1 drivers
v0x59b8065c4200_0 .net "Sum", 0 0, L_0x59b8065ca030;  1 drivers
v0x59b8065c42d0_0 .net *"_ivl_0", 0 0, L_0x59b8065c9fc0;  1 drivers
v0x59b8065c43b0_0 .net *"_ivl_10", 0 0, L_0x59b8065ca340;  1 drivers
v0x59b8065c44e0_0 .net *"_ivl_4", 0 0, L_0x59b8065ca0a0;  1 drivers
v0x59b8065c45c0_0 .net *"_ivl_6", 0 0, L_0x59b8065ca140;  1 drivers
v0x59b8065c46a0_0 .net *"_ivl_8", 0 0, L_0x59b8065ca230;  1 drivers
v0x59b8065c4780_0 .net "a", 0 0, L_0x59b8065ca500;  1 drivers
v0x59b8065c4840_0 .net "b", 0 0, L_0x59b8065ca5a0;  1 drivers
S_0x59b8065c49a0 .scope generate, "Full_adder_loop[7]" "Full_adder_loop[7]" 2 24, 2 24 0, S_0x59b8065863f0;
 .timescale 0 0;
P_0x59b8065c4b50 .param/l "i" 0 2 24, +C4<0111>;
S_0x59b8065c4c30 .scope module, "FA" "Full_Adder" 2 25, 2 1 0, S_0x59b8065c49a0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "Cin";
    .port_info 3 /OUTPUT 1 "Sum";
    .port_info 4 /OUTPUT 1 "Cout";
L_0x59b8065ca6f0 .functor XOR 1, L_0x59b8065cac30, L_0x59b8065cae20, C4<0>, C4<0>;
L_0x59b8065ca760 .functor XOR 1, L_0x59b8065ca6f0, L_0x59b8065caf50, C4<0>, C4<0>;
L_0x59b8065ca7d0 .functor AND 1, L_0x59b8065cac30, L_0x59b8065cae20, C4<1>, C4<1>;
L_0x59b8065ca870 .functor AND 1, L_0x59b8065cae20, L_0x59b8065caf50, C4<1>, C4<1>;
L_0x59b8065ca960 .functor OR 1, L_0x59b8065ca7d0, L_0x59b8065ca870, C4<0>, C4<0>;
L_0x59b8065caa70 .functor AND 1, L_0x59b8065caf50, L_0x59b8065cac30, C4<1>, C4<1>;
L_0x59b8065cab20 .functor OR 1, L_0x59b8065ca960, L_0x59b8065caa70, C4<0>, C4<0>;
v0x59b8065c4e90_0 .net "Cin", 0 0, L_0x59b8065caf50;  1 drivers
v0x59b8065c4f70_0 .net "Cout", 0 0, L_0x59b8065cab20;  1 drivers
v0x59b8065c5030_0 .net "Sum", 0 0, L_0x59b8065ca760;  1 drivers
v0x59b8065c5100_0 .net *"_ivl_0", 0 0, L_0x59b8065ca6f0;  1 drivers
v0x59b8065c51e0_0 .net *"_ivl_10", 0 0, L_0x59b8065caa70;  1 drivers
v0x59b8065c5310_0 .net *"_ivl_4", 0 0, L_0x59b8065ca7d0;  1 drivers
v0x59b8065c53f0_0 .net *"_ivl_6", 0 0, L_0x59b8065ca870;  1 drivers
v0x59b8065c54d0_0 .net *"_ivl_8", 0 0, L_0x59b8065ca960;  1 drivers
v0x59b8065c55b0_0 .net "a", 0 0, L_0x59b8065cac30;  1 drivers
v0x59b8065c5700_0 .net "b", 0 0, L_0x59b8065cae20;  1 drivers
    .scope S_0x59b80659ec10;
T_0 ;
    %vpi_call 2 46 "$display", "A  B Cin |  Sum Cout\012" {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x59b8065c6330_0, 0, 32;
T_0.0 ;
    %load/vec4 v0x59b8065c6330_0;
    %cmpi/s 256, 0, 32;
    %jmp/0xz T_0.1, 5;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x59b8065c63d0_0, 0, 32;
T_0.2 ;
    %load/vec4 v0x59b8065c63d0_0;
    %cmpi/s 256, 0, 32;
    %jmp/0xz T_0.3, 5;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x59b8065c6490_0, 0, 32;
T_0.4 ;
    %load/vec4 v0x59b8065c6490_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_0.5, 5;
    %load/vec4 v0x59b8065c6330_0;
    %pad/s 8;
    %store/vec4 v0x59b8065c6170_0, 0, 8;
    %load/vec4 v0x59b8065c63d0_0;
    %pad/s 8;
    %store/vec4 v0x59b8065c6240_0, 0, 8;
    %load/vec4 v0x59b8065c6490_0;
    %pad/s 1;
    %store/vec4 v0x59b8065c5ee0_0, 0, 1;
    %delay 10, 0;
    %vpi_call 2 54 "$display", "%d  %d  %d  |   %d  %d\012", v0x59b8065c6170_0, v0x59b8065c6240_0, v0x59b8065c5ee0_0, v0x59b8065c6070_0, v0x59b8065c5fa0_0 {0 0 0};
    %load/vec4 v0x59b8065c6490_0;
    %addi 1, 0, 32;
    %store/vec4 v0x59b8065c6490_0, 0, 32;
    %jmp T_0.4;
T_0.5 ;
    %load/vec4 v0x59b8065c63d0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x59b8065c63d0_0, 0, 32;
    %jmp T_0.2;
T_0.3 ;
    %load/vec4 v0x59b8065c6330_0;
    %addi 1, 0, 32;
    %store/vec4 v0x59b8065c6330_0, 0, 32;
    %jmp T_0.0;
T_0.1 ;
    %end;
    .thread T_0;
# The file index is used to find the file name in the following table.
:file_names 3;
    "N/A";
    "<interactive>";
    "test.v";
