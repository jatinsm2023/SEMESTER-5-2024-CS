Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | FLO_CONSTANT
    3                   | INT_CONSTANT
    4                   | STRING_LITERAL
    5                   | LEFTPAR expression RIGHTPAR

    6 postfix_expression: primary_expression
    7                   | postfix_expression LEFTBRACKET expression RIGHTBRACKET
    8                   | postfix_expression LEFTPAR argument_expression_list_opt RIGHTPAR
    9                   | postfix_expression DOT IDENTIFIER
   10                   | postfix_expression ARROW IDENTIFIER
   11                   | postfix_expression INCREMENT
   12                   | postfix_expression DECREMENT
   13                   | LEFTPAR type_name RIGHTPAR LEFTBRACE initializer_list RIGHTBRACE
   14                   | LEFTPAR type_name RIGHTPAR LEFTBRACE initializer_list COMMA RIGHTBRACE

   15 argument_expression_list_opt: argument_expression_list
   16                             | ε

   17 argument_expression_list: assignment_expression
   18                         | argument_expression_list COMMA assignment_expression

   19 unary_expression: postfix_expression
   20                 | INCREMENT unary_expression
   21                 | DECREMENT unary_expression
   22                 | unary_operator cast_expression
   23                 | SIZEOF unary_expression
   24                 | SIZEOF LEFTPAR type_name RIGHTPAR

   25 unary_operator: PLUS
   26               | MINUS
   27               | NOT
   28               | TILDA
   29               | AND
   30               | MULTIPLY

   31 cast_expression: unary_expression
   32                | LEFTPAR type_name RIGHTPAR cast_expression

   33 multiplicative_expression: cast_expression
   34                          | multiplicative_expression MULTIPLY cast_expression
   35                          | multiplicative_expression DIV cast_expression
   36                          | multiplicative_expression MOD cast_expression

   37 additive_expression: multiplicative_expression
   38                    | additive_expression PLUS multiplicative_expression
   39                    | additive_expression MINUS multiplicative_expression

   40 shift_expression: additive_expression
   41                 | shift_expression LEFTSHIFT additive_expression
   42                 | shift_expression RIGHTSHIFT additive_expression

   43 relational_expression: shift_expression
   44                      | relational_expression LESS shift_expression
   45                      | relational_expression GREATER shift_expression
   46                      | relational_expression LESSEQUAL shift_expression
   47                      | relational_expression GREATEREQUAL shift_expression

   48 equality_expression: relational_expression
   49                    | equality_expression DOUBLEEQUAL relational_expression
   50                    | equality_expression NOTEQUAL relational_expression

   51 AND_expression: equality_expression
   52               | AND_expression AND equality_expression

   53 exclusive_OR_expression: AND_expression
   54                        | exclusive_OR_expression XOR AND_expression

   55 inclusive_OR_expression: exclusive_OR_expression
   56                        | inclusive_OR_expression OR exclusive_OR_expression

   57 logical_AND_expression: inclusive_OR_expression
   58                       | logical_AND_expression DOUBLEAND M inclusive_OR_expression

   59 logical_OR_expression: logical_AND_expression
   60                      | logical_OR_expression DOUBLEOR M logical_AND_expression

   61 conditional_expression: logical_OR_expression
   62                       | logical_OR_expression N QUESTIONMARK M expression N COLON M conditional_expression

   63 M: ε

   64 N: ε

   65 assignment_expression: conditional_expression
   66                      | unary_expression assignment_operator assignment_expression

   67 assignment_operator: EQUAL
   68                    | MULTIPLYEQUAL
   69                    | DIVEQUAL
   70                    | MODEQUAL
   71                    | PLUSEQUAL
   72                    | MINUSEQUAL
   73                    | LEFTSHIFTEQUAL
   74                    | RIGHTSHIFTEQUAL
   75                    | ANDEQUAL
   76                    | XOREQUAL
   77                    | OREQUAL

   78 expression: assignment_expression
   79           | expression COMMA assignment_expression

   80 constant_expression: conditional_expression

   81 declaration: declaration_specifiers init_declarator_list SEMICOLON
   82            | declaration_specifiers SEMICOLON

   83 declaration_specifiers: storage_class_specifier declaration_specifiers
   84                       | storage_class_specifier
   85                       | type_specifier declaration_specifiers
   86                       | type_specifier
   87                       | type_qualifier declaration_specifiers
   88                       | type_qualifier
   89                       | function_specifier declaration_specifiers
   90                       | function_specifier

   91 init_declarator_list: init_declarator
   92                     | init_declarator_list COMMA init_declarator

   93 init_declarator: declarator EQUAL initializer
   94                | declarator

   95 storage_class_specifier: EXTERN
   96                        | STATIC
   97                        | AUTO
   98                        | REGISTER

   99 type_specifier: VOID
  100               | CHAR
  101               | SHORT
  102               | INT
  103               | LONG
  104               | FLOAT
  105               | DOUBLE
  106               | SIGNED
  107               | UNSIGNED
  108               | BOOL
  109               | COMPLEX
  110               | IMAGINARY

  111 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  112                         | type_qualifier specifier_qualifier_list_opt

  113 specifier_qualifier_list_opt: specifier_qualifier_list
  114                             | ε

  115 type_qualifier: CONST
  116               | RESTRICT
  117               | VOLATILE

  118 function_specifier: INLINE

  119 declarator: pointer direct_declarator
  120           | direct_declarator

  121 direct_declarator: IDENTIFIER
  122                  | LEFTPAR declarator RIGHTPAR
  123                  | direct_declarator LEFTBRACKET RIGHTBRACKET
  124                  | direct_declarator LEFTBRACKET type_qualifier_list RIGHTBRACKET
  125                  | direct_declarator LEFTBRACKET assignment_expression RIGHTBRACKET
  126                  | direct_declarator LEFTBRACKET type_qualifier_list assignment_expression RIGHTBRACKET
  127                  | direct_declarator LEFTBRACKET STATIC type_qualifier_list assignment_expression RIGHTBRACKET
  128                  | direct_declarator LEFTBRACKET STATIC assignment_expression RIGHTBRACKET
  129                  | direct_declarator LEFTBRACKET type_qualifier_list STATIC assignment_expression RIGHTBRACKET
  130                  | direct_declarator LEFTBRACKET MULTIPLY RIGHTBRACKET
  131                  | direct_declarator LEFTBRACKET type_qualifier_list MULTIPLY RIGHTBRACKET
  132                  | direct_declarator LEFTPAR change_table parameter_type_list RIGHTPAR
  133                  | direct_declarator LEFTPAR identifier_list RIGHTPAR
  134                  | direct_declarator LEFTPAR change_table RIGHTPAR

  135 type_qualifier_list_opt: type_qualifier_list
  136                        | ε

  137 pointer: MULTIPLY type_qualifier_list_opt
  138        | MULTIPLY type_qualifier_list_opt pointer

  139 type_qualifier_list: type_qualifier
  140                    | type_qualifier_list type_qualifier

  141 parameter_type_list: parameter_list
  142                    | parameter_list COMMA ELLIPSIS

  143 parameter_list: parameter_declaration
  144               | parameter_list COMMA parameter_declaration

  145 parameter_declaration: declaration_specifiers declarator
  146                      | declaration_specifiers

  147 identifier_list: IDENTIFIER
  148                | identifier_list COMMA IDENTIFIER

  149 type_name: specifier_qualifier_list

  150 initializer: assignment_expression
  151            | LEFTBRACE initializer_list RIGHTBRACE
  152            | LEFTBRACE initializer_list COMMA RIGHTBRACE

  153 initializer_list: initializer
  154                 | designation initializer
  155                 | initializer_list COMMA initializer
  156                 | initializer_list COMMA designation initializer

  157 designation: designator_list EQUAL

  158 designator_list: designator
  159                | designator_list designator

  160 designator: LEFTBRACKET constant_expression RIGHTBRACKET
  161           | DOT IDENTIFIER

  162 statement: labeled_statement
  163          | compound_statement
  164          | expression_statement
  165          | selection_statement
  166          | iteration_statement
  167          | jump_statement

  168 loop_statement: labeled_statement
  169               | expression_statement
  170               | selection_statement
  171               | iteration_statement
  172               | jump_statement

  173 labeled_statement: IDENTIFIER COLON statement
  174                  | CASE constant_expression COLON statement
  175                  | DEFAULT COLON statement

  176 compound_statement: LEFTBRACE X change_table block_item_list_opt RIGHTBRACE

  177 block_item_list_opt: block_item_list
  178                    | ε

  179 block_item_list: block_item
  180                | block_item_list M block_item

  181 block_item: declaration
  182           | statement

  183 expression_statement: SEMICOLON
  184                     | expression SEMICOLON

  185 selection_statement: IF LEFTPAR expression N RIGHTPAR M statement N
  186                    | IF LEFTPAR expression N RIGHTPAR M statement N ELSE M statement
  187                    | SWITCH LEFTPAR expression RIGHTPAR statement

  188 iteration_statement: WHILE W LEFTPAR X change_table M expression RIGHTPAR M loop_statement
  189                    | WHILE W LEFTPAR X change_table M expression RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE
  190                    | DO D M loop_statement M WHILE LEFTPAR expression RIGHTPAR SEMICOLON
  191                    | DO D LEFTBRACE M block_item_list_opt RIGHTBRACE M WHILE LEFTPAR expression RIGHTPAR SEMICOLON
  192                    | FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M loop_statement
  193                    | FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M loop_statement
  194                    | FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE
  195                    | FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

  196 F: ε

  197 W: ε

  198 D: ε

  199 X: ε

  200 change_table: ε

  201 jump_statement: GOTO IDENTIFIER SEMICOLON
  202               | CONTINUE SEMICOLON
  203               | BREAK SEMICOLON
  204               | RETURN SEMICOLON
  205               | RETURN expression SEMICOLON

  206 translation_unit: translation_unit external_declaration
  207                 | external_declaration

  208 external_declaration: function_definition
  209                     | declaration

  210 function_definition: declaration_specifiers declarator declaration_list_opt change_table LEFTBRACE block_item_list_opt RIGHTBRACE

  211 declaration_list_opt: declaration_list
  212                     | ε

  213 declaration_list: declaration
  214                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <syent> (258) 1 9 10 121 147 148 161 173 201
    FLO_CONSTANT <charval> (259) 2
    INT_CONSTANT <ival> (260) 3
    STRING_LITERAL <charval> (261) 4
    SIZEOF (262) 23 24
    EXTERN (263) 95
    STATIC (264) 96 127 128 129
    AUTO (265) 97
    REGISTER (266) 98
    VOID (267) 99
    CHAR (268) 100
    SHORT (269) 101
    INT (270) 102
    LONG (271) 103
    FLOAT (272) 104
    DOUBLE (273) 105
    SIGNED (274) 106
    UNSIGNED (275) 107
    BOOL (276) 108
    COMPLEX (277) 109
    IMAGINARY (278) 110
    CONST (279) 115
    RESTRICT (280) 116
    VOLATILE (281) 117
    INLINE (282) 118
    ELLIPSIS (283) 142
    CASE (284) 174
    DEFAULT (285) 175
    IF (286) 185 186
    ELSE (287) 186
    SWITCH (288) 187
    WHILE (289) 188 189 190 191
    DO (290) 190 191
    FOR (291) 192 193 194 195
    GOTO (292) 201
    CONTINUE (293) 202
    BREAK (294) 203
    RETURN (295) 204 205
    ARROW (296) 10
    INCREMENT (297) 11 20
    DECREMENT (298) 12 21
    LEFTSHIFT (299) 41
    RIGHTSHIFT (300) 42
    LESSEQUAL (301) 46
    GREATEREQUAL (302) 47
    DOUBLEEQUAL (303) 49
    NOTEQUAL (304) 50
    DOUBLEAND (305) 58
    DOUBLEOR (306) 60
    PLUSEQUAL (307) 71
    MINUSEQUAL (308) 72
    MULTIPLYEQUAL (309) 68
    DIVEQUAL (310) 69
    MODEQUAL (311) 70
    LEFTSHIFTEQUAL (312) 73
    RIGHTSHIFTEQUAL (313) 74
    ANDEQUAL (314) 75
    OREQUAL (315) 77
    XOREQUAL (316) 76
    PLUS (317) 25 38
    MINUS (318) 26 39
    MULTIPLY (319) 30 34 130 131 137 138
    DIV (320) 35
    MOD (321) 36
    TILDA (322) 28
    NOT (323) 27
    AND (324) 29 52
    EQUAL (325) 67 93 157
    SEMICOLON (326) 81 82 183 184 190 191 201 202 203 204 205
    COMMA (327) 14 18 79 92 142 144 148 152 155 156
    DOT (328) 9 161
    LESS (329) 44
    GREATER (330) 45
    OR (331) 56
    XOR (332) 54
    LOWER_THAN_ELSE (333)
    LEFTPAR (334) 5 8 13 14 24 32 122 132 133 134 185 186 187 188 189 190 191 192 193 194 195
    RIGHTPAR (335) 5 8 13 14 24 32 122 132 133 134 185 186 187 188 189 190 191 192 193 194 195
    LEFTBRACE (336) 13 14 151 152 176 189 191 194 195 210
    RIGHTBRACE (337) 13 14 151 152 176 189 191 194 195 210
    LEFTBRACKET (338) 7 123 124 125 126 127 128 129 130 131 160
    RIGHTBRACKET (339) 7 123 124 125 126 127 128 129 130 131 160
    COLON (340) 62 173 174 175
    QUESTIONMARK (341) 62


Nonterminals, with rules where they appear

    $accept (87)
        on left: 0
    primary_expression <expr> (88)
        on left: 1 2 3 4 5
        on right: 6
    postfix_expression <arr> (89)
        on left: 6 7 8 9 10 11 12 13 14
        on right: 7 8 9 10 11 12 19
    argument_expression_list_opt <numparams> (90)
        on left: 15 16
        on right: 8
    argument_expression_list <numparams> (91)
        on left: 17 18
        on right: 15 18
    unary_expression <arr> (92)
        on left: 19 20 21 22 23 24
        on right: 20 21 23 31 66
    unary_operator <unary_op> (93)
        on left: 25 26 27 28 29 30
        on right: 22
    cast_expression <arr> (94)
        on left: 31 32
        on right: 22 32 33 34 35 36
    multiplicative_expression <expr> (95)
        on left: 33 34 35 36
        on right: 34 35 36 37 38 39
    additive_expression <expr> (96)
        on left: 37 38 39
        on right: 38 39 40 41 42
    shift_expression <expr> (97)
        on left: 40 41 42
        on right: 41 42 43 44 45 46 47
    relational_expression <expr> (98)
        on left: 43 44 45 46 47
        on right: 44 45 46 47 48 49 50
    equality_expression <expr> (99)
        on left: 48 49 50
        on right: 49 50 51 52
    AND_expression <expr> (100)
        on left: 51 52
        on right: 52 53 54
    exclusive_OR_expression <expr> (101)
        on left: 53 54
        on right: 54 55 56
    inclusive_OR_expression <expr> (102)
        on left: 55 56
        on right: 56 57 58
    logical_AND_expression <expr> (103)
        on left: 57 58
        on right: 58 59 60
    logical_OR_expression <expr> (104)
        on left: 59 60
        on right: 60 61 62
    conditional_expression <expr> (105)
        on left: 61 62
        on right: 62 65 80
    M <instruction> (106)
        on left: 63
        on right: 58 60 62 180 185 186 188 189 190 191 192 193 194 195
    N <stmt> (107)
        on left: 64
        on right: 62 185 186 192 193 194 195
    assignment_expression <expr> (108)
        on left: 65 66
        on right: 17 18 66 78 79 125 126 127 128 129 150
    assignment_operator (109)
        on left: 67 68 69 70 71 72 73 74 75 76 77
        on right: 66
    expression <expr> (110)
        on left: 78 79
        on right: 5 7 62 79 184 185 186 187 188 189 190 191 192 193 194 195 205
    constant_expression (111)
        on left: 80
        on right: 160 174
    declaration (112)
        on left: 81 82
        on right: 181 192 194 209 213 214
    declaration_specifiers (113)
        on left: 83 84 85 86 87 88 89 90
        on right: 81 82 83 85 87 89 145 146 210
    init_declarator_list (114)
        on left: 91 92
        on right: 81 92
    init_declarator <syent> (115)
        on left: 93 94
        on right: 91 92
    storage_class_specifier (116)
        on left: 95 96 97 98
        on right: 83 84
    type_specifier (117)
        on left: 99 100 101 102 103 104 105 106 107 108 109 110
        on right: 85 86 111
    specifier_qualifier_list (118)
        on left: 111 112
        on right: 113 149
    specifier_qualifier_list_opt (119)
        on left: 113 114
        on right: 111 112
    type_qualifier (120)
        on left: 115 116 117
        on right: 87 88 112 139 140
    function_specifier (121)
        on left: 118
        on right: 89 90
    declarator <syent> (122)
        on left: 119 120
        on right: 93 94 122 145 210
    direct_declarator <syent> (123)
        on left: 121 122 123 124 125 126 127 128 129 130 131 132 133 134
        on right: 119 120 123 124 125 126 127 128 129 130 131 132 133 134
    type_qualifier_list_opt (124)
        on left: 135 136
        on right: 137 138
    pointer <syenttype> (125)
        on left: 137 138
        on right: 119 138
    type_qualifier_list (126)
        on left: 139 140
        on right: 124 126 127 129 131 135 140
    parameter_type_list (127)
        on left: 141 142
        on right: 132
    parameter_list (128)
        on left: 143 144
        on right: 141 142 144
    parameter_declaration (129)
        on left: 145 146
        on right: 143 144
    identifier_list (130)
        on left: 147 148
        on right: 133 148
    type_name (131)
        on left: 149
        on right: 13 14 24 32
    initializer <syent> (132)
        on left: 150 151 152
        on right: 93 153 154 155 156
    initializer_list (133)
        on left: 153 154 155 156
        on right: 13 14 151 152 155 156
    designation (134)
        on left: 157
        on right: 154 156
    designator_list (135)
        on left: 158 159
        on right: 157 159
    designator (136)
        on left: 160 161
        on right: 158 159
    statement <stmt> (137)
        on left: 162 163 164 165 166 167
        on right: 173 174 175 182 185 186 187
    loop_statement <stmt> (138)
        on left: 168 169 170 171 172
        on right: 188 190 192 193
    labeled_statement <stmt> (139)
        on left: 173 174 175
        on right: 162 168
    compound_statement <stmt> (140)
        on left: 176
        on right: 163
    block_item_list_opt <stmt> (141)
        on left: 177 178
        on right: 176 189 191 194 195 210
    block_item_list <stmt> (142)
        on left: 179 180
        on right: 177 180
    block_item <stmt> (143)
        on left: 181 182
        on right: 179 180
    expression_statement <expr> (144)
        on left: 183 184
        on right: 164 169 192 193 194 195
    selection_statement <stmt> (145)
        on left: 185 186 187
        on right: 165 170
    iteration_statement <stmt> (146)
        on left: 188 189 190 191 192 193 194 195
        on right: 166 171
    F (147)
        on left: 196
        on right: 192 193 194 195
    W (148)
        on left: 197
        on right: 188 189
    D (149)
        on left: 198
        on right: 190 191
    X (150)
        on left: 199
        on right: 176 188 189 192 193 194 195
    change_table (151)
        on left: 200
        on right: 132 134 176 188 189 192 193 194 195 210
    jump_statement <stmt> (152)
        on left: 201 202 203 204 205
        on right: 167 172
    translation_unit (153)
        on left: 206 207
        on right: 0 206
    external_declaration (154)
        on left: 208 209
        on right: 206 207
    function_definition (155)
        on left: 210
        on right: 208
    declaration_list_opt (156)
        on left: 211 212
        on right: 210
    declaration_list (157)
        on left: 213 214
        on right: 211 214


State 0

    0 $accept: • translation_unit $end

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20

    declaration              go to state 21
    declaration_specifiers   go to state 22
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    translation_unit         go to state 27
    external_declaration     go to state 28
    function_definition      go to state 29


State 1

   95 storage_class_specifier: EXTERN •

    $default  reduce using rule 95 (storage_class_specifier)


State 2

   96 storage_class_specifier: STATIC •

    $default  reduce using rule 96 (storage_class_specifier)


State 3

   97 storage_class_specifier: AUTO •

    $default  reduce using rule 97 (storage_class_specifier)


State 4

   98 storage_class_specifier: REGISTER •

    $default  reduce using rule 98 (storage_class_specifier)


State 5

   99 type_specifier: VOID •

    $default  reduce using rule 99 (type_specifier)


State 6

  100 type_specifier: CHAR •

    $default  reduce using rule 100 (type_specifier)


State 7

  101 type_specifier: SHORT •

    $default  reduce using rule 101 (type_specifier)


State 8

  102 type_specifier: INT •

    $default  reduce using rule 102 (type_specifier)


State 9

  103 type_specifier: LONG •

    $default  reduce using rule 103 (type_specifier)


State 10

  104 type_specifier: FLOAT •

    $default  reduce using rule 104 (type_specifier)


State 11

  105 type_specifier: DOUBLE •

    $default  reduce using rule 105 (type_specifier)


State 12

  106 type_specifier: SIGNED •

    $default  reduce using rule 106 (type_specifier)


State 13

  107 type_specifier: UNSIGNED •

    $default  reduce using rule 107 (type_specifier)


State 14

  108 type_specifier: BOOL •

    $default  reduce using rule 108 (type_specifier)


State 15

  109 type_specifier: COMPLEX •

    $default  reduce using rule 109 (type_specifier)


State 16

  110 type_specifier: IMAGINARY •

    $default  reduce using rule 110 (type_specifier)


State 17

  115 type_qualifier: CONST •

    $default  reduce using rule 115 (type_qualifier)


State 18

  116 type_qualifier: RESTRICT •

    $default  reduce using rule 116 (type_qualifier)


State 19

  117 type_qualifier: VOLATILE •

    $default  reduce using rule 117 (type_qualifier)


State 20

  118 function_specifier: INLINE •

    $default  reduce using rule 118 (function_specifier)


State 21

  209 external_declaration: declaration •

    $default  reduce using rule 209 (external_declaration)


State 22

   81 declaration: declaration_specifiers • init_declarator_list SEMICOLON
   82            | declaration_specifiers • SEMICOLON
  210 function_definition: declaration_specifiers • declarator declaration_list_opt change_table LEFTBRACE block_item_list_opt RIGHTBRACE

    IDENTIFIER  shift, and go to state 30
    MULTIPLY    shift, and go to state 31
    SEMICOLON   shift, and go to state 32
    LEFTPAR     shift, and go to state 33

    init_declarator_list  go to state 34
    init_declarator       go to state 35
    declarator            go to state 36
    direct_declarator     go to state 37
    pointer               go to state 38


State 23

   83 declaration_specifiers: storage_class_specifier • declaration_specifiers
   84                       | storage_class_specifier •

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20

    $default  reduce using rule 84 (declaration_specifiers)

    declaration_specifiers   go to state 39
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 24

   85 declaration_specifiers: type_specifier • declaration_specifiers
   86                       | type_specifier •

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20

    $default  reduce using rule 86 (declaration_specifiers)

    declaration_specifiers   go to state 40
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 25

   87 declaration_specifiers: type_qualifier • declaration_specifiers
   88                       | type_qualifier •

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20

    $default  reduce using rule 88 (declaration_specifiers)

    declaration_specifiers   go to state 41
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 26

   89 declaration_specifiers: function_specifier • declaration_specifiers
   90                       | function_specifier •

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20

    $default  reduce using rule 90 (declaration_specifiers)

    declaration_specifiers   go to state 42
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 27

    0 $accept: translation_unit • $end
  206 translation_unit: translation_unit • external_declaration

    $end       shift, and go to state 43
    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20

    declaration              go to state 21
    declaration_specifiers   go to state 22
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    external_declaration     go to state 44
    function_definition      go to state 29


State 28

  207 translation_unit: external_declaration •

    $default  reduce using rule 207 (translation_unit)


State 29

  208 external_declaration: function_definition •

    $default  reduce using rule 208 (external_declaration)


State 30

  121 direct_declarator: IDENTIFIER •

    $default  reduce using rule 121 (direct_declarator)


State 31

  137 pointer: MULTIPLY • type_qualifier_list_opt
  138        | MULTIPLY • type_qualifier_list_opt pointer

    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 18
    VOLATILE  shift, and go to state 19

    $default  reduce using rule 136 (type_qualifier_list_opt)

    type_qualifier           go to state 45
    type_qualifier_list_opt  go to state 46
    type_qualifier_list      go to state 47


State 32

   82 declaration: declaration_specifiers SEMICOLON •

    $default  reduce using rule 82 (declaration)


State 33

  122 direct_declarator: LEFTPAR • declarator RIGHTPAR

    IDENTIFIER  shift, and go to state 30
    MULTIPLY    shift, and go to state 31
    LEFTPAR     shift, and go to state 33

    declarator         go to state 48
    direct_declarator  go to state 37
    pointer            go to state 38


State 34

   81 declaration: declaration_specifiers init_declarator_list • SEMICOLON
   92 init_declarator_list: init_declarator_list • COMMA init_declarator

    SEMICOLON  shift, and go to state 49
    COMMA      shift, and go to state 50


State 35

   91 init_declarator_list: init_declarator •

    $default  reduce using rule 91 (init_declarator_list)


State 36

   93 init_declarator: declarator • EQUAL initializer
   94                | declarator •
  210 function_definition: declaration_specifiers declarator • declaration_list_opt change_table LEFTBRACE block_item_list_opt RIGHTBRACE

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20
    EQUAL      shift, and go to state 51

    LEFTBRACE  reduce using rule 212 (declaration_list_opt)
    $default   reduce using rule 94 (init_declarator)

    declaration              go to state 52
    declaration_specifiers   go to state 53
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    declaration_list_opt     go to state 54
    declaration_list         go to state 55


State 37

  120 declarator: direct_declarator •
  123 direct_declarator: direct_declarator • LEFTBRACKET RIGHTBRACKET
  124                  | direct_declarator • LEFTBRACKET type_qualifier_list RIGHTBRACKET
  125                  | direct_declarator • LEFTBRACKET assignment_expression RIGHTBRACKET
  126                  | direct_declarator • LEFTBRACKET type_qualifier_list assignment_expression RIGHTBRACKET
  127                  | direct_declarator • LEFTBRACKET STATIC type_qualifier_list assignment_expression RIGHTBRACKET
  128                  | direct_declarator • LEFTBRACKET STATIC assignment_expression RIGHTBRACKET
  129                  | direct_declarator • LEFTBRACKET type_qualifier_list STATIC assignment_expression RIGHTBRACKET
  130                  | direct_declarator • LEFTBRACKET MULTIPLY RIGHTBRACKET
  131                  | direct_declarator • LEFTBRACKET type_qualifier_list MULTIPLY RIGHTBRACKET
  132                  | direct_declarator • LEFTPAR change_table parameter_type_list RIGHTPAR
  133                  | direct_declarator • LEFTPAR identifier_list RIGHTPAR
  134                  | direct_declarator • LEFTPAR change_table RIGHTPAR

    LEFTPAR      shift, and go to state 56
    LEFTBRACKET  shift, and go to state 57

    $default  reduce using rule 120 (declarator)


State 38

  119 declarator: pointer • direct_declarator

    IDENTIFIER  shift, and go to state 30
    LEFTPAR     shift, and go to state 33

    direct_declarator  go to state 58


State 39

   83 declaration_specifiers: storage_class_specifier declaration_specifiers •

    $default  reduce using rule 83 (declaration_specifiers)


State 40

   85 declaration_specifiers: type_specifier declaration_specifiers •

    $default  reduce using rule 85 (declaration_specifiers)


State 41

   87 declaration_specifiers: type_qualifier declaration_specifiers •

    $default  reduce using rule 87 (declaration_specifiers)


State 42

   89 declaration_specifiers: function_specifier declaration_specifiers •

    $default  reduce using rule 89 (declaration_specifiers)


State 43

    0 $accept: translation_unit $end •

    $default  accept


State 44

  206 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 206 (translation_unit)


State 45

  139 type_qualifier_list: type_qualifier •

    $default  reduce using rule 139 (type_qualifier_list)


State 46

  137 pointer: MULTIPLY type_qualifier_list_opt •
  138        | MULTIPLY type_qualifier_list_opt • pointer

    MULTIPLY  shift, and go to state 31

    $default  reduce using rule 137 (pointer)

    pointer  go to state 59


State 47

  135 type_qualifier_list_opt: type_qualifier_list •
  140 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 18
    VOLATILE  shift, and go to state 19

    $default  reduce using rule 135 (type_qualifier_list_opt)

    type_qualifier  go to state 60


State 48

  122 direct_declarator: LEFTPAR declarator • RIGHTPAR

    RIGHTPAR  shift, and go to state 61


State 49

   81 declaration: declaration_specifiers init_declarator_list SEMICOLON •

    $default  reduce using rule 81 (declaration)


State 50

   92 init_declarator_list: init_declarator_list COMMA • init_declarator

    IDENTIFIER  shift, and go to state 30
    MULTIPLY    shift, and go to state 31
    LEFTPAR     shift, and go to state 33

    init_declarator    go to state 62
    declarator         go to state 63
    direct_declarator  go to state 37
    pointer            go to state 38


State 51

   93 init_declarator: declarator EQUAL • initializer

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 78

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 95
    initializer                go to state 96


State 52

  213 declaration_list: declaration •

    $default  reduce using rule 213 (declaration_list)


State 53

   81 declaration: declaration_specifiers • init_declarator_list SEMICOLON
   82            | declaration_specifiers • SEMICOLON

    IDENTIFIER  shift, and go to state 30
    MULTIPLY    shift, and go to state 31
    SEMICOLON   shift, and go to state 32
    LEFTPAR     shift, and go to state 33

    init_declarator_list  go to state 34
    init_declarator       go to state 35
    declarator            go to state 63
    direct_declarator     go to state 37
    pointer               go to state 38


State 54

  210 function_definition: declaration_specifiers declarator declaration_list_opt • change_table LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 200 (change_table)

    change_table  go to state 97


State 55

  211 declaration_list_opt: declaration_list •
  214 declaration_list: declaration_list • declaration

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20

    $default  reduce using rule 211 (declaration_list_opt)

    declaration              go to state 98
    declaration_specifiers   go to state 53
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 56

  132 direct_declarator: direct_declarator LEFTPAR • change_table parameter_type_list RIGHTPAR
  133                  | direct_declarator LEFTPAR • identifier_list RIGHTPAR
  134                  | direct_declarator LEFTPAR • change_table RIGHTPAR

    IDENTIFIER  shift, and go to state 99

    $default  reduce using rule 200 (change_table)

    identifier_list  go to state 100
    change_table     go to state 101


State 57

  123 direct_declarator: direct_declarator LEFTBRACKET • RIGHTBRACKET
  124                  | direct_declarator LEFTBRACKET • type_qualifier_list RIGHTBRACKET
  125                  | direct_declarator LEFTBRACKET • assignment_expression RIGHTBRACKET
  126                  | direct_declarator LEFTBRACKET • type_qualifier_list assignment_expression RIGHTBRACKET
  127                  | direct_declarator LEFTBRACKET • STATIC type_qualifier_list assignment_expression RIGHTBRACKET
  128                  | direct_declarator LEFTBRACKET • STATIC assignment_expression RIGHTBRACKET
  129                  | direct_declarator LEFTBRACKET • type_qualifier_list STATIC assignment_expression RIGHTBRACKET
  130                  | direct_declarator LEFTBRACKET • MULTIPLY RIGHTBRACKET
  131                  | direct_declarator LEFTBRACKET • type_qualifier_list MULTIPLY RIGHTBRACKET

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    STATIC          shift, and go to state 102
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 103
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77
    RIGHTBRACKET    shift, and go to state 104

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 105
    type_qualifier             go to state 45
    type_qualifier_list        go to state 106


State 58

  119 declarator: pointer direct_declarator •
  123 direct_declarator: direct_declarator • LEFTBRACKET RIGHTBRACKET
  124                  | direct_declarator • LEFTBRACKET type_qualifier_list RIGHTBRACKET
  125                  | direct_declarator • LEFTBRACKET assignment_expression RIGHTBRACKET
  126                  | direct_declarator • LEFTBRACKET type_qualifier_list assignment_expression RIGHTBRACKET
  127                  | direct_declarator • LEFTBRACKET STATIC type_qualifier_list assignment_expression RIGHTBRACKET
  128                  | direct_declarator • LEFTBRACKET STATIC assignment_expression RIGHTBRACKET
  129                  | direct_declarator • LEFTBRACKET type_qualifier_list STATIC assignment_expression RIGHTBRACKET
  130                  | direct_declarator • LEFTBRACKET MULTIPLY RIGHTBRACKET
  131                  | direct_declarator • LEFTBRACKET type_qualifier_list MULTIPLY RIGHTBRACKET
  132                  | direct_declarator • LEFTPAR change_table parameter_type_list RIGHTPAR
  133                  | direct_declarator • LEFTPAR identifier_list RIGHTPAR
  134                  | direct_declarator • LEFTPAR change_table RIGHTPAR

    LEFTPAR      shift, and go to state 56
    LEFTBRACKET  shift, and go to state 57

    $default  reduce using rule 119 (declarator)


State 59

  138 pointer: MULTIPLY type_qualifier_list_opt pointer •

    $default  reduce using rule 138 (pointer)


State 60

  140 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 140 (type_qualifier_list)


State 61

  122 direct_declarator: LEFTPAR declarator RIGHTPAR •

    $default  reduce using rule 122 (direct_declarator)


State 62

   92 init_declarator_list: init_declarator_list COMMA init_declarator •

    $default  reduce using rule 92 (init_declarator_list)


State 63

   93 init_declarator: declarator • EQUAL initializer
   94                | declarator •

    EQUAL  shift, and go to state 51

    $default  reduce using rule 94 (init_declarator)


State 64

    1 primary_expression: IDENTIFIER •

    $default  reduce using rule 1 (primary_expression)


State 65

    2 primary_expression: FLO_CONSTANT •

    $default  reduce using rule 2 (primary_expression)


State 66

    3 primary_expression: INT_CONSTANT •

    $default  reduce using rule 3 (primary_expression)


State 67

    4 primary_expression: STRING_LITERAL •

    $default  reduce using rule 4 (primary_expression)


State 68

   23 unary_expression: SIZEOF • unary_expression
   24                 | SIZEOF • LEFTPAR type_name RIGHTPAR

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 107

    primary_expression  go to state 79
    postfix_expression  go to state 80
    unary_expression    go to state 108
    unary_operator      go to state 82


State 69

   20 unary_expression: INCREMENT • unary_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 109

    primary_expression  go to state 79
    postfix_expression  go to state 80
    unary_expression    go to state 110
    unary_operator      go to state 82


State 70

   21 unary_expression: DECREMENT • unary_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 109

    primary_expression  go to state 79
    postfix_expression  go to state 80
    unary_expression    go to state 111
    unary_operator      go to state 82


State 71

   25 unary_operator: PLUS •

    $default  reduce using rule 25 (unary_operator)


State 72

   26 unary_operator: MINUS •

    $default  reduce using rule 26 (unary_operator)


State 73

   30 unary_operator: MULTIPLY •

    $default  reduce using rule 30 (unary_operator)


State 74

   28 unary_operator: TILDA •

    $default  reduce using rule 28 (unary_operator)


State 75

   27 unary_operator: NOT •

    $default  reduce using rule 27 (unary_operator)


State 76

   29 unary_operator: AND •

    $default  reduce using rule 29 (unary_operator)


State 77

    5 primary_expression: LEFTPAR • expression RIGHTPAR
   13 postfix_expression: LEFTPAR • type_name RIGHTPAR LEFTBRACE initializer_list RIGHTBRACE
   14                   | LEFTPAR • type_name RIGHTPAR LEFTBRACE initializer_list COMMA RIGHTBRACE
   32 cast_expression: LEFTPAR • type_name RIGHTPAR cast_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 113
    type_specifier             go to state 114
    specifier_qualifier_list   go to state 115
    type_qualifier             go to state 116
    type_name                  go to state 117


State 78

  151 initializer: LEFTBRACE • initializer_list RIGHTBRACE
  152            | LEFTBRACE • initializer_list COMMA RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    DOT             shift, and go to state 118
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 78
    LEFTBRACKET     shift, and go to state 119

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 95
    initializer                go to state 120
    initializer_list           go to state 121
    designation                go to state 122
    designator_list            go to state 123
    designator                 go to state 124


State 79

    6 postfix_expression: primary_expression •

    $default  reduce using rule 6 (postfix_expression)


State 80

    7 postfix_expression: postfix_expression • LEFTBRACKET expression RIGHTBRACKET
    8                   | postfix_expression • LEFTPAR argument_expression_list_opt RIGHTPAR
    9                   | postfix_expression • DOT IDENTIFIER
   10                   | postfix_expression • ARROW IDENTIFIER
   11                   | postfix_expression • INCREMENT
   12                   | postfix_expression • DECREMENT
   19 unary_expression: postfix_expression •

    ARROW        shift, and go to state 125
    INCREMENT    shift, and go to state 126
    DECREMENT    shift, and go to state 127
    DOT          shift, and go to state 128
    LEFTPAR      shift, and go to state 129
    LEFTBRACKET  shift, and go to state 130

    $default  reduce using rule 19 (unary_expression)


State 81

   31 cast_expression: unary_expression •
   66 assignment_expression: unary_expression • assignment_operator assignment_expression

    PLUSEQUAL        shift, and go to state 131
    MINUSEQUAL       shift, and go to state 132
    MULTIPLYEQUAL    shift, and go to state 133
    DIVEQUAL         shift, and go to state 134
    MODEQUAL         shift, and go to state 135
    LEFTSHIFTEQUAL   shift, and go to state 136
    RIGHTSHIFTEQUAL  shift, and go to state 137
    ANDEQUAL         shift, and go to state 138
    OREQUAL          shift, and go to state 139
    XOREQUAL         shift, and go to state 140
    EQUAL            shift, and go to state 141

    $default  reduce using rule 31 (cast_expression)

    assignment_operator  go to state 142


State 82

   22 unary_expression: unary_operator • cast_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression  go to state 79
    postfix_expression  go to state 80
    unary_expression    go to state 143
    unary_operator      go to state 82
    cast_expression     go to state 144


State 83

   33 multiplicative_expression: cast_expression •

    $default  reduce using rule 33 (multiplicative_expression)


State 84

   34 multiplicative_expression: multiplicative_expression • MULTIPLY cast_expression
   35                          | multiplicative_expression • DIV cast_expression
   36                          | multiplicative_expression • MOD cast_expression
   37 additive_expression: multiplicative_expression •

    MULTIPLY  shift, and go to state 145
    DIV       shift, and go to state 146
    MOD       shift, and go to state 147

    $default  reduce using rule 37 (additive_expression)


State 85

   38 additive_expression: additive_expression • PLUS multiplicative_expression
   39                    | additive_expression • MINUS multiplicative_expression
   40 shift_expression: additive_expression •

    PLUS   shift, and go to state 148
    MINUS  shift, and go to state 149

    $default  reduce using rule 40 (shift_expression)


State 86

   41 shift_expression: shift_expression • LEFTSHIFT additive_expression
   42                 | shift_expression • RIGHTSHIFT additive_expression
   43 relational_expression: shift_expression •

    LEFTSHIFT   shift, and go to state 150
    RIGHTSHIFT  shift, and go to state 151

    $default  reduce using rule 43 (relational_expression)


State 87

   44 relational_expression: relational_expression • LESS shift_expression
   45                      | relational_expression • GREATER shift_expression
   46                      | relational_expression • LESSEQUAL shift_expression
   47                      | relational_expression • GREATEREQUAL shift_expression
   48 equality_expression: relational_expression •

    LESSEQUAL     shift, and go to state 152
    GREATEREQUAL  shift, and go to state 153
    LESS          shift, and go to state 154
    GREATER       shift, and go to state 155

    $default  reduce using rule 48 (equality_expression)


State 88

   49 equality_expression: equality_expression • DOUBLEEQUAL relational_expression
   50                    | equality_expression • NOTEQUAL relational_expression
   51 AND_expression: equality_expression •

    DOUBLEEQUAL  shift, and go to state 156
    NOTEQUAL     shift, and go to state 157

    $default  reduce using rule 51 (AND_expression)


State 89

   52 AND_expression: AND_expression • AND equality_expression
   53 exclusive_OR_expression: AND_expression •

    AND  shift, and go to state 158

    $default  reduce using rule 53 (exclusive_OR_expression)


State 90

   54 exclusive_OR_expression: exclusive_OR_expression • XOR AND_expression
   55 inclusive_OR_expression: exclusive_OR_expression •

    XOR  shift, and go to state 159

    $default  reduce using rule 55 (inclusive_OR_expression)


State 91

   56 inclusive_OR_expression: inclusive_OR_expression • OR exclusive_OR_expression
   57 logical_AND_expression: inclusive_OR_expression •

    OR  shift, and go to state 160

    $default  reduce using rule 57 (logical_AND_expression)


State 92

   58 logical_AND_expression: logical_AND_expression • DOUBLEAND M inclusive_OR_expression
   59 logical_OR_expression: logical_AND_expression •

    DOUBLEAND  shift, and go to state 161

    $default  reduce using rule 59 (logical_OR_expression)


State 93

   60 logical_OR_expression: logical_OR_expression • DOUBLEOR M logical_AND_expression
   61 conditional_expression: logical_OR_expression •
   62                       | logical_OR_expression • N QUESTIONMARK M expression N COLON M conditional_expression

    DOUBLEOR  shift, and go to state 162

    QUESTIONMARK  reduce using rule 64 (N)
    $default      reduce using rule 61 (conditional_expression)

    N  go to state 163


State 94

   65 assignment_expression: conditional_expression •

    $default  reduce using rule 65 (assignment_expression)


State 95

  150 initializer: assignment_expression •

    $default  reduce using rule 150 (initializer)


State 96

   93 init_declarator: declarator EQUAL initializer •

    $default  reduce using rule 93 (init_declarator)


State 97

  210 function_definition: declaration_specifiers declarator declaration_list_opt change_table • LEFTBRACE block_item_list_opt RIGHTBRACE

    LEFTBRACE  shift, and go to state 164


State 98

  214 declaration_list: declaration_list declaration •

    $default  reduce using rule 214 (declaration_list)


State 99

  147 identifier_list: IDENTIFIER •

    $default  reduce using rule 147 (identifier_list)


State 100

  133 direct_declarator: direct_declarator LEFTPAR identifier_list • RIGHTPAR
  148 identifier_list: identifier_list • COMMA IDENTIFIER

    COMMA     shift, and go to state 165
    RIGHTPAR  shift, and go to state 166


State 101

  132 direct_declarator: direct_declarator LEFTPAR change_table • parameter_type_list RIGHTPAR
  134                  | direct_declarator LEFTPAR change_table • RIGHTPAR

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20
    RIGHTPAR   shift, and go to state 167

    declaration_specifiers   go to state 168
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    parameter_type_list      go to state 169
    parameter_list           go to state 170
    parameter_declaration    go to state 171


State 102

  127 direct_declarator: direct_declarator LEFTBRACKET STATIC • type_qualifier_list assignment_expression RIGHTBRACKET
  128                  | direct_declarator LEFTBRACKET STATIC • assignment_expression RIGHTBRACKET

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 172
    type_qualifier             go to state 45
    type_qualifier_list        go to state 173


State 103

   30 unary_operator: MULTIPLY •
  130 direct_declarator: direct_declarator LEFTBRACKET MULTIPLY • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 174

    $default  reduce using rule 30 (unary_operator)


State 104

  123 direct_declarator: direct_declarator LEFTBRACKET RIGHTBRACKET •

    $default  reduce using rule 123 (direct_declarator)


State 105

  125 direct_declarator: direct_declarator LEFTBRACKET assignment_expression • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 175


State 106

  124 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list • RIGHTBRACKET
  126                  | direct_declarator LEFTBRACKET type_qualifier_list • assignment_expression RIGHTBRACKET
  129                  | direct_declarator LEFTBRACKET type_qualifier_list • STATIC assignment_expression RIGHTBRACKET
  131                  | direct_declarator LEFTBRACKET type_qualifier_list • MULTIPLY RIGHTBRACKET
  140 type_qualifier_list: type_qualifier_list • type_qualifier

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    STATIC          shift, and go to state 176
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 177
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77
    RIGHTBRACKET    shift, and go to state 178

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 179
    type_qualifier             go to state 60


State 107

    5 primary_expression: LEFTPAR • expression RIGHTPAR
   13 postfix_expression: LEFTPAR • type_name RIGHTPAR LEFTBRACE initializer_list RIGHTBRACE
   14                   | LEFTPAR • type_name RIGHTPAR LEFTBRACE initializer_list COMMA RIGHTBRACE
   24 unary_expression: SIZEOF LEFTPAR • type_name RIGHTPAR

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 113
    type_specifier             go to state 114
    specifier_qualifier_list   go to state 115
    type_qualifier             go to state 116
    type_name                  go to state 180


State 108

   23 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 23 (unary_expression)


State 109

    5 primary_expression: LEFTPAR • expression RIGHTPAR
   13 postfix_expression: LEFTPAR • type_name RIGHTPAR LEFTBRACE initializer_list RIGHTBRACE
   14                   | LEFTPAR • type_name RIGHTPAR LEFTBRACE initializer_list COMMA RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 113
    type_specifier             go to state 114
    specifier_qualifier_list   go to state 115
    type_qualifier             go to state 116
    type_name                  go to state 181


State 110

   20 unary_expression: INCREMENT unary_expression •

    $default  reduce using rule 20 (unary_expression)


State 111

   21 unary_expression: DECREMENT unary_expression •

    $default  reduce using rule 21 (unary_expression)


State 112

   78 expression: assignment_expression •

    $default  reduce using rule 78 (expression)


State 113

    5 primary_expression: LEFTPAR expression • RIGHTPAR
   79 expression: expression • COMMA assignment_expression

    COMMA     shift, and go to state 182
    RIGHTPAR  shift, and go to state 183


State 114

  111 specifier_qualifier_list: type_specifier • specifier_qualifier_list_opt

    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19

    $default  reduce using rule 114 (specifier_qualifier_list_opt)

    type_specifier                go to state 114
    specifier_qualifier_list      go to state 184
    specifier_qualifier_list_opt  go to state 185
    type_qualifier                go to state 116


State 115

  149 type_name: specifier_qualifier_list •

    $default  reduce using rule 149 (type_name)


State 116

  112 specifier_qualifier_list: type_qualifier • specifier_qualifier_list_opt

    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19

    $default  reduce using rule 114 (specifier_qualifier_list_opt)

    type_specifier                go to state 114
    specifier_qualifier_list      go to state 184
    specifier_qualifier_list_opt  go to state 186
    type_qualifier                go to state 116


State 117

   13 postfix_expression: LEFTPAR type_name • RIGHTPAR LEFTBRACE initializer_list RIGHTBRACE
   14                   | LEFTPAR type_name • RIGHTPAR LEFTBRACE initializer_list COMMA RIGHTBRACE
   32 cast_expression: LEFTPAR type_name • RIGHTPAR cast_expression

    RIGHTPAR  shift, and go to state 187


State 118

  161 designator: DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 188


State 119

  160 designator: LEFTBRACKET • constant_expression RIGHTBRACKET

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 189
    constant_expression        go to state 190


State 120

  153 initializer_list: initializer •

    $default  reduce using rule 153 (initializer_list)


State 121

  151 initializer: LEFTBRACE initializer_list • RIGHTBRACE
  152            | LEFTBRACE initializer_list • COMMA RIGHTBRACE
  155 initializer_list: initializer_list • COMMA initializer
  156                 | initializer_list • COMMA designation initializer

    COMMA       shift, and go to state 191
    RIGHTBRACE  shift, and go to state 192


State 122

  154 initializer_list: designation • initializer

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 78

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 95
    initializer                go to state 193


State 123

  157 designation: designator_list • EQUAL
  159 designator_list: designator_list • designator

    EQUAL        shift, and go to state 194
    DOT          shift, and go to state 118
    LEFTBRACKET  shift, and go to state 119

    designator  go to state 195


State 124

  158 designator_list: designator •

    $default  reduce using rule 158 (designator_list)


State 125

   10 postfix_expression: postfix_expression ARROW • IDENTIFIER

    IDENTIFIER  shift, and go to state 196


State 126

   11 postfix_expression: postfix_expression INCREMENT •

    $default  reduce using rule 11 (postfix_expression)


State 127

   12 postfix_expression: postfix_expression DECREMENT •

    $default  reduce using rule 12 (postfix_expression)


State 128

    9 postfix_expression: postfix_expression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 197


State 129

    8 postfix_expression: postfix_expression LEFTPAR • argument_expression_list_opt RIGHTPAR

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    $default  reduce using rule 16 (argument_expression_list_opt)

    primary_expression            go to state 79
    postfix_expression            go to state 80
    argument_expression_list_opt  go to state 198
    argument_expression_list      go to state 199
    unary_expression              go to state 81
    unary_operator                go to state 82
    cast_expression               go to state 83
    multiplicative_expression     go to state 84
    additive_expression           go to state 85
    shift_expression              go to state 86
    relational_expression         go to state 87
    equality_expression           go to state 88
    AND_expression                go to state 89
    exclusive_OR_expression       go to state 90
    inclusive_OR_expression       go to state 91
    logical_AND_expression        go to state 92
    logical_OR_expression         go to state 93
    conditional_expression        go to state 94
    assignment_expression         go to state 200


State 130

    7 postfix_expression: postfix_expression LEFTBRACKET • expression RIGHTBRACKET

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 201


State 131

   71 assignment_operator: PLUSEQUAL •

    $default  reduce using rule 71 (assignment_operator)


State 132

   72 assignment_operator: MINUSEQUAL •

    $default  reduce using rule 72 (assignment_operator)


State 133

   68 assignment_operator: MULTIPLYEQUAL •

    $default  reduce using rule 68 (assignment_operator)


State 134

   69 assignment_operator: DIVEQUAL •

    $default  reduce using rule 69 (assignment_operator)


State 135

   70 assignment_operator: MODEQUAL •

    $default  reduce using rule 70 (assignment_operator)


State 136

   73 assignment_operator: LEFTSHIFTEQUAL •

    $default  reduce using rule 73 (assignment_operator)


State 137

   74 assignment_operator: RIGHTSHIFTEQUAL •

    $default  reduce using rule 74 (assignment_operator)


State 138

   75 assignment_operator: ANDEQUAL •

    $default  reduce using rule 75 (assignment_operator)


State 139

   77 assignment_operator: OREQUAL •

    $default  reduce using rule 77 (assignment_operator)


State 140

   76 assignment_operator: XOREQUAL •

    $default  reduce using rule 76 (assignment_operator)


State 141

   67 assignment_operator: EQUAL •

    $default  reduce using rule 67 (assignment_operator)


State 142

   66 assignment_expression: unary_expression assignment_operator • assignment_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 202


State 143

   31 cast_expression: unary_expression •

    $default  reduce using rule 31 (cast_expression)


State 144

   22 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 22 (unary_expression)


State 145

   34 multiplicative_expression: multiplicative_expression MULTIPLY • cast_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression  go to state 79
    postfix_expression  go to state 80
    unary_expression    go to state 143
    unary_operator      go to state 82
    cast_expression     go to state 203


State 146

   35 multiplicative_expression: multiplicative_expression DIV • cast_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression  go to state 79
    postfix_expression  go to state 80
    unary_expression    go to state 143
    unary_operator      go to state 82
    cast_expression     go to state 204


State 147

   36 multiplicative_expression: multiplicative_expression MOD • cast_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression  go to state 79
    postfix_expression  go to state 80
    unary_expression    go to state 143
    unary_operator      go to state 82
    cast_expression     go to state 205


State 148

   38 additive_expression: additive_expression PLUS • multiplicative_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 206


State 149

   39 additive_expression: additive_expression MINUS • multiplicative_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 207


State 150

   41 shift_expression: shift_expression LEFTSHIFT • additive_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 208


State 151

   42 shift_expression: shift_expression RIGHTSHIFT • additive_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 209


State 152

   46 relational_expression: relational_expression LESSEQUAL • shift_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 210


State 153

   47 relational_expression: relational_expression GREATEREQUAL • shift_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 211


State 154

   44 relational_expression: relational_expression LESS • shift_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 212


State 155

   45 relational_expression: relational_expression GREATER • shift_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 213


State 156

   49 equality_expression: equality_expression DOUBLEEQUAL • relational_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 214


State 157

   50 equality_expression: equality_expression NOTEQUAL • relational_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 215


State 158

   52 AND_expression: AND_expression AND • equality_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 216


State 159

   54 exclusive_OR_expression: exclusive_OR_expression XOR • AND_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 217


State 160

   56 inclusive_OR_expression: inclusive_OR_expression OR • exclusive_OR_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 218


State 161

   58 logical_AND_expression: logical_AND_expression DOUBLEAND • M inclusive_OR_expression

    $default  reduce using rule 63 (M)

    M  go to state 219


State 162

   60 logical_OR_expression: logical_OR_expression DOUBLEOR • M logical_AND_expression

    $default  reduce using rule 63 (M)

    M  go to state 220


State 163

   62 conditional_expression: logical_OR_expression N • QUESTIONMARK M expression N COLON M conditional_expression

    QUESTIONMARK  shift, and go to state 221


State 164

  210 function_definition: declaration_specifiers declarator declaration_list_opt change_table LEFTBRACE • block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INLINE          shift, and go to state 20
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 235

    $default  reduce using rule 178 (block_item_list_opt)

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    declaration                go to state 237
    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 238
    labeled_statement          go to state 239
    compound_statement         go to state 240
    block_item_list_opt        go to state 241
    block_item_list            go to state 242
    block_item                 go to state 243
    expression_statement       go to state 244
    selection_statement        go to state 245
    iteration_statement        go to state 246
    jump_statement             go to state 247


State 165

  148 identifier_list: identifier_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 248


State 166

  133 direct_declarator: direct_declarator LEFTPAR identifier_list RIGHTPAR •

    $default  reduce using rule 133 (direct_declarator)


State 167

  134 direct_declarator: direct_declarator LEFTPAR change_table RIGHTPAR •

    $default  reduce using rule 134 (direct_declarator)


State 168

  145 parameter_declaration: declaration_specifiers • declarator
  146                      | declaration_specifiers •

    IDENTIFIER  shift, and go to state 30
    MULTIPLY    shift, and go to state 31
    LEFTPAR     shift, and go to state 33

    $default  reduce using rule 146 (parameter_declaration)

    declarator         go to state 249
    direct_declarator  go to state 37
    pointer            go to state 38


State 169

  132 direct_declarator: direct_declarator LEFTPAR change_table parameter_type_list • RIGHTPAR

    RIGHTPAR  shift, and go to state 250


State 170

  141 parameter_type_list: parameter_list •
  142                    | parameter_list • COMMA ELLIPSIS
  144 parameter_list: parameter_list • COMMA parameter_declaration

    COMMA  shift, and go to state 251

    $default  reduce using rule 141 (parameter_type_list)


State 171

  143 parameter_list: parameter_declaration •

    $default  reduce using rule 143 (parameter_list)


State 172

  128 direct_declarator: direct_declarator LEFTBRACKET STATIC assignment_expression • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 252


State 173

  127 direct_declarator: direct_declarator LEFTBRACKET STATIC type_qualifier_list • assignment_expression RIGHTBRACKET
  140 type_qualifier_list: type_qualifier_list • type_qualifier

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 253
    type_qualifier             go to state 60


State 174

  130 direct_declarator: direct_declarator LEFTBRACKET MULTIPLY RIGHTBRACKET •

    $default  reduce using rule 130 (direct_declarator)


State 175

  125 direct_declarator: direct_declarator LEFTBRACKET assignment_expression RIGHTBRACKET •

    $default  reduce using rule 125 (direct_declarator)


State 176

  129 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list STATIC • assignment_expression RIGHTBRACKET

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 254


State 177

   30 unary_operator: MULTIPLY •
  131 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list MULTIPLY • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 255

    $default  reduce using rule 30 (unary_operator)


State 178

  124 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list RIGHTBRACKET •

    $default  reduce using rule 124 (direct_declarator)


State 179

  126 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list assignment_expression • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 256


State 180

   13 postfix_expression: LEFTPAR type_name • RIGHTPAR LEFTBRACE initializer_list RIGHTBRACE
   14                   | LEFTPAR type_name • RIGHTPAR LEFTBRACE initializer_list COMMA RIGHTBRACE
   24 unary_expression: SIZEOF LEFTPAR type_name • RIGHTPAR

    RIGHTPAR  shift, and go to state 257


State 181

   13 postfix_expression: LEFTPAR type_name • RIGHTPAR LEFTBRACE initializer_list RIGHTBRACE
   14                   | LEFTPAR type_name • RIGHTPAR LEFTBRACE initializer_list COMMA RIGHTBRACE

    RIGHTPAR  shift, and go to state 258


State 182

   79 expression: expression COMMA • assignment_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 259


State 183

    5 primary_expression: LEFTPAR expression RIGHTPAR •

    $default  reduce using rule 5 (primary_expression)


State 184

  113 specifier_qualifier_list_opt: specifier_qualifier_list •

    $default  reduce using rule 113 (specifier_qualifier_list_opt)


State 185

  111 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt •

    $default  reduce using rule 111 (specifier_qualifier_list)


State 186

  112 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt •

    $default  reduce using rule 112 (specifier_qualifier_list)


State 187

   13 postfix_expression: LEFTPAR type_name RIGHTPAR • LEFTBRACE initializer_list RIGHTBRACE
   14                   | LEFTPAR type_name RIGHTPAR • LEFTBRACE initializer_list COMMA RIGHTBRACE
   32 cast_expression: LEFTPAR type_name RIGHTPAR • cast_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 260

    primary_expression  go to state 79
    postfix_expression  go to state 80
    unary_expression    go to state 143
    unary_operator      go to state 82
    cast_expression     go to state 261


State 188

  161 designator: DOT IDENTIFIER •

    $default  reduce using rule 161 (designator)


State 189

   80 constant_expression: conditional_expression •

    $default  reduce using rule 80 (constant_expression)


State 190

  160 designator: LEFTBRACKET constant_expression • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 262


State 191

  152 initializer: LEFTBRACE initializer_list COMMA • RIGHTBRACE
  155 initializer_list: initializer_list COMMA • initializer
  156                 | initializer_list COMMA • designation initializer

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    DOT             shift, and go to state 118
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 78
    RIGHTBRACE      shift, and go to state 263
    LEFTBRACKET     shift, and go to state 119

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 95
    initializer                go to state 264
    designation                go to state 265
    designator_list            go to state 123
    designator                 go to state 124


State 192

  151 initializer: LEFTBRACE initializer_list RIGHTBRACE •

    $default  reduce using rule 151 (initializer)


State 193

  154 initializer_list: designation initializer •

    $default  reduce using rule 154 (initializer_list)


State 194

  157 designation: designator_list EQUAL •

    $default  reduce using rule 157 (designation)


State 195

  159 designator_list: designator_list designator •

    $default  reduce using rule 159 (designator_list)


State 196

   10 postfix_expression: postfix_expression ARROW IDENTIFIER •

    $default  reduce using rule 10 (postfix_expression)


State 197

    9 postfix_expression: postfix_expression DOT IDENTIFIER •

    $default  reduce using rule 9 (postfix_expression)


State 198

    8 postfix_expression: postfix_expression LEFTPAR argument_expression_list_opt • RIGHTPAR

    RIGHTPAR  shift, and go to state 266


State 199

   15 argument_expression_list_opt: argument_expression_list •
   18 argument_expression_list: argument_expression_list • COMMA assignment_expression

    COMMA  shift, and go to state 267

    $default  reduce using rule 15 (argument_expression_list_opt)


State 200

   17 argument_expression_list: assignment_expression •

    $default  reduce using rule 17 (argument_expression_list)


State 201

    7 postfix_expression: postfix_expression LEFTBRACKET expression • RIGHTBRACKET
   79 expression: expression • COMMA assignment_expression

    COMMA         shift, and go to state 182
    RIGHTBRACKET  shift, and go to state 268


State 202

   66 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 66 (assignment_expression)


State 203

   34 multiplicative_expression: multiplicative_expression MULTIPLY cast_expression •

    $default  reduce using rule 34 (multiplicative_expression)


State 204

   35 multiplicative_expression: multiplicative_expression DIV cast_expression •

    $default  reduce using rule 35 (multiplicative_expression)


State 205

   36 multiplicative_expression: multiplicative_expression MOD cast_expression •

    $default  reduce using rule 36 (multiplicative_expression)


State 206

   34 multiplicative_expression: multiplicative_expression • MULTIPLY cast_expression
   35                          | multiplicative_expression • DIV cast_expression
   36                          | multiplicative_expression • MOD cast_expression
   38 additive_expression: additive_expression PLUS multiplicative_expression •

    MULTIPLY  shift, and go to state 145
    DIV       shift, and go to state 146
    MOD       shift, and go to state 147

    $default  reduce using rule 38 (additive_expression)


State 207

   34 multiplicative_expression: multiplicative_expression • MULTIPLY cast_expression
   35                          | multiplicative_expression • DIV cast_expression
   36                          | multiplicative_expression • MOD cast_expression
   39 additive_expression: additive_expression MINUS multiplicative_expression •

    MULTIPLY  shift, and go to state 145
    DIV       shift, and go to state 146
    MOD       shift, and go to state 147

    $default  reduce using rule 39 (additive_expression)


State 208

   38 additive_expression: additive_expression • PLUS multiplicative_expression
   39                    | additive_expression • MINUS multiplicative_expression
   41 shift_expression: shift_expression LEFTSHIFT additive_expression •

    PLUS   shift, and go to state 148
    MINUS  shift, and go to state 149

    $default  reduce using rule 41 (shift_expression)


State 209

   38 additive_expression: additive_expression • PLUS multiplicative_expression
   39                    | additive_expression • MINUS multiplicative_expression
   42 shift_expression: shift_expression RIGHTSHIFT additive_expression •

    PLUS   shift, and go to state 148
    MINUS  shift, and go to state 149

    $default  reduce using rule 42 (shift_expression)


State 210

   41 shift_expression: shift_expression • LEFTSHIFT additive_expression
   42                 | shift_expression • RIGHTSHIFT additive_expression
   46 relational_expression: relational_expression LESSEQUAL shift_expression •

    LEFTSHIFT   shift, and go to state 150
    RIGHTSHIFT  shift, and go to state 151

    $default  reduce using rule 46 (relational_expression)


State 211

   41 shift_expression: shift_expression • LEFTSHIFT additive_expression
   42                 | shift_expression • RIGHTSHIFT additive_expression
   47 relational_expression: relational_expression GREATEREQUAL shift_expression •

    LEFTSHIFT   shift, and go to state 150
    RIGHTSHIFT  shift, and go to state 151

    $default  reduce using rule 47 (relational_expression)


State 212

   41 shift_expression: shift_expression • LEFTSHIFT additive_expression
   42                 | shift_expression • RIGHTSHIFT additive_expression
   44 relational_expression: relational_expression LESS shift_expression •

    LEFTSHIFT   shift, and go to state 150
    RIGHTSHIFT  shift, and go to state 151

    $default  reduce using rule 44 (relational_expression)


State 213

   41 shift_expression: shift_expression • LEFTSHIFT additive_expression
   42                 | shift_expression • RIGHTSHIFT additive_expression
   45 relational_expression: relational_expression GREATER shift_expression •

    LEFTSHIFT   shift, and go to state 150
    RIGHTSHIFT  shift, and go to state 151

    $default  reduce using rule 45 (relational_expression)


State 214

   44 relational_expression: relational_expression • LESS shift_expression
   45                      | relational_expression • GREATER shift_expression
   46                      | relational_expression • LESSEQUAL shift_expression
   47                      | relational_expression • GREATEREQUAL shift_expression
   49 equality_expression: equality_expression DOUBLEEQUAL relational_expression •

    LESSEQUAL     shift, and go to state 152
    GREATEREQUAL  shift, and go to state 153
    LESS          shift, and go to state 154
    GREATER       shift, and go to state 155

    $default  reduce using rule 49 (equality_expression)


State 215

   44 relational_expression: relational_expression • LESS shift_expression
   45                      | relational_expression • GREATER shift_expression
   46                      | relational_expression • LESSEQUAL shift_expression
   47                      | relational_expression • GREATEREQUAL shift_expression
   50 equality_expression: equality_expression NOTEQUAL relational_expression •

    LESSEQUAL     shift, and go to state 152
    GREATEREQUAL  shift, and go to state 153
    LESS          shift, and go to state 154
    GREATER       shift, and go to state 155

    $default  reduce using rule 50 (equality_expression)


State 216

   49 equality_expression: equality_expression • DOUBLEEQUAL relational_expression
   50                    | equality_expression • NOTEQUAL relational_expression
   52 AND_expression: AND_expression AND equality_expression •

    DOUBLEEQUAL  shift, and go to state 156
    NOTEQUAL     shift, and go to state 157

    $default  reduce using rule 52 (AND_expression)


State 217

   52 AND_expression: AND_expression • AND equality_expression
   54 exclusive_OR_expression: exclusive_OR_expression XOR AND_expression •

    AND  shift, and go to state 158

    $default  reduce using rule 54 (exclusive_OR_expression)


State 218

   54 exclusive_OR_expression: exclusive_OR_expression • XOR AND_expression
   56 inclusive_OR_expression: inclusive_OR_expression OR exclusive_OR_expression •

    XOR  shift, and go to state 159

    $default  reduce using rule 56 (inclusive_OR_expression)


State 219

   58 logical_AND_expression: logical_AND_expression DOUBLEAND M • inclusive_OR_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 269


State 220

   60 logical_OR_expression: logical_OR_expression DOUBLEOR M • logical_AND_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 270


State 221

   62 conditional_expression: logical_OR_expression N QUESTIONMARK • M expression N COLON M conditional_expression

    $default  reduce using rule 63 (M)

    M  go to state 271


State 222

    1 primary_expression: IDENTIFIER •
  173 labeled_statement: IDENTIFIER • COLON statement

    COLON  shift, and go to state 272

    $default  reduce using rule 1 (primary_expression)


State 223

  174 labeled_statement: CASE • constant_expression COLON statement

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 189
    constant_expression        go to state 273


State 224

  175 labeled_statement: DEFAULT • COLON statement

    COLON  shift, and go to state 274


State 225

  185 selection_statement: IF • LEFTPAR expression N RIGHTPAR M statement N
  186                    | IF • LEFTPAR expression N RIGHTPAR M statement N ELSE M statement

    LEFTPAR  shift, and go to state 275


State 226

  187 selection_statement: SWITCH • LEFTPAR expression RIGHTPAR statement

    LEFTPAR  shift, and go to state 276


State 227

  188 iteration_statement: WHILE • W LEFTPAR X change_table M expression RIGHTPAR M loop_statement
  189                    | WHILE • W LEFTPAR X change_table M expression RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE

    $default  reduce using rule 197 (W)

    W  go to state 277


State 228

  190 iteration_statement: DO • D M loop_statement M WHILE LEFTPAR expression RIGHTPAR SEMICOLON
  191                    | DO • D LEFTBRACE M block_item_list_opt RIGHTBRACE M WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    $default  reduce using rule 198 (D)

    D  go to state 278


State 229

  192 iteration_statement: FOR • F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M loop_statement
  193                    | FOR • F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M loop_statement
  194                    | FOR • F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE
  195                    | FOR • F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 196 (F)

    F  go to state 279


State 230

  201 jump_statement: GOTO • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 280


State 231

  202 jump_statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 281


State 232

  203 jump_statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 282


State 233

  204 jump_statement: RETURN • SEMICOLON
  205               | RETURN • expression SEMICOLON

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 283
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 284


State 234

  183 expression_statement: SEMICOLON •

    $default  reduce using rule 183 (expression_statement)


State 235

  176 compound_statement: LEFTBRACE • X change_table block_item_list_opt RIGHTBRACE

    $default  reduce using rule 199 (X)

    X  go to state 285


State 236

   79 expression: expression • COMMA assignment_expression
  184 expression_statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 286
    COMMA      shift, and go to state 182


State 237

  181 block_item: declaration •

    $default  reduce using rule 181 (block_item)


State 238

  182 block_item: statement •

    $default  reduce using rule 182 (block_item)


State 239

  162 statement: labeled_statement •

    $default  reduce using rule 162 (statement)


State 240

  163 statement: compound_statement •

    $default  reduce using rule 163 (statement)


State 241

  210 function_definition: declaration_specifiers declarator declaration_list_opt change_table LEFTBRACE block_item_list_opt • RIGHTBRACE

    RIGHTBRACE  shift, and go to state 287


State 242

  177 block_item_list_opt: block_item_list •
  180 block_item_list: block_item_list • M block_item

    RIGHTBRACE  reduce using rule 177 (block_item_list_opt)
    $default    reduce using rule 63 (M)

    M  go to state 288


State 243

  179 block_item_list: block_item •

    $default  reduce using rule 179 (block_item_list)


State 244

  164 statement: expression_statement •

    $default  reduce using rule 164 (statement)


State 245

  165 statement: selection_statement •

    $default  reduce using rule 165 (statement)


State 246

  166 statement: iteration_statement •

    $default  reduce using rule 166 (statement)


State 247

  167 statement: jump_statement •

    $default  reduce using rule 167 (statement)


State 248

  148 identifier_list: identifier_list COMMA IDENTIFIER •

    $default  reduce using rule 148 (identifier_list)


State 249

  145 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 145 (parameter_declaration)


State 250

  132 direct_declarator: direct_declarator LEFTPAR change_table parameter_type_list RIGHTPAR •

    $default  reduce using rule 132 (direct_declarator)


State 251

  142 parameter_type_list: parameter_list COMMA • ELLIPSIS
  144 parameter_list: parameter_list COMMA • parameter_declaration

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20
    ELLIPSIS   shift, and go to state 289

    declaration_specifiers   go to state 168
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    parameter_declaration    go to state 290


State 252

  128 direct_declarator: direct_declarator LEFTBRACKET STATIC assignment_expression RIGHTBRACKET •

    $default  reduce using rule 128 (direct_declarator)


State 253

  127 direct_declarator: direct_declarator LEFTBRACKET STATIC type_qualifier_list assignment_expression • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 291


State 254

  129 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list STATIC assignment_expression • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 292


State 255

  131 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list MULTIPLY RIGHTBRACKET •

    $default  reduce using rule 131 (direct_declarator)


State 256

  126 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list assignment_expression RIGHTBRACKET •

    $default  reduce using rule 126 (direct_declarator)


State 257

   13 postfix_expression: LEFTPAR type_name RIGHTPAR • LEFTBRACE initializer_list RIGHTBRACE
   14                   | LEFTPAR type_name RIGHTPAR • LEFTBRACE initializer_list COMMA RIGHTBRACE
   24 unary_expression: SIZEOF LEFTPAR type_name RIGHTPAR •

    LEFTBRACE  shift, and go to state 260

    $default  reduce using rule 24 (unary_expression)


State 258

   13 postfix_expression: LEFTPAR type_name RIGHTPAR • LEFTBRACE initializer_list RIGHTBRACE
   14                   | LEFTPAR type_name RIGHTPAR • LEFTBRACE initializer_list COMMA RIGHTBRACE

    LEFTBRACE  shift, and go to state 260


State 259

   79 expression: expression COMMA assignment_expression •

    $default  reduce using rule 79 (expression)


State 260

   13 postfix_expression: LEFTPAR type_name RIGHTPAR LEFTBRACE • initializer_list RIGHTBRACE
   14                   | LEFTPAR type_name RIGHTPAR LEFTBRACE • initializer_list COMMA RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    DOT             shift, and go to state 118
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 78
    LEFTBRACKET     shift, and go to state 119

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 95
    initializer                go to state 120
    initializer_list           go to state 293
    designation                go to state 122
    designator_list            go to state 123
    designator                 go to state 124


State 261

   32 cast_expression: LEFTPAR type_name RIGHTPAR cast_expression •

    $default  reduce using rule 32 (cast_expression)


State 262

  160 designator: LEFTBRACKET constant_expression RIGHTBRACKET •

    $default  reduce using rule 160 (designator)


State 263

  152 initializer: LEFTBRACE initializer_list COMMA RIGHTBRACE •

    $default  reduce using rule 152 (initializer)


State 264

  155 initializer_list: initializer_list COMMA initializer •

    $default  reduce using rule 155 (initializer_list)


State 265

  156 initializer_list: initializer_list COMMA designation • initializer

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 78

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 95
    initializer                go to state 294


State 266

    8 postfix_expression: postfix_expression LEFTPAR argument_expression_list_opt RIGHTPAR •

    $default  reduce using rule 8 (postfix_expression)


State 267

   18 argument_expression_list: argument_expression_list COMMA • assignment_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 295


State 268

    7 postfix_expression: postfix_expression LEFTBRACKET expression RIGHTBRACKET •

    $default  reduce using rule 7 (postfix_expression)


State 269

   56 inclusive_OR_expression: inclusive_OR_expression • OR exclusive_OR_expression
   58 logical_AND_expression: logical_AND_expression DOUBLEAND M inclusive_OR_expression •

    OR  shift, and go to state 160

    $default  reduce using rule 58 (logical_AND_expression)


State 270

   58 logical_AND_expression: logical_AND_expression • DOUBLEAND M inclusive_OR_expression
   60 logical_OR_expression: logical_OR_expression DOUBLEOR M logical_AND_expression •

    DOUBLEAND  shift, and go to state 161

    $default  reduce using rule 60 (logical_OR_expression)


State 271

   62 conditional_expression: logical_OR_expression N QUESTIONMARK M • expression N COLON M conditional_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 296


State 272

  173 labeled_statement: IDENTIFIER COLON • statement

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 235

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    statement                  go to state 297
    labeled_statement          go to state 239
    compound_statement         go to state 240
    expression_statement       go to state 244
    selection_statement        go to state 245
    iteration_statement        go to state 246
    jump_statement             go to state 247


State 273

  174 labeled_statement: CASE constant_expression • COLON statement

    COLON  shift, and go to state 298


State 274

  175 labeled_statement: DEFAULT COLON • statement

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 235

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    statement                  go to state 299
    labeled_statement          go to state 239
    compound_statement         go to state 240
    expression_statement       go to state 244
    selection_statement        go to state 245
    iteration_statement        go to state 246
    jump_statement             go to state 247


State 275

  185 selection_statement: IF LEFTPAR • expression N RIGHTPAR M statement N
  186                    | IF LEFTPAR • expression N RIGHTPAR M statement N ELSE M statement

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 300


State 276

  187 selection_statement: SWITCH LEFTPAR • expression RIGHTPAR statement

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 301


State 277

  188 iteration_statement: WHILE W • LEFTPAR X change_table M expression RIGHTPAR M loop_statement
  189                    | WHILE W • LEFTPAR X change_table M expression RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE

    LEFTPAR  shift, and go to state 302


State 278

  190 iteration_statement: DO D • M loop_statement M WHILE LEFTPAR expression RIGHTPAR SEMICOLON
  191                    | DO D • LEFTBRACE M block_item_list_opt RIGHTBRACE M WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    LEFTBRACE  shift, and go to state 303

    $default  reduce using rule 63 (M)

    M  go to state 304


State 279

  192 iteration_statement: FOR F • LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M loop_statement
  193                    | FOR F • LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M loop_statement
  194                    | FOR F • LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE
  195                    | FOR F • LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    LEFTPAR  shift, and go to state 305


State 280

  201 jump_statement: GOTO IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 306


State 281

  202 jump_statement: CONTINUE SEMICOLON •

    $default  reduce using rule 202 (jump_statement)


State 282

  203 jump_statement: BREAK SEMICOLON •

    $default  reduce using rule 203 (jump_statement)


State 283

  204 jump_statement: RETURN SEMICOLON •

    $default  reduce using rule 204 (jump_statement)


State 284

   79 expression: expression • COMMA assignment_expression
  205 jump_statement: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 307
    COMMA      shift, and go to state 182


State 285

  176 compound_statement: LEFTBRACE X • change_table block_item_list_opt RIGHTBRACE

    $default  reduce using rule 200 (change_table)

    change_table  go to state 308


State 286

  184 expression_statement: expression SEMICOLON •

    $default  reduce using rule 184 (expression_statement)


State 287

  210 function_definition: declaration_specifiers declarator declaration_list_opt change_table LEFTBRACE block_item_list_opt RIGHTBRACE •

    $default  reduce using rule 210 (function_definition)


State 288

  180 block_item_list: block_item_list M • block_item

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INLINE          shift, and go to state 20
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 235

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    declaration                go to state 237
    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 238
    labeled_statement          go to state 239
    compound_statement         go to state 240
    block_item                 go to state 309
    expression_statement       go to state 244
    selection_statement        go to state 245
    iteration_statement        go to state 246
    jump_statement             go to state 247


State 289

  142 parameter_type_list: parameter_list COMMA ELLIPSIS •

    $default  reduce using rule 142 (parameter_type_list)


State 290

  144 parameter_list: parameter_list COMMA parameter_declaration •

    $default  reduce using rule 144 (parameter_list)


State 291

  127 direct_declarator: direct_declarator LEFTBRACKET STATIC type_qualifier_list assignment_expression RIGHTBRACKET •

    $default  reduce using rule 127 (direct_declarator)


State 292

  129 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list STATIC assignment_expression RIGHTBRACKET •

    $default  reduce using rule 129 (direct_declarator)


State 293

   13 postfix_expression: LEFTPAR type_name RIGHTPAR LEFTBRACE initializer_list • RIGHTBRACE
   14                   | LEFTPAR type_name RIGHTPAR LEFTBRACE initializer_list • COMMA RIGHTBRACE
  155 initializer_list: initializer_list • COMMA initializer
  156                 | initializer_list • COMMA designation initializer

    COMMA       shift, and go to state 310
    RIGHTBRACE  shift, and go to state 311


State 294

  156 initializer_list: initializer_list COMMA designation initializer •

    $default  reduce using rule 156 (initializer_list)


State 295

   18 argument_expression_list: argument_expression_list COMMA assignment_expression •

    $default  reduce using rule 18 (argument_expression_list)


State 296

   62 conditional_expression: logical_OR_expression N QUESTIONMARK M expression • N COLON M conditional_expression
   79 expression: expression • COMMA assignment_expression

    COMMA  shift, and go to state 182

    $default  reduce using rule 64 (N)

    N  go to state 312


State 297

  173 labeled_statement: IDENTIFIER COLON statement •

    $default  reduce using rule 173 (labeled_statement)


State 298

  174 labeled_statement: CASE constant_expression COLON • statement

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 235

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    statement                  go to state 313
    labeled_statement          go to state 239
    compound_statement         go to state 240
    expression_statement       go to state 244
    selection_statement        go to state 245
    iteration_statement        go to state 246
    jump_statement             go to state 247


State 299

  175 labeled_statement: DEFAULT COLON statement •

    $default  reduce using rule 175 (labeled_statement)


State 300

   79 expression: expression • COMMA assignment_expression
  185 selection_statement: IF LEFTPAR expression • N RIGHTPAR M statement N
  186                    | IF LEFTPAR expression • N RIGHTPAR M statement N ELSE M statement

    COMMA  shift, and go to state 182

    $default  reduce using rule 64 (N)

    N  go to state 314


State 301

   79 expression: expression • COMMA assignment_expression
  187 selection_statement: SWITCH LEFTPAR expression • RIGHTPAR statement

    COMMA     shift, and go to state 182
    RIGHTPAR  shift, and go to state 315


State 302

  188 iteration_statement: WHILE W LEFTPAR • X change_table M expression RIGHTPAR M loop_statement
  189                    | WHILE W LEFTPAR • X change_table M expression RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE

    $default  reduce using rule 199 (X)

    X  go to state 316


State 303

  191 iteration_statement: DO D LEFTBRACE • M block_item_list_opt RIGHTBRACE M WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    $default  reduce using rule 63 (M)

    M  go to state 317


State 304

  190 iteration_statement: DO D M • loop_statement M WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    loop_statement             go to state 318
    labeled_statement          go to state 319
    expression_statement       go to state 320
    selection_statement        go to state 321
    iteration_statement        go to state 322
    jump_statement             go to state 323


State 305

  192 iteration_statement: FOR F LEFTPAR • X change_table declaration M expression_statement M expression N RIGHTPAR M loop_statement
  193                    | FOR F LEFTPAR • X change_table expression_statement M expression_statement M expression N RIGHTPAR M loop_statement
  194                    | FOR F LEFTPAR • X change_table declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE
  195                    | FOR F LEFTPAR • X change_table expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 199 (X)

    X  go to state 324


State 306

  201 jump_statement: GOTO IDENTIFIER SEMICOLON •

    $default  reduce using rule 201 (jump_statement)


State 307

  205 jump_statement: RETURN expression SEMICOLON •

    $default  reduce using rule 205 (jump_statement)


State 308

  176 compound_statement: LEFTBRACE X change_table • block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INLINE          shift, and go to state 20
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 235

    $default  reduce using rule 178 (block_item_list_opt)

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    declaration                go to state 237
    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 238
    labeled_statement          go to state 239
    compound_statement         go to state 240
    block_item_list_opt        go to state 325
    block_item_list            go to state 242
    block_item                 go to state 243
    expression_statement       go to state 244
    selection_statement        go to state 245
    iteration_statement        go to state 246
    jump_statement             go to state 247


State 309

  180 block_item_list: block_item_list M block_item •

    $default  reduce using rule 180 (block_item_list)


State 310

   14 postfix_expression: LEFTPAR type_name RIGHTPAR LEFTBRACE initializer_list COMMA • RIGHTBRACE
  155 initializer_list: initializer_list COMMA • initializer
  156                 | initializer_list COMMA • designation initializer

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    DOT             shift, and go to state 118
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 78
    RIGHTBRACE      shift, and go to state 326
    LEFTBRACKET     shift, and go to state 119

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 95
    initializer                go to state 264
    designation                go to state 265
    designator_list            go to state 123
    designator                 go to state 124


State 311

   13 postfix_expression: LEFTPAR type_name RIGHTPAR LEFTBRACE initializer_list RIGHTBRACE •

    $default  reduce using rule 13 (postfix_expression)


State 312

   62 conditional_expression: logical_OR_expression N QUESTIONMARK M expression N • COLON M conditional_expression

    COLON  shift, and go to state 327


State 313

  174 labeled_statement: CASE constant_expression COLON statement •

    $default  reduce using rule 174 (labeled_statement)


State 314

  185 selection_statement: IF LEFTPAR expression N • RIGHTPAR M statement N
  186                    | IF LEFTPAR expression N • RIGHTPAR M statement N ELSE M statement

    RIGHTPAR  shift, and go to state 328


State 315

  187 selection_statement: SWITCH LEFTPAR expression RIGHTPAR • statement

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 235

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    statement                  go to state 329
    labeled_statement          go to state 239
    compound_statement         go to state 240
    expression_statement       go to state 244
    selection_statement        go to state 245
    iteration_statement        go to state 246
    jump_statement             go to state 247


State 316

  188 iteration_statement: WHILE W LEFTPAR X • change_table M expression RIGHTPAR M loop_statement
  189                    | WHILE W LEFTPAR X • change_table M expression RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE

    $default  reduce using rule 200 (change_table)

    change_table  go to state 330


State 317

  191 iteration_statement: DO D LEFTBRACE M • block_item_list_opt RIGHTBRACE M WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INLINE          shift, and go to state 20
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 235

    $default  reduce using rule 178 (block_item_list_opt)

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    declaration                go to state 237
    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 238
    labeled_statement          go to state 239
    compound_statement         go to state 240
    block_item_list_opt        go to state 331
    block_item_list            go to state 242
    block_item                 go to state 243
    expression_statement       go to state 244
    selection_statement        go to state 245
    iteration_statement        go to state 246
    jump_statement             go to state 247


State 318

  190 iteration_statement: DO D M loop_statement • M WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    $default  reduce using rule 63 (M)

    M  go to state 332


State 319

  168 loop_statement: labeled_statement •

    $default  reduce using rule 168 (loop_statement)


State 320

  169 loop_statement: expression_statement •

    $default  reduce using rule 169 (loop_statement)


State 321

  170 loop_statement: selection_statement •

    $default  reduce using rule 170 (loop_statement)


State 322

  171 loop_statement: iteration_statement •

    $default  reduce using rule 171 (loop_statement)


State 323

  172 loop_statement: jump_statement •

    $default  reduce using rule 172 (loop_statement)


State 324

  192 iteration_statement: FOR F LEFTPAR X • change_table declaration M expression_statement M expression N RIGHTPAR M loop_statement
  193                    | FOR F LEFTPAR X • change_table expression_statement M expression_statement M expression N RIGHTPAR M loop_statement
  194                    | FOR F LEFTPAR X • change_table declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE
  195                    | FOR F LEFTPAR X • change_table expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 200 (change_table)

    change_table  go to state 333


State 325

  176 compound_statement: LEFTBRACE X change_table block_item_list_opt • RIGHTBRACE

    RIGHTBRACE  shift, and go to state 334


State 326

   14 postfix_expression: LEFTPAR type_name RIGHTPAR LEFTBRACE initializer_list COMMA RIGHTBRACE •

    $default  reduce using rule 14 (postfix_expression)


State 327

   62 conditional_expression: logical_OR_expression N QUESTIONMARK M expression N COLON • M conditional_expression

    $default  reduce using rule 63 (M)

    M  go to state 335


State 328

  185 selection_statement: IF LEFTPAR expression N RIGHTPAR • M statement N
  186                    | IF LEFTPAR expression N RIGHTPAR • M statement N ELSE M statement

    $default  reduce using rule 63 (M)

    M  go to state 336


State 329

  187 selection_statement: SWITCH LEFTPAR expression RIGHTPAR statement •

    $default  reduce using rule 187 (selection_statement)


State 330

  188 iteration_statement: WHILE W LEFTPAR X change_table • M expression RIGHTPAR M loop_statement
  189                    | WHILE W LEFTPAR X change_table • M expression RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE

    $default  reduce using rule 63 (M)

    M  go to state 337


State 331

  191 iteration_statement: DO D LEFTBRACE M block_item_list_opt • RIGHTBRACE M WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    RIGHTBRACE  shift, and go to state 338


State 332

  190 iteration_statement: DO D M loop_statement M • WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    WHILE  shift, and go to state 339


State 333

  192 iteration_statement: FOR F LEFTPAR X change_table • declaration M expression_statement M expression N RIGHTPAR M loop_statement
  193                    | FOR F LEFTPAR X change_table • expression_statement M expression_statement M expression N RIGHTPAR M loop_statement
  194                    | FOR F LEFTPAR X change_table • declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE
  195                    | FOR F LEFTPAR X change_table • expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INLINE          shift, and go to state 20
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    declaration                go to state 340
    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    expression_statement       go to state 341


State 334

  176 compound_statement: LEFTBRACE X change_table block_item_list_opt RIGHTBRACE •

    $default  reduce using rule 176 (compound_statement)


State 335

   62 conditional_expression: logical_OR_expression N QUESTIONMARK M expression N COLON M • conditional_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 143
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 342


State 336

  185 selection_statement: IF LEFTPAR expression N RIGHTPAR M • statement N
  186                    | IF LEFTPAR expression N RIGHTPAR M • statement N ELSE M statement

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 235

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    statement                  go to state 343
    labeled_statement          go to state 239
    compound_statement         go to state 240
    expression_statement       go to state 244
    selection_statement        go to state 245
    iteration_statement        go to state 246
    jump_statement             go to state 247


State 337

  188 iteration_statement: WHILE W LEFTPAR X change_table M • expression RIGHTPAR M loop_statement
  189                    | WHILE W LEFTPAR X change_table M • expression RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 344


State 338

  191 iteration_statement: DO D LEFTBRACE M block_item_list_opt RIGHTBRACE • M WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    $default  reduce using rule 63 (M)

    M  go to state 345


State 339

  190 iteration_statement: DO D M loop_statement M WHILE • LEFTPAR expression RIGHTPAR SEMICOLON

    LEFTPAR  shift, and go to state 346


State 340

  192 iteration_statement: FOR F LEFTPAR X change_table declaration • M expression_statement M expression N RIGHTPAR M loop_statement
  194                    | FOR F LEFTPAR X change_table declaration • M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 63 (M)

    M  go to state 347


State 341

  193 iteration_statement: FOR F LEFTPAR X change_table expression_statement • M expression_statement M expression N RIGHTPAR M loop_statement
  195                    | FOR F LEFTPAR X change_table expression_statement • M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 63 (M)

    M  go to state 348


State 342

   62 conditional_expression: logical_OR_expression N QUESTIONMARK M expression N COLON M conditional_expression •

    $default  reduce using rule 62 (conditional_expression)


State 343

  185 selection_statement: IF LEFTPAR expression N RIGHTPAR M statement • N
  186                    | IF LEFTPAR expression N RIGHTPAR M statement • N ELSE M statement

    $default  reduce using rule 64 (N)

    N  go to state 349


State 344

   79 expression: expression • COMMA assignment_expression
  188 iteration_statement: WHILE W LEFTPAR X change_table M expression • RIGHTPAR M loop_statement
  189                    | WHILE W LEFTPAR X change_table M expression • RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE

    COMMA     shift, and go to state 182
    RIGHTPAR  shift, and go to state 350


State 345

  191 iteration_statement: DO D LEFTBRACE M block_item_list_opt RIGHTBRACE M • WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    WHILE  shift, and go to state 351


State 346

  190 iteration_statement: DO D M loop_statement M WHILE LEFTPAR • expression RIGHTPAR SEMICOLON

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 352


State 347

  192 iteration_statement: FOR F LEFTPAR X change_table declaration M • expression_statement M expression N RIGHTPAR M loop_statement
  194                    | FOR F LEFTPAR X change_table declaration M • expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    expression_statement       go to state 353


State 348

  193 iteration_statement: FOR F LEFTPAR X change_table expression_statement M • expression_statement M expression N RIGHTPAR M loop_statement
  195                    | FOR F LEFTPAR X change_table expression_statement M • expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    expression_statement       go to state 354


State 349

  185 selection_statement: IF LEFTPAR expression N RIGHTPAR M statement N •
  186                    | IF LEFTPAR expression N RIGHTPAR M statement N • ELSE M statement

    ELSE  shift, and go to state 355

    $default  reduce using rule 185 (selection_statement)


State 350

  188 iteration_statement: WHILE W LEFTPAR X change_table M expression RIGHTPAR • M loop_statement
  189                    | WHILE W LEFTPAR X change_table M expression RIGHTPAR • LEFTBRACE M block_item_list_opt RIGHTBRACE

    LEFTBRACE  shift, and go to state 356

    $default  reduce using rule 63 (M)

    M  go to state 357


State 351

  191 iteration_statement: DO D LEFTBRACE M block_item_list_opt RIGHTBRACE M WHILE • LEFTPAR expression RIGHTPAR SEMICOLON

    LEFTPAR  shift, and go to state 358


State 352

   79 expression: expression • COMMA assignment_expression
  190 iteration_statement: DO D M loop_statement M WHILE LEFTPAR expression • RIGHTPAR SEMICOLON

    COMMA     shift, and go to state 182
    RIGHTPAR  shift, and go to state 359


State 353

  192 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement • M expression N RIGHTPAR M loop_statement
  194                    | FOR F LEFTPAR X change_table declaration M expression_statement • M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 63 (M)

    M  go to state 360


State 354

  193 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement • M expression N RIGHTPAR M loop_statement
  195                    | FOR F LEFTPAR X change_table expression_statement M expression_statement • M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 63 (M)

    M  go to state 361


State 355

  186 selection_statement: IF LEFTPAR expression N RIGHTPAR M statement N ELSE • M statement

    $default  reduce using rule 63 (M)

    M  go to state 362


State 356

  189 iteration_statement: WHILE W LEFTPAR X change_table M expression RIGHTPAR LEFTBRACE • M block_item_list_opt RIGHTBRACE

    $default  reduce using rule 63 (M)

    M  go to state 363


State 357

  188 iteration_statement: WHILE W LEFTPAR X change_table M expression RIGHTPAR M • loop_statement

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    loop_statement             go to state 364
    labeled_statement          go to state 319
    expression_statement       go to state 320
    selection_statement        go to state 321
    iteration_statement        go to state 322
    jump_statement             go to state 323


State 358

  191 iteration_statement: DO D LEFTBRACE M block_item_list_opt RIGHTBRACE M WHILE LEFTPAR • expression RIGHTPAR SEMICOLON

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 365


State 359

  190 iteration_statement: DO D M loop_statement M WHILE LEFTPAR expression RIGHTPAR • SEMICOLON

    SEMICOLON  shift, and go to state 366


State 360

  192 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M • expression N RIGHTPAR M loop_statement
  194                    | FOR F LEFTPAR X change_table declaration M expression_statement M • expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 367


State 361

  193 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M • expression N RIGHTPAR M loop_statement
  195                    | FOR F LEFTPAR X change_table expression_statement M expression_statement M • expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    LEFTPAR         shift, and go to state 77

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 368


State 362

  186 selection_statement: IF LEFTPAR expression N RIGHTPAR M statement N ELSE M • statement

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 235

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    statement                  go to state 369
    labeled_statement          go to state 239
    compound_statement         go to state 240
    expression_statement       go to state 244
    selection_statement        go to state 245
    iteration_statement        go to state 246
    jump_statement             go to state 247


State 363

  189 iteration_statement: WHILE W LEFTPAR X change_table M expression RIGHTPAR LEFTBRACE M • block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INLINE          shift, and go to state 20
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 235

    $default  reduce using rule 178 (block_item_list_opt)

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    declaration                go to state 237
    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 238
    labeled_statement          go to state 239
    compound_statement         go to state 240
    block_item_list_opt        go to state 370
    block_item_list            go to state 242
    block_item                 go to state 243
    expression_statement       go to state 244
    selection_statement        go to state 245
    iteration_statement        go to state 246
    jump_statement             go to state 247


State 364

  188 iteration_statement: WHILE W LEFTPAR X change_table M expression RIGHTPAR M loop_statement •

    $default  reduce using rule 188 (iteration_statement)


State 365

   79 expression: expression • COMMA assignment_expression
  191 iteration_statement: DO D LEFTBRACE M block_item_list_opt RIGHTBRACE M WHILE LEFTPAR expression • RIGHTPAR SEMICOLON

    COMMA     shift, and go to state 182
    RIGHTPAR  shift, and go to state 371


State 366

  190 iteration_statement: DO D M loop_statement M WHILE LEFTPAR expression RIGHTPAR SEMICOLON •

    $default  reduce using rule 190 (iteration_statement)


State 367

   79 expression: expression • COMMA assignment_expression
  192 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M expression • N RIGHTPAR M loop_statement
  194                    | FOR F LEFTPAR X change_table declaration M expression_statement M expression • N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    COMMA  shift, and go to state 182

    $default  reduce using rule 64 (N)

    N  go to state 372


State 368

   79 expression: expression • COMMA assignment_expression
  193 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M expression • N RIGHTPAR M loop_statement
  195                    | FOR F LEFTPAR X change_table expression_statement M expression_statement M expression • N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    COMMA  shift, and go to state 182

    $default  reduce using rule 64 (N)

    N  go to state 373


State 369

  186 selection_statement: IF LEFTPAR expression N RIGHTPAR M statement N ELSE M statement •

    $default  reduce using rule 186 (selection_statement)


State 370

  189 iteration_statement: WHILE W LEFTPAR X change_table M expression RIGHTPAR LEFTBRACE M block_item_list_opt • RIGHTBRACE

    RIGHTBRACE  shift, and go to state 374


State 371

  191 iteration_statement: DO D LEFTBRACE M block_item_list_opt RIGHTBRACE M WHILE LEFTPAR expression RIGHTPAR • SEMICOLON

    SEMICOLON  shift, and go to state 375


State 372

  192 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M expression N • RIGHTPAR M loop_statement
  194                    | FOR F LEFTPAR X change_table declaration M expression_statement M expression N • RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    RIGHTPAR  shift, and go to state 376


State 373

  193 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N • RIGHTPAR M loop_statement
  195                    | FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N • RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    RIGHTPAR  shift, and go to state 377


State 374

  189 iteration_statement: WHILE W LEFTPAR X change_table M expression RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE •

    $default  reduce using rule 189 (iteration_statement)


State 375

  191 iteration_statement: DO D LEFTBRACE M block_item_list_opt RIGHTBRACE M WHILE LEFTPAR expression RIGHTPAR SEMICOLON •

    $default  reduce using rule 191 (iteration_statement)


State 376

  192 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR • M loop_statement
  194                    | FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR • M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 63 (M)

    M  go to state 378


State 377

  193 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR • M loop_statement
  195                    | FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR • M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 63 (M)

    M  go to state 379


State 378

  192 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M • loop_statement
  194                    | FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M • LEFTBRACE block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 380

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    loop_statement             go to state 381
    labeled_statement          go to state 319
    expression_statement       go to state 320
    selection_statement        go to state 321
    iteration_statement        go to state 322
    jump_statement             go to state 323


State 379

  193 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M • loop_statement
  195                    | FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M • LEFTBRACE block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 382

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    loop_statement             go to state 383
    labeled_statement          go to state 319
    expression_statement       go to state 320
    selection_statement        go to state 321
    iteration_statement        go to state 322
    jump_statement             go to state 323


State 380

  194 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE • block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INLINE          shift, and go to state 20
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 235

    $default  reduce using rule 178 (block_item_list_opt)

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    declaration                go to state 237
    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 238
    labeled_statement          go to state 239
    compound_statement         go to state 240
    block_item_list_opt        go to state 384
    block_item_list            go to state 242
    block_item                 go to state 243
    expression_statement       go to state 244
    selection_statement        go to state 245
    iteration_statement        go to state 246
    jump_statement             go to state 247


State 381

  192 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M loop_statement •

    $default  reduce using rule 192 (iteration_statement)


State 382

  195 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE • block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 222
    FLO_CONSTANT    shift, and go to state 65
    INT_CONSTANT    shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    SIZEOF          shift, and go to state 68
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INLINE          shift, and go to state 20
    CASE            shift, and go to state 223
    DEFAULT         shift, and go to state 224
    IF              shift, and go to state 225
    SWITCH          shift, and go to state 226
    WHILE           shift, and go to state 227
    DO              shift, and go to state 228
    FOR             shift, and go to state 229
    GOTO            shift, and go to state 230
    CONTINUE        shift, and go to state 231
    BREAK           shift, and go to state 232
    RETURN          shift, and go to state 233
    INCREMENT       shift, and go to state 69
    DECREMENT       shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLY        shift, and go to state 73
    TILDA           shift, and go to state 74
    NOT             shift, and go to state 75
    AND             shift, and go to state 76
    SEMICOLON       shift, and go to state 234
    LEFTPAR         shift, and go to state 77
    LEFTBRACE       shift, and go to state 235

    $default  reduce using rule 178 (block_item_list_opt)

    primary_expression         go to state 79
    postfix_expression         go to state 80
    unary_expression           go to state 81
    unary_operator             go to state 82
    cast_expression            go to state 83
    multiplicative_expression  go to state 84
    additive_expression        go to state 85
    shift_expression           go to state 86
    relational_expression      go to state 87
    equality_expression        go to state 88
    AND_expression             go to state 89
    exclusive_OR_expression    go to state 90
    inclusive_OR_expression    go to state 91
    logical_AND_expression     go to state 92
    logical_OR_expression      go to state 93
    conditional_expression     go to state 94
    assignment_expression      go to state 112
    expression                 go to state 236
    declaration                go to state 237
    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 238
    labeled_statement          go to state 239
    compound_statement         go to state 240
    block_item_list_opt        go to state 385
    block_item_list            go to state 242
    block_item                 go to state 243
    expression_statement       go to state 244
    selection_statement        go to state 245
    iteration_statement        go to state 246
    jump_statement             go to state 247


State 383

  193 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M loop_statement •

    $default  reduce using rule 193 (iteration_statement)


State 384

  194 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt • RIGHTBRACE

    RIGHTBRACE  shift, and go to state 386


State 385

  195 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt • RIGHTBRACE

    RIGHTBRACE  shift, and go to state 387


State 386

  194 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE •

    $default  reduce using rule 194 (iteration_statement)


State 387

  195 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE •

    $default  reduce using rule 195 (iteration_statement)
