Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | constant
    3                   | STRING_LITERAL
    4                   | LEFTPAR expression RIGHTPAR

    5 constant: INT_CONSTANT
    6         | FLO_CONSTANT
    7         | CHAR_CONSTANT

    8 postfix_expression: primary_expression
    9                   | postfix_expression LEFTBRACKET expression RIGHTBRACKET
   10                   | postfix_expression LEFTPAR argument_expression_list_opt RIGHTPAR
   11                   | postfix_expression DOT IDENTIFIER
   12                   | postfix_expression ARROW IDENTIFIER
   13                   | postfix_expression INCREMENT
   14                   | postfix_expression DECREMENT
   15                   | LEFTPAR type_name RIGHTPAR LEFTBRACE initializer_list RIGHTBRACE
   16                   | LEFTPAR type_name RIGHTPAR LEFTBRACE initializer_list COMMA RIGHTBRACE

   17 argument_expression_list_opt: argument_expression_list
   18                             | ε

   19 argument_expression_list: assignment_expression
   20                         | argument_expression_list COMMA assignment_expression

   21 unary_expression: postfix_expression
   22                 | INCREMENT unary_expression
   23                 | DECREMENT unary_expression
   24                 | unary_operator cast_expression
   25                 | SIZEOF unary_expression
   26                 | SIZEOF LEFTPAR type_name RIGHTPAR

   27 unary_operator: PLUS
   28               | MINUS
   29               | NOT
   30               | TILDA
   31               | AND
   32               | MULTIPLY

   33 cast_expression: unary_expression
   34                | LEFTPAR type_name RIGHTPAR cast_expression

   35 multiplicative_expression: cast_expression
   36                          | multiplicative_expression MULTIPLY cast_expression
   37                          | multiplicative_expression DIV cast_expression
   38                          | multiplicative_expression MOD cast_expression

   39 additive_expression: multiplicative_expression
   40                    | additive_expression PLUS multiplicative_expression
   41                    | additive_expression MINUS multiplicative_expression

   42 shift_expression: additive_expression
   43                 | shift_expression LEFTSHIFT additive_expression
   44                 | shift_expression RIGHTSHIFT additive_expression

   45 relational_expression: shift_expression
   46                      | relational_expression LESS shift_expression
   47                      | relational_expression GREATER shift_expression
   48                      | relational_expression LESSEQUAL shift_expression
   49                      | relational_expression GREATEREQUAL shift_expression

   50 equality_expression: relational_expression
   51                    | equality_expression DOUBLEEQUAL relational_expression
   52                    | equality_expression NOTEQUAL relational_expression

   53 AND_expression: equality_expression
   54               | AND_expression AND equality_expression

   55 exclusive_OR_expression: AND_expression
   56                        | exclusive_OR_expression XOR AND_expression

   57 inclusive_OR_expression: exclusive_OR_expression
   58                        | inclusive_OR_expression OR exclusive_OR_expression

   59 logical_AND_expression: inclusive_OR_expression
   60                       | logical_AND_expression DOUBLEAND M inclusive_OR_expression

   61 logical_OR_expression: logical_AND_expression
   62                      | logical_OR_expression DOUBLEOR M logical_AND_expression

   63 conditional_expression: logical_OR_expression
   64                       | logical_OR_expression N QUESTIONMARK M expression N COLON M conditional_expression

   65 M: ε

   66 N: ε

   67 assignment_expression: conditional_expression
   68                      | unary_expression assignment_operator assignment_expression

   69 assignment_operator: EQUAL
   70                    | MULTIPLYEQUAL
   71                    | DIVEQUAL
   72                    | MODEQUAL
   73                    | PLUSEQUAL
   74                    | MINUSEQUAL
   75                    | LEFTSHIFTEQUAL
   76                    | RIGHTSHIFTEQUAL
   77                    | ANDEQUAL
   78                    | XOREQUAL
   79                    | OREQUAL

   80 expression: assignment_expression
   81           | expression COMMA assignment_expression

   82 constant_expression: conditional_expression

   83 declaration: declaration_specifiers init_declarator_list SEMICOLON
   84            | declaration_specifiers SEMICOLON

   85 declaration_specifiers: storage_class_specifier declaration_specifiers
   86                       | storage_class_specifier
   87                       | type_specifier declaration_specifiers
   88                       | type_specifier
   89                       | type_qualifier declaration_specifiers
   90                       | type_qualifier
   91                       | function_specifier declaration_specifiers
   92                       | function_specifier

   93 init_declarator_list: init_declarator
   94                     | init_declarator_list COMMA init_declarator

   95 init_declarator: declarator EQUAL initializer
   96                | declarator

   97 storage_class_specifier: EXTERN
   98                        | STATIC
   99                        | AUTO
  100                        | REGISTER

  101 type_specifier: VOID
  102               | CHAR
  103               | SHORT
  104               | INT
  105               | LONG
  106               | FLOAT
  107               | DOUBLE
  108               | SIGNED
  109               | UNSIGNED
  110               | BOOL
  111               | COMPLEX
  112               | IMAGINARY

  113 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  114                         | type_qualifier specifier_qualifier_list_opt

  115 specifier_qualifier_list_opt: specifier_qualifier_list
  116                             | ε

  117 type_qualifier: CONST
  118               | RESTRICT
  119               | VOLATILE

  120 function_specifier: INLINE

  121 declarator: pointer direct_declarator
  122           | direct_declarator

  123 direct_declarator: IDENTIFIER
  124                  | LEFTPAR declarator RIGHTPAR
  125                  | direct_declarator LEFTBRACKET RIGHTBRACKET
  126                  | direct_declarator LEFTBRACKET type_qualifier_list RIGHTBRACKET
  127                  | direct_declarator LEFTBRACKET assignment_expression RIGHTBRACKET
  128                  | direct_declarator LEFTBRACKET type_qualifier_list assignment_expression RIGHTBRACKET
  129                  | direct_declarator LEFTBRACKET STATIC type_qualifier_list assignment_expression RIGHTBRACKET
  130                  | direct_declarator LEFTBRACKET STATIC assignment_expression RIGHTBRACKET
  131                  | direct_declarator LEFTBRACKET type_qualifier_list STATIC assignment_expression RIGHTBRACKET
  132                  | direct_declarator LEFTBRACKET MULTIPLY RIGHTBRACKET
  133                  | direct_declarator LEFTBRACKET type_qualifier_list MULTIPLY RIGHTBRACKET
  134                  | direct_declarator LEFTPAR change_table parameter_type_list RIGHTPAR
  135                  | direct_declarator LEFTPAR identifier_list RIGHTPAR
  136                  | direct_declarator LEFTPAR change_table RIGHTPAR

  137 type_qualifier_list_opt: type_qualifier_list
  138                        | ε

  139 pointer: MULTIPLY type_qualifier_list_opt
  140        | MULTIPLY type_qualifier_list_opt pointer

  141 type_qualifier_list: type_qualifier
  142                    | type_qualifier_list type_qualifier

  143 parameter_type_list: parameter_list
  144                    | parameter_list COMMA ELLIPSIS

  145 parameter_list: parameter_declaration
  146               | parameter_list COMMA parameter_declaration

  147 parameter_declaration: declaration_specifiers declarator
  148                      | declaration_specifiers

  149 identifier_list: IDENTIFIER
  150                | identifier_list COMMA IDENTIFIER

  151 type_name: specifier_qualifier_list

  152 initializer: assignment_expression
  153            | LEFTBRACE initializer_list RIGHTBRACE
  154            | LEFTBRACE initializer_list COMMA RIGHTBRACE

  155 initializer_list: initializer
  156                 | designation initializer
  157                 | initializer_list COMMA initializer
  158                 | initializer_list COMMA designation initializer

  159 designation: designator_list EQUAL

  160 designator_list: designator
  161                | designator_list designator

  162 designator: LEFTBRACKET constant_expression RIGHTBRACKET
  163           | DOT IDENTIFIER

  164 statement: labeled_statement
  165          | compound_statement
  166          | expression_statement
  167          | selection_statement
  168          | iteration_statement
  169          | jump_statement

  170 loop_statement: labeled_statement
  171               | expression_statement
  172               | selection_statement
  173               | iteration_statement
  174               | jump_statement

  175 labeled_statement: IDENTIFIER COLON statement
  176                  | CASE constant_expression COLON statement
  177                  | DEFAULT COLON statement

  178 compound_statement: LEFTBRACE X change_table block_item_list_opt RIGHTBRACE

  179 block_item_list_opt: block_item_list
  180                    | ε

  181 block_item_list: block_item
  182                | block_item_list M block_item

  183 block_item: declaration
  184           | statement

  185 expression_statement: SEMICOLON
  186                     | expression SEMICOLON

  187 selection_statement: IF LEFTPAR expression N RIGHTPAR M statement N
  188                    | IF LEFTPAR expression N RIGHTPAR M statement N ELSE M statement
  189                    | SWITCH LEFTPAR expression RIGHTPAR statement

  190 iteration_statement: WHILE W LEFTPAR X change_table M expression RIGHTPAR M loop_statement
  191                    | WHILE W LEFTPAR X change_table M expression RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE
  192                    | DO D M loop_statement M WHILE LEFTPAR expression RIGHTPAR SEMICOLON
  193                    | DO D LEFTBRACE M block_item_list_opt RIGHTBRACE M WHILE LEFTPAR expression RIGHTPAR SEMICOLON
  194                    | FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M loop_statement
  195                    | FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M loop_statement
  196                    | FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE
  197                    | FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

  198 F: ε

  199 W: ε

  200 D: ε

  201 X: ε

  202 change_table: ε

  203 jump_statement: GOTO IDENTIFIER SEMICOLON
  204               | CONTINUE SEMICOLON
  205               | BREAK SEMICOLON
  206               | RETURN SEMICOLON
  207               | RETURN expression SEMICOLON

  208 translation_unit: translation_unit external_declaration
  209                 | external_declaration

  210 external_declaration: function_definition
  211                     | declaration

  212 function_definition: declaration_specifiers declarator declaration_list_opt change_table LEFTBRACE block_item_list_opt RIGHTBRACE

  213 declaration_list_opt: declaration_list
  214                     | ε

  215 declaration_list: declaration
  216                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <syent> (258) 1 11 12 123 149 150 163 175 203
    FLO_CONSTANT <charval> (259) 6
    CHAR_CONSTANT <charval> (260) 7
    INT_CONSTANT <ival> (261) 5
    STRING_LITERAL <charval> (262) 3
    SIZEOF (263) 25 26
    EXTERN (264) 97
    STATIC (265) 98 129 130 131
    AUTO (266) 99
    REGISTER (267) 100
    VOID (268) 101
    CHAR (269) 102
    SHORT (270) 103
    INT (271) 104
    LONG (272) 105
    FLOAT (273) 106
    DOUBLE (274) 107
    SIGNED (275) 108
    UNSIGNED (276) 109
    BOOL (277) 110
    COMPLEX (278) 111
    IMAGINARY (279) 112
    CONST (280) 117
    RESTRICT (281) 118
    VOLATILE (282) 119
    INLINE (283) 120
    ELLIPSIS (284) 144
    CASE (285) 176
    DEFAULT (286) 177
    IF (287) 187 188
    ELSE (288) 188
    SWITCH (289) 189
    WHILE (290) 190 191 192 193
    DO (291) 192 193
    FOR (292) 194 195 196 197
    GOTO (293) 203
    CONTINUE (294) 204
    BREAK (295) 205
    RETURN (296) 206 207
    ARROW (297) 12
    INCREMENT (298) 13 22
    DECREMENT (299) 14 23
    LEFTSHIFT (300) 43
    RIGHTSHIFT (301) 44
    LESSEQUAL (302) 48
    GREATEREQUAL (303) 49
    DOUBLEEQUAL (304) 51
    NOTEQUAL (305) 52
    DOUBLEAND (306) 60
    DOUBLEOR (307) 62
    PLUSEQUAL (308) 73
    MINUSEQUAL (309) 74
    MULTIPLYEQUAL (310) 70
    DIVEQUAL (311) 71
    MODEQUAL (312) 72
    LEFTSHIFTEQUAL (313) 75
    RIGHTSHIFTEQUAL (314) 76
    ANDEQUAL (315) 77
    OREQUAL (316) 79
    XOREQUAL (317) 78
    PLUS (318) 27 40
    MINUS (319) 28 41
    MULTIPLY (320) 32 36 132 133 139 140
    DIV (321) 37
    MOD (322) 38
    TILDA (323) 30
    NOT (324) 29
    AND (325) 31 54
    EQUAL (326) 69 95 159
    SEMICOLON (327) 83 84 185 186 192 193 203 204 205 206 207
    COMMA (328) 16 20 81 94 144 146 150 154 157 158
    DOT (329) 11 163
    LESS (330) 46
    GREATER (331) 47
    OR (332) 58
    XOR (333) 56
    LOWER_THAN_ELSE (334)
    LEFTPAR (335) 4 10 15 16 26 34 124 134 135 136 187 188 189 190 191 192 193 194 195 196 197
    RIGHTPAR (336) 4 10 15 16 26 34 124 134 135 136 187 188 189 190 191 192 193 194 195 196 197
    LEFTBRACE (337) 15 16 153 154 178 191 193 196 197 212
    RIGHTBRACE (338) 15 16 153 154 178 191 193 196 197 212
    LEFTBRACKET (339) 9 125 126 127 128 129 130 131 132 133 162
    RIGHTBRACKET (340) 9 125 126 127 128 129 130 131 132 133 162
    COLON (341) 64 175 176 177
    QUESTIONMARK (342) 64


Nonterminals, with rules where they appear

    $accept (88)
        on left: 0
    primary_expression <expr> (89)
        on left: 1 2 3 4
        on right: 8
    constant <syent> (90)
        on left: 5 6 7
        on right: 2
    postfix_expression <arr> (91)
        on left: 8 9 10 11 12 13 14 15 16
        on right: 9 10 11 12 13 14 21
    argument_expression_list_opt <numparams> (92)
        on left: 17 18
        on right: 10
    argument_expression_list <numparams> (93)
        on left: 19 20
        on right: 17 20
    unary_expression <arr> (94)
        on left: 21 22 23 24 25 26
        on right: 22 23 25 33 68
    unary_operator <unary_op> (95)
        on left: 27 28 29 30 31 32
        on right: 24
    cast_expression <arr> (96)
        on left: 33 34
        on right: 24 34 35 36 37 38
    multiplicative_expression <expr> (97)
        on left: 35 36 37 38
        on right: 36 37 38 39 40 41
    additive_expression <expr> (98)
        on left: 39 40 41
        on right: 40 41 42 43 44
    shift_expression <expr> (99)
        on left: 42 43 44
        on right: 43 44 45 46 47 48 49
    relational_expression <expr> (100)
        on left: 45 46 47 48 49
        on right: 46 47 48 49 50 51 52
    equality_expression <expr> (101)
        on left: 50 51 52
        on right: 51 52 53 54
    AND_expression <expr> (102)
        on left: 53 54
        on right: 54 55 56
    exclusive_OR_expression <expr> (103)
        on left: 55 56
        on right: 56 57 58
    inclusive_OR_expression <expr> (104)
        on left: 57 58
        on right: 58 59 60
    logical_AND_expression <expr> (105)
        on left: 59 60
        on right: 60 61 62
    logical_OR_expression <expr> (106)
        on left: 61 62
        on right: 62 63 64
    conditional_expression <expr> (107)
        on left: 63 64
        on right: 64 67 82
    M <instruction> (108)
        on left: 65
        on right: 60 62 64 182 187 188 190 191 192 193 194 195 196 197
    N <stmt> (109)
        on left: 66
        on right: 64 187 188 194 195 196 197
    assignment_expression <expr> (110)
        on left: 67 68
        on right: 19 20 68 80 81 127 128 129 130 131 152
    assignment_operator (111)
        on left: 69 70 71 72 73 74 75 76 77 78 79
        on right: 68
    expression <expr> (112)
        on left: 80 81
        on right: 4 9 64 81 186 187 188 189 190 191 192 193 194 195 196 197 207
    constant_expression (113)
        on left: 82
        on right: 162 176
    declaration (114)
        on left: 83 84
        on right: 183 194 196 211 215 216
    declaration_specifiers (115)
        on left: 85 86 87 88 89 90 91 92
        on right: 83 84 85 87 89 91 147 148 212
    init_declarator_list (116)
        on left: 93 94
        on right: 83 94
    init_declarator <syent> (117)
        on left: 95 96
        on right: 93 94
    storage_class_specifier (118)
        on left: 97 98 99 100
        on right: 85 86
    type_specifier (119)
        on left: 101 102 103 104 105 106 107 108 109 110 111 112
        on right: 87 88 113
    specifier_qualifier_list (120)
        on left: 113 114
        on right: 115 151
    specifier_qualifier_list_opt (121)
        on left: 115 116
        on right: 113 114
    type_qualifier (122)
        on left: 117 118 119
        on right: 89 90 114 141 142
    function_specifier (123)
        on left: 120
        on right: 91 92
    declarator <syent> (124)
        on left: 121 122
        on right: 95 96 124 147 212
    direct_declarator <syent> (125)
        on left: 123 124 125 126 127 128 129 130 131 132 133 134 135 136
        on right: 121 122 125 126 127 128 129 130 131 132 133 134 135 136
    type_qualifier_list_opt (126)
        on left: 137 138
        on right: 139 140
    pointer <syenttype> (127)
        on left: 139 140
        on right: 121 140
    type_qualifier_list (128)
        on left: 141 142
        on right: 126 128 129 131 133 137 142
    parameter_type_list (129)
        on left: 143 144
        on right: 134
    parameter_list (130)
        on left: 145 146
        on right: 143 144 146
    parameter_declaration (131)
        on left: 147 148
        on right: 145 146
    identifier_list (132)
        on left: 149 150
        on right: 135 150
    type_name (133)
        on left: 151
        on right: 15 16 26 34
    initializer <syent> (134)
        on left: 152 153 154
        on right: 95 155 156 157 158
    initializer_list (135)
        on left: 155 156 157 158
        on right: 15 16 153 154 157 158
    designation (136)
        on left: 159
        on right: 156 158
    designator_list (137)
        on left: 160 161
        on right: 159 161
    designator (138)
        on left: 162 163
        on right: 160 161
    statement <stmt> (139)
        on left: 164 165 166 167 168 169
        on right: 175 176 177 184 187 188 189
    loop_statement <stmt> (140)
        on left: 170 171 172 173 174
        on right: 190 192 194 195
    labeled_statement <stmt> (141)
        on left: 175 176 177
        on right: 164 170
    compound_statement <stmt> (142)
        on left: 178
        on right: 165
    block_item_list_opt <stmt> (143)
        on left: 179 180
        on right: 178 191 193 196 197 212
    block_item_list <stmt> (144)
        on left: 181 182
        on right: 179 182
    block_item <stmt> (145)
        on left: 183 184
        on right: 181 182
    expression_statement <expr> (146)
        on left: 185 186
        on right: 166 171 194 195 196 197
    selection_statement <stmt> (147)
        on left: 187 188 189
        on right: 167 172
    iteration_statement <stmt> (148)
        on left: 190 191 192 193 194 195 196 197
        on right: 168 173
    F (149)
        on left: 198
        on right: 194 195 196 197
    W (150)
        on left: 199
        on right: 190 191
    D (151)
        on left: 200
        on right: 192 193
    X (152)
        on left: 201
        on right: 178 190 191 194 195 196 197
    change_table (153)
        on left: 202
        on right: 134 136 178 190 191 194 195 196 197 212
    jump_statement <stmt> (154)
        on left: 203 204 205 206 207
        on right: 169 174
    translation_unit (155)
        on left: 208 209
        on right: 0 208
    external_declaration (156)
        on left: 210 211
        on right: 208 209
    function_definition (157)
        on left: 212
        on right: 210
    declaration_list_opt (158)
        on left: 213 214
        on right: 212
    declaration_list (159)
        on left: 215 216
        on right: 213 216


State 0

    0 $accept: • translation_unit $end

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20

    declaration              go to state 21
    declaration_specifiers   go to state 22
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    translation_unit         go to state 27
    external_declaration     go to state 28
    function_definition      go to state 29


State 1

   97 storage_class_specifier: EXTERN •

    $default  reduce using rule 97 (storage_class_specifier)


State 2

   98 storage_class_specifier: STATIC •

    $default  reduce using rule 98 (storage_class_specifier)


State 3

   99 storage_class_specifier: AUTO •

    $default  reduce using rule 99 (storage_class_specifier)


State 4

  100 storage_class_specifier: REGISTER •

    $default  reduce using rule 100 (storage_class_specifier)


State 5

  101 type_specifier: VOID •

    $default  reduce using rule 101 (type_specifier)


State 6

  102 type_specifier: CHAR •

    $default  reduce using rule 102 (type_specifier)


State 7

  103 type_specifier: SHORT •

    $default  reduce using rule 103 (type_specifier)


State 8

  104 type_specifier: INT •

    $default  reduce using rule 104 (type_specifier)


State 9

  105 type_specifier: LONG •

    $default  reduce using rule 105 (type_specifier)


State 10

  106 type_specifier: FLOAT •

    $default  reduce using rule 106 (type_specifier)


State 11

  107 type_specifier: DOUBLE •

    $default  reduce using rule 107 (type_specifier)


State 12

  108 type_specifier: SIGNED •

    $default  reduce using rule 108 (type_specifier)


State 13

  109 type_specifier: UNSIGNED •

    $default  reduce using rule 109 (type_specifier)


State 14

  110 type_specifier: BOOL •

    $default  reduce using rule 110 (type_specifier)


State 15

  111 type_specifier: COMPLEX •

    $default  reduce using rule 111 (type_specifier)


State 16

  112 type_specifier: IMAGINARY •

    $default  reduce using rule 112 (type_specifier)


State 17

  117 type_qualifier: CONST •

    $default  reduce using rule 117 (type_qualifier)


State 18

  118 type_qualifier: RESTRICT •

    $default  reduce using rule 118 (type_qualifier)


State 19

  119 type_qualifier: VOLATILE •

    $default  reduce using rule 119 (type_qualifier)


State 20

  120 function_specifier: INLINE •

    $default  reduce using rule 120 (function_specifier)


State 21

  211 external_declaration: declaration •

    $default  reduce using rule 211 (external_declaration)


State 22

   83 declaration: declaration_specifiers • init_declarator_list SEMICOLON
   84            | declaration_specifiers • SEMICOLON
  212 function_definition: declaration_specifiers • declarator declaration_list_opt change_table LEFTBRACE block_item_list_opt RIGHTBRACE

    IDENTIFIER  shift, and go to state 30
    MULTIPLY    shift, and go to state 31
    SEMICOLON   shift, and go to state 32
    LEFTPAR     shift, and go to state 33

    init_declarator_list  go to state 34
    init_declarator       go to state 35
    declarator            go to state 36
    direct_declarator     go to state 37
    pointer               go to state 38


State 23

   85 declaration_specifiers: storage_class_specifier • declaration_specifiers
   86                       | storage_class_specifier •

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20

    $default  reduce using rule 86 (declaration_specifiers)

    declaration_specifiers   go to state 39
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 24

   87 declaration_specifiers: type_specifier • declaration_specifiers
   88                       | type_specifier •

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20

    $default  reduce using rule 88 (declaration_specifiers)

    declaration_specifiers   go to state 40
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 25

   89 declaration_specifiers: type_qualifier • declaration_specifiers
   90                       | type_qualifier •

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20

    $default  reduce using rule 90 (declaration_specifiers)

    declaration_specifiers   go to state 41
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 26

   91 declaration_specifiers: function_specifier • declaration_specifiers
   92                       | function_specifier •

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20

    $default  reduce using rule 92 (declaration_specifiers)

    declaration_specifiers   go to state 42
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 27

    0 $accept: translation_unit • $end
  208 translation_unit: translation_unit • external_declaration

    $end       shift, and go to state 43
    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20

    declaration              go to state 21
    declaration_specifiers   go to state 22
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    external_declaration     go to state 44
    function_definition      go to state 29


State 28

  209 translation_unit: external_declaration •

    $default  reduce using rule 209 (translation_unit)


State 29

  210 external_declaration: function_definition •

    $default  reduce using rule 210 (external_declaration)


State 30

  123 direct_declarator: IDENTIFIER •

    $default  reduce using rule 123 (direct_declarator)


State 31

  139 pointer: MULTIPLY • type_qualifier_list_opt
  140        | MULTIPLY • type_qualifier_list_opt pointer

    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 18
    VOLATILE  shift, and go to state 19

    $default  reduce using rule 138 (type_qualifier_list_opt)

    type_qualifier           go to state 45
    type_qualifier_list_opt  go to state 46
    type_qualifier_list      go to state 47


State 32

   84 declaration: declaration_specifiers SEMICOLON •

    $default  reduce using rule 84 (declaration)


State 33

  124 direct_declarator: LEFTPAR • declarator RIGHTPAR

    IDENTIFIER  shift, and go to state 30
    MULTIPLY    shift, and go to state 31
    LEFTPAR     shift, and go to state 33

    declarator         go to state 48
    direct_declarator  go to state 37
    pointer            go to state 38


State 34

   83 declaration: declaration_specifiers init_declarator_list • SEMICOLON
   94 init_declarator_list: init_declarator_list • COMMA init_declarator

    SEMICOLON  shift, and go to state 49
    COMMA      shift, and go to state 50


State 35

   93 init_declarator_list: init_declarator •

    $default  reduce using rule 93 (init_declarator_list)


State 36

   95 init_declarator: declarator • EQUAL initializer
   96                | declarator •
  212 function_definition: declaration_specifiers declarator • declaration_list_opt change_table LEFTBRACE block_item_list_opt RIGHTBRACE

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20
    EQUAL      shift, and go to state 51

    LEFTBRACE  reduce using rule 214 (declaration_list_opt)
    $default   reduce using rule 96 (init_declarator)

    declaration              go to state 52
    declaration_specifiers   go to state 53
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    declaration_list_opt     go to state 54
    declaration_list         go to state 55


State 37

  122 declarator: direct_declarator •
  125 direct_declarator: direct_declarator • LEFTBRACKET RIGHTBRACKET
  126                  | direct_declarator • LEFTBRACKET type_qualifier_list RIGHTBRACKET
  127                  | direct_declarator • LEFTBRACKET assignment_expression RIGHTBRACKET
  128                  | direct_declarator • LEFTBRACKET type_qualifier_list assignment_expression RIGHTBRACKET
  129                  | direct_declarator • LEFTBRACKET STATIC type_qualifier_list assignment_expression RIGHTBRACKET
  130                  | direct_declarator • LEFTBRACKET STATIC assignment_expression RIGHTBRACKET
  131                  | direct_declarator • LEFTBRACKET type_qualifier_list STATIC assignment_expression RIGHTBRACKET
  132                  | direct_declarator • LEFTBRACKET MULTIPLY RIGHTBRACKET
  133                  | direct_declarator • LEFTBRACKET type_qualifier_list MULTIPLY RIGHTBRACKET
  134                  | direct_declarator • LEFTPAR change_table parameter_type_list RIGHTPAR
  135                  | direct_declarator • LEFTPAR identifier_list RIGHTPAR
  136                  | direct_declarator • LEFTPAR change_table RIGHTPAR

    LEFTPAR      shift, and go to state 56
    LEFTBRACKET  shift, and go to state 57

    $default  reduce using rule 122 (declarator)


State 38

  121 declarator: pointer • direct_declarator

    IDENTIFIER  shift, and go to state 30
    LEFTPAR     shift, and go to state 33

    direct_declarator  go to state 58


State 39

   85 declaration_specifiers: storage_class_specifier declaration_specifiers •

    $default  reduce using rule 85 (declaration_specifiers)


State 40

   87 declaration_specifiers: type_specifier declaration_specifiers •

    $default  reduce using rule 87 (declaration_specifiers)


State 41

   89 declaration_specifiers: type_qualifier declaration_specifiers •

    $default  reduce using rule 89 (declaration_specifiers)


State 42

   91 declaration_specifiers: function_specifier declaration_specifiers •

    $default  reduce using rule 91 (declaration_specifiers)


State 43

    0 $accept: translation_unit $end •

    $default  accept


State 44

  208 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 208 (translation_unit)


State 45

  141 type_qualifier_list: type_qualifier •

    $default  reduce using rule 141 (type_qualifier_list)


State 46

  139 pointer: MULTIPLY type_qualifier_list_opt •
  140        | MULTIPLY type_qualifier_list_opt • pointer

    MULTIPLY  shift, and go to state 31

    $default  reduce using rule 139 (pointer)

    pointer  go to state 59


State 47

  137 type_qualifier_list_opt: type_qualifier_list •
  142 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 18
    VOLATILE  shift, and go to state 19

    $default  reduce using rule 137 (type_qualifier_list_opt)

    type_qualifier  go to state 60


State 48

  124 direct_declarator: LEFTPAR declarator • RIGHTPAR

    RIGHTPAR  shift, and go to state 61


State 49

   83 declaration: declaration_specifiers init_declarator_list SEMICOLON •

    $default  reduce using rule 83 (declaration)


State 50

   94 init_declarator_list: init_declarator_list COMMA • init_declarator

    IDENTIFIER  shift, and go to state 30
    MULTIPLY    shift, and go to state 31
    LEFTPAR     shift, and go to state 33

    init_declarator    go to state 62
    declarator         go to state 63
    direct_declarator  go to state 37
    pointer            go to state 38


State 51

   95 init_declarator: declarator EQUAL • initializer

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 79

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 97
    initializer                go to state 98


State 52

  215 declaration_list: declaration •

    $default  reduce using rule 215 (declaration_list)


State 53

   83 declaration: declaration_specifiers • init_declarator_list SEMICOLON
   84            | declaration_specifiers • SEMICOLON

    IDENTIFIER  shift, and go to state 30
    MULTIPLY    shift, and go to state 31
    SEMICOLON   shift, and go to state 32
    LEFTPAR     shift, and go to state 33

    init_declarator_list  go to state 34
    init_declarator       go to state 35
    declarator            go to state 63
    direct_declarator     go to state 37
    pointer               go to state 38


State 54

  212 function_definition: declaration_specifiers declarator declaration_list_opt • change_table LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 202 (change_table)

    change_table  go to state 99


State 55

  213 declaration_list_opt: declaration_list •
  216 declaration_list: declaration_list • declaration

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20

    $default  reduce using rule 213 (declaration_list_opt)

    declaration              go to state 100
    declaration_specifiers   go to state 53
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 56

  134 direct_declarator: direct_declarator LEFTPAR • change_table parameter_type_list RIGHTPAR
  135                  | direct_declarator LEFTPAR • identifier_list RIGHTPAR
  136                  | direct_declarator LEFTPAR • change_table RIGHTPAR

    IDENTIFIER  shift, and go to state 101

    $default  reduce using rule 202 (change_table)

    identifier_list  go to state 102
    change_table     go to state 103


State 57

  125 direct_declarator: direct_declarator LEFTBRACKET • RIGHTBRACKET
  126                  | direct_declarator LEFTBRACKET • type_qualifier_list RIGHTBRACKET
  127                  | direct_declarator LEFTBRACKET • assignment_expression RIGHTBRACKET
  128                  | direct_declarator LEFTBRACKET • type_qualifier_list assignment_expression RIGHTBRACKET
  129                  | direct_declarator LEFTBRACKET • STATIC type_qualifier_list assignment_expression RIGHTBRACKET
  130                  | direct_declarator LEFTBRACKET • STATIC assignment_expression RIGHTBRACKET
  131                  | direct_declarator LEFTBRACKET • type_qualifier_list STATIC assignment_expression RIGHTBRACKET
  132                  | direct_declarator LEFTBRACKET • MULTIPLY RIGHTBRACKET
  133                  | direct_declarator LEFTBRACKET • type_qualifier_list MULTIPLY RIGHTBRACKET

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    STATIC          shift, and go to state 104
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 105
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78
    RIGHTBRACKET    shift, and go to state 106

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 107
    type_qualifier             go to state 45
    type_qualifier_list        go to state 108


State 58

  121 declarator: pointer direct_declarator •
  125 direct_declarator: direct_declarator • LEFTBRACKET RIGHTBRACKET
  126                  | direct_declarator • LEFTBRACKET type_qualifier_list RIGHTBRACKET
  127                  | direct_declarator • LEFTBRACKET assignment_expression RIGHTBRACKET
  128                  | direct_declarator • LEFTBRACKET type_qualifier_list assignment_expression RIGHTBRACKET
  129                  | direct_declarator • LEFTBRACKET STATIC type_qualifier_list assignment_expression RIGHTBRACKET
  130                  | direct_declarator • LEFTBRACKET STATIC assignment_expression RIGHTBRACKET
  131                  | direct_declarator • LEFTBRACKET type_qualifier_list STATIC assignment_expression RIGHTBRACKET
  132                  | direct_declarator • LEFTBRACKET MULTIPLY RIGHTBRACKET
  133                  | direct_declarator • LEFTBRACKET type_qualifier_list MULTIPLY RIGHTBRACKET
  134                  | direct_declarator • LEFTPAR change_table parameter_type_list RIGHTPAR
  135                  | direct_declarator • LEFTPAR identifier_list RIGHTPAR
  136                  | direct_declarator • LEFTPAR change_table RIGHTPAR

    LEFTPAR      shift, and go to state 56
    LEFTBRACKET  shift, and go to state 57

    $default  reduce using rule 121 (declarator)


State 59

  140 pointer: MULTIPLY type_qualifier_list_opt pointer •

    $default  reduce using rule 140 (pointer)


State 60

  142 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 142 (type_qualifier_list)


State 61

  124 direct_declarator: LEFTPAR declarator RIGHTPAR •

    $default  reduce using rule 124 (direct_declarator)


State 62

   94 init_declarator_list: init_declarator_list COMMA init_declarator •

    $default  reduce using rule 94 (init_declarator_list)


State 63

   95 init_declarator: declarator • EQUAL initializer
   96                | declarator •

    EQUAL  shift, and go to state 51

    $default  reduce using rule 96 (init_declarator)


State 64

    1 primary_expression: IDENTIFIER •

    $default  reduce using rule 1 (primary_expression)


State 65

    6 constant: FLO_CONSTANT •

    $default  reduce using rule 6 (constant)


State 66

    7 constant: CHAR_CONSTANT •

    $default  reduce using rule 7 (constant)


State 67

    5 constant: INT_CONSTANT •

    $default  reduce using rule 5 (constant)


State 68

    3 primary_expression: STRING_LITERAL •

    $default  reduce using rule 3 (primary_expression)


State 69

   25 unary_expression: SIZEOF • unary_expression
   26                 | SIZEOF • LEFTPAR type_name RIGHTPAR

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 109

    primary_expression  go to state 80
    constant            go to state 81
    postfix_expression  go to state 82
    unary_expression    go to state 110
    unary_operator      go to state 84


State 70

   22 unary_expression: INCREMENT • unary_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 111

    primary_expression  go to state 80
    constant            go to state 81
    postfix_expression  go to state 82
    unary_expression    go to state 112
    unary_operator      go to state 84


State 71

   23 unary_expression: DECREMENT • unary_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 111

    primary_expression  go to state 80
    constant            go to state 81
    postfix_expression  go to state 82
    unary_expression    go to state 113
    unary_operator      go to state 84


State 72

   27 unary_operator: PLUS •

    $default  reduce using rule 27 (unary_operator)


State 73

   28 unary_operator: MINUS •

    $default  reduce using rule 28 (unary_operator)


State 74

   32 unary_operator: MULTIPLY •

    $default  reduce using rule 32 (unary_operator)


State 75

   30 unary_operator: TILDA •

    $default  reduce using rule 30 (unary_operator)


State 76

   29 unary_operator: NOT •

    $default  reduce using rule 29 (unary_operator)


State 77

   31 unary_operator: AND •

    $default  reduce using rule 31 (unary_operator)


State 78

    4 primary_expression: LEFTPAR • expression RIGHTPAR
   15 postfix_expression: LEFTPAR • type_name RIGHTPAR LEFTBRACE initializer_list RIGHTBRACE
   16                   | LEFTPAR • type_name RIGHTPAR LEFTBRACE initializer_list COMMA RIGHTBRACE
   34 cast_expression: LEFTPAR • type_name RIGHTPAR cast_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 115
    type_specifier             go to state 116
    specifier_qualifier_list   go to state 117
    type_qualifier             go to state 118
    type_name                  go to state 119


State 79

  153 initializer: LEFTBRACE • initializer_list RIGHTBRACE
  154            | LEFTBRACE • initializer_list COMMA RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    DOT             shift, and go to state 120
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 79
    LEFTBRACKET     shift, and go to state 121

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 97
    initializer                go to state 122
    initializer_list           go to state 123
    designation                go to state 124
    designator_list            go to state 125
    designator                 go to state 126


State 80

    8 postfix_expression: primary_expression •

    $default  reduce using rule 8 (postfix_expression)


State 81

    2 primary_expression: constant •

    $default  reduce using rule 2 (primary_expression)


State 82

    9 postfix_expression: postfix_expression • LEFTBRACKET expression RIGHTBRACKET
   10                   | postfix_expression • LEFTPAR argument_expression_list_opt RIGHTPAR
   11                   | postfix_expression • DOT IDENTIFIER
   12                   | postfix_expression • ARROW IDENTIFIER
   13                   | postfix_expression • INCREMENT
   14                   | postfix_expression • DECREMENT
   21 unary_expression: postfix_expression •

    ARROW        shift, and go to state 127
    INCREMENT    shift, and go to state 128
    DECREMENT    shift, and go to state 129
    DOT          shift, and go to state 130
    LEFTPAR      shift, and go to state 131
    LEFTBRACKET  shift, and go to state 132

    $default  reduce using rule 21 (unary_expression)


State 83

   33 cast_expression: unary_expression •
   68 assignment_expression: unary_expression • assignment_operator assignment_expression

    PLUSEQUAL        shift, and go to state 133
    MINUSEQUAL       shift, and go to state 134
    MULTIPLYEQUAL    shift, and go to state 135
    DIVEQUAL         shift, and go to state 136
    MODEQUAL         shift, and go to state 137
    LEFTSHIFTEQUAL   shift, and go to state 138
    RIGHTSHIFTEQUAL  shift, and go to state 139
    ANDEQUAL         shift, and go to state 140
    OREQUAL          shift, and go to state 141
    XOREQUAL         shift, and go to state 142
    EQUAL            shift, and go to state 143

    $default  reduce using rule 33 (cast_expression)

    assignment_operator  go to state 144


State 84

   24 unary_expression: unary_operator • cast_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression  go to state 80
    constant            go to state 81
    postfix_expression  go to state 82
    unary_expression    go to state 145
    unary_operator      go to state 84
    cast_expression     go to state 146


State 85

   35 multiplicative_expression: cast_expression •

    $default  reduce using rule 35 (multiplicative_expression)


State 86

   36 multiplicative_expression: multiplicative_expression • MULTIPLY cast_expression
   37                          | multiplicative_expression • DIV cast_expression
   38                          | multiplicative_expression • MOD cast_expression
   39 additive_expression: multiplicative_expression •

    MULTIPLY  shift, and go to state 147
    DIV       shift, and go to state 148
    MOD       shift, and go to state 149

    $default  reduce using rule 39 (additive_expression)


State 87

   40 additive_expression: additive_expression • PLUS multiplicative_expression
   41                    | additive_expression • MINUS multiplicative_expression
   42 shift_expression: additive_expression •

    PLUS   shift, and go to state 150
    MINUS  shift, and go to state 151

    $default  reduce using rule 42 (shift_expression)


State 88

   43 shift_expression: shift_expression • LEFTSHIFT additive_expression
   44                 | shift_expression • RIGHTSHIFT additive_expression
   45 relational_expression: shift_expression •

    LEFTSHIFT   shift, and go to state 152
    RIGHTSHIFT  shift, and go to state 153

    $default  reduce using rule 45 (relational_expression)


State 89

   46 relational_expression: relational_expression • LESS shift_expression
   47                      | relational_expression • GREATER shift_expression
   48                      | relational_expression • LESSEQUAL shift_expression
   49                      | relational_expression • GREATEREQUAL shift_expression
   50 equality_expression: relational_expression •

    LESSEQUAL     shift, and go to state 154
    GREATEREQUAL  shift, and go to state 155
    LESS          shift, and go to state 156
    GREATER       shift, and go to state 157

    $default  reduce using rule 50 (equality_expression)


State 90

   51 equality_expression: equality_expression • DOUBLEEQUAL relational_expression
   52                    | equality_expression • NOTEQUAL relational_expression
   53 AND_expression: equality_expression •

    DOUBLEEQUAL  shift, and go to state 158
    NOTEQUAL     shift, and go to state 159

    $default  reduce using rule 53 (AND_expression)


State 91

   54 AND_expression: AND_expression • AND equality_expression
   55 exclusive_OR_expression: AND_expression •

    AND  shift, and go to state 160

    $default  reduce using rule 55 (exclusive_OR_expression)


State 92

   56 exclusive_OR_expression: exclusive_OR_expression • XOR AND_expression
   57 inclusive_OR_expression: exclusive_OR_expression •

    XOR  shift, and go to state 161

    $default  reduce using rule 57 (inclusive_OR_expression)


State 93

   58 inclusive_OR_expression: inclusive_OR_expression • OR exclusive_OR_expression
   59 logical_AND_expression: inclusive_OR_expression •

    OR  shift, and go to state 162

    $default  reduce using rule 59 (logical_AND_expression)


State 94

   60 logical_AND_expression: logical_AND_expression • DOUBLEAND M inclusive_OR_expression
   61 logical_OR_expression: logical_AND_expression •

    DOUBLEAND  shift, and go to state 163

    $default  reduce using rule 61 (logical_OR_expression)


State 95

   62 logical_OR_expression: logical_OR_expression • DOUBLEOR M logical_AND_expression
   63 conditional_expression: logical_OR_expression •
   64                       | logical_OR_expression • N QUESTIONMARK M expression N COLON M conditional_expression

    DOUBLEOR  shift, and go to state 164

    QUESTIONMARK  reduce using rule 66 (N)
    $default      reduce using rule 63 (conditional_expression)

    N  go to state 165


State 96

   67 assignment_expression: conditional_expression •

    $default  reduce using rule 67 (assignment_expression)


State 97

  152 initializer: assignment_expression •

    $default  reduce using rule 152 (initializer)


State 98

   95 init_declarator: declarator EQUAL initializer •

    $default  reduce using rule 95 (init_declarator)


State 99

  212 function_definition: declaration_specifiers declarator declaration_list_opt change_table • LEFTBRACE block_item_list_opt RIGHTBRACE

    LEFTBRACE  shift, and go to state 166


State 100

  216 declaration_list: declaration_list declaration •

    $default  reduce using rule 216 (declaration_list)


State 101

  149 identifier_list: IDENTIFIER •

    $default  reduce using rule 149 (identifier_list)


State 102

  135 direct_declarator: direct_declarator LEFTPAR identifier_list • RIGHTPAR
  150 identifier_list: identifier_list • COMMA IDENTIFIER

    COMMA     shift, and go to state 167
    RIGHTPAR  shift, and go to state 168


State 103

  134 direct_declarator: direct_declarator LEFTPAR change_table • parameter_type_list RIGHTPAR
  136                  | direct_declarator LEFTPAR change_table • RIGHTPAR

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20
    RIGHTPAR   shift, and go to state 169

    declaration_specifiers   go to state 170
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    parameter_type_list      go to state 171
    parameter_list           go to state 172
    parameter_declaration    go to state 173


State 104

  129 direct_declarator: direct_declarator LEFTBRACKET STATIC • type_qualifier_list assignment_expression RIGHTBRACKET
  130                  | direct_declarator LEFTBRACKET STATIC • assignment_expression RIGHTBRACKET

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 174
    type_qualifier             go to state 45
    type_qualifier_list        go to state 175


State 105

   32 unary_operator: MULTIPLY •
  132 direct_declarator: direct_declarator LEFTBRACKET MULTIPLY • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 176

    $default  reduce using rule 32 (unary_operator)


State 106

  125 direct_declarator: direct_declarator LEFTBRACKET RIGHTBRACKET •

    $default  reduce using rule 125 (direct_declarator)


State 107

  127 direct_declarator: direct_declarator LEFTBRACKET assignment_expression • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 177


State 108

  126 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list • RIGHTBRACKET
  128                  | direct_declarator LEFTBRACKET type_qualifier_list • assignment_expression RIGHTBRACKET
  131                  | direct_declarator LEFTBRACKET type_qualifier_list • STATIC assignment_expression RIGHTBRACKET
  133                  | direct_declarator LEFTBRACKET type_qualifier_list • MULTIPLY RIGHTBRACKET
  142 type_qualifier_list: type_qualifier_list • type_qualifier

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    STATIC          shift, and go to state 178
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 179
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78
    RIGHTBRACKET    shift, and go to state 180

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 181
    type_qualifier             go to state 60


State 109

    4 primary_expression: LEFTPAR • expression RIGHTPAR
   15 postfix_expression: LEFTPAR • type_name RIGHTPAR LEFTBRACE initializer_list RIGHTBRACE
   16                   | LEFTPAR • type_name RIGHTPAR LEFTBRACE initializer_list COMMA RIGHTBRACE
   26 unary_expression: SIZEOF LEFTPAR • type_name RIGHTPAR

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 115
    type_specifier             go to state 116
    specifier_qualifier_list   go to state 117
    type_qualifier             go to state 118
    type_name                  go to state 182


State 110

   25 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 25 (unary_expression)


State 111

    4 primary_expression: LEFTPAR • expression RIGHTPAR
   15 postfix_expression: LEFTPAR • type_name RIGHTPAR LEFTBRACE initializer_list RIGHTBRACE
   16                   | LEFTPAR • type_name RIGHTPAR LEFTBRACE initializer_list COMMA RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 115
    type_specifier             go to state 116
    specifier_qualifier_list   go to state 117
    type_qualifier             go to state 118
    type_name                  go to state 183


State 112

   22 unary_expression: INCREMENT unary_expression •

    $default  reduce using rule 22 (unary_expression)


State 113

   23 unary_expression: DECREMENT unary_expression •

    $default  reduce using rule 23 (unary_expression)


State 114

   80 expression: assignment_expression •

    $default  reduce using rule 80 (expression)


State 115

    4 primary_expression: LEFTPAR expression • RIGHTPAR
   81 expression: expression • COMMA assignment_expression

    COMMA     shift, and go to state 184
    RIGHTPAR  shift, and go to state 185


State 116

  113 specifier_qualifier_list: type_specifier • specifier_qualifier_list_opt

    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19

    $default  reduce using rule 116 (specifier_qualifier_list_opt)

    type_specifier                go to state 116
    specifier_qualifier_list      go to state 186
    specifier_qualifier_list_opt  go to state 187
    type_qualifier                go to state 118


State 117

  151 type_name: specifier_qualifier_list •

    $default  reduce using rule 151 (type_name)


State 118

  114 specifier_qualifier_list: type_qualifier • specifier_qualifier_list_opt

    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19

    $default  reduce using rule 116 (specifier_qualifier_list_opt)

    type_specifier                go to state 116
    specifier_qualifier_list      go to state 186
    specifier_qualifier_list_opt  go to state 188
    type_qualifier                go to state 118


State 119

   15 postfix_expression: LEFTPAR type_name • RIGHTPAR LEFTBRACE initializer_list RIGHTBRACE
   16                   | LEFTPAR type_name • RIGHTPAR LEFTBRACE initializer_list COMMA RIGHTBRACE
   34 cast_expression: LEFTPAR type_name • RIGHTPAR cast_expression

    RIGHTPAR  shift, and go to state 189


State 120

  163 designator: DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 190


State 121

  162 designator: LEFTBRACKET • constant_expression RIGHTBRACKET

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 191
    constant_expression        go to state 192


State 122

  155 initializer_list: initializer •

    $default  reduce using rule 155 (initializer_list)


State 123

  153 initializer: LEFTBRACE initializer_list • RIGHTBRACE
  154            | LEFTBRACE initializer_list • COMMA RIGHTBRACE
  157 initializer_list: initializer_list • COMMA initializer
  158                 | initializer_list • COMMA designation initializer

    COMMA       shift, and go to state 193
    RIGHTBRACE  shift, and go to state 194


State 124

  156 initializer_list: designation • initializer

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 79

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 97
    initializer                go to state 195


State 125

  159 designation: designator_list • EQUAL
  161 designator_list: designator_list • designator

    EQUAL        shift, and go to state 196
    DOT          shift, and go to state 120
    LEFTBRACKET  shift, and go to state 121

    designator  go to state 197


State 126

  160 designator_list: designator •

    $default  reduce using rule 160 (designator_list)


State 127

   12 postfix_expression: postfix_expression ARROW • IDENTIFIER

    IDENTIFIER  shift, and go to state 198


State 128

   13 postfix_expression: postfix_expression INCREMENT •

    $default  reduce using rule 13 (postfix_expression)


State 129

   14 postfix_expression: postfix_expression DECREMENT •

    $default  reduce using rule 14 (postfix_expression)


State 130

   11 postfix_expression: postfix_expression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 199


State 131

   10 postfix_expression: postfix_expression LEFTPAR • argument_expression_list_opt RIGHTPAR

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    $default  reduce using rule 18 (argument_expression_list_opt)

    primary_expression            go to state 80
    constant                      go to state 81
    postfix_expression            go to state 82
    argument_expression_list_opt  go to state 200
    argument_expression_list      go to state 201
    unary_expression              go to state 83
    unary_operator                go to state 84
    cast_expression               go to state 85
    multiplicative_expression     go to state 86
    additive_expression           go to state 87
    shift_expression              go to state 88
    relational_expression         go to state 89
    equality_expression           go to state 90
    AND_expression                go to state 91
    exclusive_OR_expression       go to state 92
    inclusive_OR_expression       go to state 93
    logical_AND_expression        go to state 94
    logical_OR_expression         go to state 95
    conditional_expression        go to state 96
    assignment_expression         go to state 202


State 132

    9 postfix_expression: postfix_expression LEFTBRACKET • expression RIGHTBRACKET

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 203


State 133

   73 assignment_operator: PLUSEQUAL •

    $default  reduce using rule 73 (assignment_operator)


State 134

   74 assignment_operator: MINUSEQUAL •

    $default  reduce using rule 74 (assignment_operator)


State 135

   70 assignment_operator: MULTIPLYEQUAL •

    $default  reduce using rule 70 (assignment_operator)


State 136

   71 assignment_operator: DIVEQUAL •

    $default  reduce using rule 71 (assignment_operator)


State 137

   72 assignment_operator: MODEQUAL •

    $default  reduce using rule 72 (assignment_operator)


State 138

   75 assignment_operator: LEFTSHIFTEQUAL •

    $default  reduce using rule 75 (assignment_operator)


State 139

   76 assignment_operator: RIGHTSHIFTEQUAL •

    $default  reduce using rule 76 (assignment_operator)


State 140

   77 assignment_operator: ANDEQUAL •

    $default  reduce using rule 77 (assignment_operator)


State 141

   79 assignment_operator: OREQUAL •

    $default  reduce using rule 79 (assignment_operator)


State 142

   78 assignment_operator: XOREQUAL •

    $default  reduce using rule 78 (assignment_operator)


State 143

   69 assignment_operator: EQUAL •

    $default  reduce using rule 69 (assignment_operator)


State 144

   68 assignment_expression: unary_expression assignment_operator • assignment_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 204


State 145

   33 cast_expression: unary_expression •

    $default  reduce using rule 33 (cast_expression)


State 146

   24 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 24 (unary_expression)


State 147

   36 multiplicative_expression: multiplicative_expression MULTIPLY • cast_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression  go to state 80
    constant            go to state 81
    postfix_expression  go to state 82
    unary_expression    go to state 145
    unary_operator      go to state 84
    cast_expression     go to state 205


State 148

   37 multiplicative_expression: multiplicative_expression DIV • cast_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression  go to state 80
    constant            go to state 81
    postfix_expression  go to state 82
    unary_expression    go to state 145
    unary_operator      go to state 84
    cast_expression     go to state 206


State 149

   38 multiplicative_expression: multiplicative_expression MOD • cast_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression  go to state 80
    constant            go to state 81
    postfix_expression  go to state 82
    unary_expression    go to state 145
    unary_operator      go to state 84
    cast_expression     go to state 207


State 150

   40 additive_expression: additive_expression PLUS • multiplicative_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 208


State 151

   41 additive_expression: additive_expression MINUS • multiplicative_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 209


State 152

   43 shift_expression: shift_expression LEFTSHIFT • additive_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 210


State 153

   44 shift_expression: shift_expression RIGHTSHIFT • additive_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 211


State 154

   48 relational_expression: relational_expression LESSEQUAL • shift_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 212


State 155

   49 relational_expression: relational_expression GREATEREQUAL • shift_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 213


State 156

   46 relational_expression: relational_expression LESS • shift_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 214


State 157

   47 relational_expression: relational_expression GREATER • shift_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 215


State 158

   51 equality_expression: equality_expression DOUBLEEQUAL • relational_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 216


State 159

   52 equality_expression: equality_expression NOTEQUAL • relational_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 217


State 160

   54 AND_expression: AND_expression AND • equality_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 218


State 161

   56 exclusive_OR_expression: exclusive_OR_expression XOR • AND_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 219


State 162

   58 inclusive_OR_expression: inclusive_OR_expression OR • exclusive_OR_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 220


State 163

   60 logical_AND_expression: logical_AND_expression DOUBLEAND • M inclusive_OR_expression

    $default  reduce using rule 65 (M)

    M  go to state 221


State 164

   62 logical_OR_expression: logical_OR_expression DOUBLEOR • M logical_AND_expression

    $default  reduce using rule 65 (M)

    M  go to state 222


State 165

   64 conditional_expression: logical_OR_expression N • QUESTIONMARK M expression N COLON M conditional_expression

    QUESTIONMARK  shift, and go to state 223


State 166

  212 function_definition: declaration_specifiers declarator declaration_list_opt change_table LEFTBRACE • block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INLINE          shift, and go to state 20
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 237

    $default  reduce using rule 180 (block_item_list_opt)

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    declaration                go to state 239
    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 240
    labeled_statement          go to state 241
    compound_statement         go to state 242
    block_item_list_opt        go to state 243
    block_item_list            go to state 244
    block_item                 go to state 245
    expression_statement       go to state 246
    selection_statement        go to state 247
    iteration_statement        go to state 248
    jump_statement             go to state 249


State 167

  150 identifier_list: identifier_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 250


State 168

  135 direct_declarator: direct_declarator LEFTPAR identifier_list RIGHTPAR •

    $default  reduce using rule 135 (direct_declarator)


State 169

  136 direct_declarator: direct_declarator LEFTPAR change_table RIGHTPAR •

    $default  reduce using rule 136 (direct_declarator)


State 170

  147 parameter_declaration: declaration_specifiers • declarator
  148                      | declaration_specifiers •

    IDENTIFIER  shift, and go to state 30
    MULTIPLY    shift, and go to state 31
    LEFTPAR     shift, and go to state 33

    $default  reduce using rule 148 (parameter_declaration)

    declarator         go to state 251
    direct_declarator  go to state 37
    pointer            go to state 38


State 171

  134 direct_declarator: direct_declarator LEFTPAR change_table parameter_type_list • RIGHTPAR

    RIGHTPAR  shift, and go to state 252


State 172

  143 parameter_type_list: parameter_list •
  144                    | parameter_list • COMMA ELLIPSIS
  146 parameter_list: parameter_list • COMMA parameter_declaration

    COMMA  shift, and go to state 253

    $default  reduce using rule 143 (parameter_type_list)


State 173

  145 parameter_list: parameter_declaration •

    $default  reduce using rule 145 (parameter_list)


State 174

  130 direct_declarator: direct_declarator LEFTBRACKET STATIC assignment_expression • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 254


State 175

  129 direct_declarator: direct_declarator LEFTBRACKET STATIC type_qualifier_list • assignment_expression RIGHTBRACKET
  142 type_qualifier_list: type_qualifier_list • type_qualifier

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 255
    type_qualifier             go to state 60


State 176

  132 direct_declarator: direct_declarator LEFTBRACKET MULTIPLY RIGHTBRACKET •

    $default  reduce using rule 132 (direct_declarator)


State 177

  127 direct_declarator: direct_declarator LEFTBRACKET assignment_expression RIGHTBRACKET •

    $default  reduce using rule 127 (direct_declarator)


State 178

  131 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list STATIC • assignment_expression RIGHTBRACKET

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 256


State 179

   32 unary_operator: MULTIPLY •
  133 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list MULTIPLY • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 257

    $default  reduce using rule 32 (unary_operator)


State 180

  126 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list RIGHTBRACKET •

    $default  reduce using rule 126 (direct_declarator)


State 181

  128 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list assignment_expression • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 258


State 182

   15 postfix_expression: LEFTPAR type_name • RIGHTPAR LEFTBRACE initializer_list RIGHTBRACE
   16                   | LEFTPAR type_name • RIGHTPAR LEFTBRACE initializer_list COMMA RIGHTBRACE
   26 unary_expression: SIZEOF LEFTPAR type_name • RIGHTPAR

    RIGHTPAR  shift, and go to state 259


State 183

   15 postfix_expression: LEFTPAR type_name • RIGHTPAR LEFTBRACE initializer_list RIGHTBRACE
   16                   | LEFTPAR type_name • RIGHTPAR LEFTBRACE initializer_list COMMA RIGHTBRACE

    RIGHTPAR  shift, and go to state 260


State 184

   81 expression: expression COMMA • assignment_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 261


State 185

    4 primary_expression: LEFTPAR expression RIGHTPAR •

    $default  reduce using rule 4 (primary_expression)


State 186

  115 specifier_qualifier_list_opt: specifier_qualifier_list •

    $default  reduce using rule 115 (specifier_qualifier_list_opt)


State 187

  113 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt •

    $default  reduce using rule 113 (specifier_qualifier_list)


State 188

  114 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt •

    $default  reduce using rule 114 (specifier_qualifier_list)


State 189

   15 postfix_expression: LEFTPAR type_name RIGHTPAR • LEFTBRACE initializer_list RIGHTBRACE
   16                   | LEFTPAR type_name RIGHTPAR • LEFTBRACE initializer_list COMMA RIGHTBRACE
   34 cast_expression: LEFTPAR type_name RIGHTPAR • cast_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 262

    primary_expression  go to state 80
    constant            go to state 81
    postfix_expression  go to state 82
    unary_expression    go to state 145
    unary_operator      go to state 84
    cast_expression     go to state 263


State 190

  163 designator: DOT IDENTIFIER •

    $default  reduce using rule 163 (designator)


State 191

   82 constant_expression: conditional_expression •

    $default  reduce using rule 82 (constant_expression)


State 192

  162 designator: LEFTBRACKET constant_expression • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 264


State 193

  154 initializer: LEFTBRACE initializer_list COMMA • RIGHTBRACE
  157 initializer_list: initializer_list COMMA • initializer
  158                 | initializer_list COMMA • designation initializer

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    DOT             shift, and go to state 120
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 79
    RIGHTBRACE      shift, and go to state 265
    LEFTBRACKET     shift, and go to state 121

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 97
    initializer                go to state 266
    designation                go to state 267
    designator_list            go to state 125
    designator                 go to state 126


State 194

  153 initializer: LEFTBRACE initializer_list RIGHTBRACE •

    $default  reduce using rule 153 (initializer)


State 195

  156 initializer_list: designation initializer •

    $default  reduce using rule 156 (initializer_list)


State 196

  159 designation: designator_list EQUAL •

    $default  reduce using rule 159 (designation)


State 197

  161 designator_list: designator_list designator •

    $default  reduce using rule 161 (designator_list)


State 198

   12 postfix_expression: postfix_expression ARROW IDENTIFIER •

    $default  reduce using rule 12 (postfix_expression)


State 199

   11 postfix_expression: postfix_expression DOT IDENTIFIER •

    $default  reduce using rule 11 (postfix_expression)


State 200

   10 postfix_expression: postfix_expression LEFTPAR argument_expression_list_opt • RIGHTPAR

    RIGHTPAR  shift, and go to state 268


State 201

   17 argument_expression_list_opt: argument_expression_list •
   20 argument_expression_list: argument_expression_list • COMMA assignment_expression

    COMMA  shift, and go to state 269

    $default  reduce using rule 17 (argument_expression_list_opt)


State 202

   19 argument_expression_list: assignment_expression •

    $default  reduce using rule 19 (argument_expression_list)


State 203

    9 postfix_expression: postfix_expression LEFTBRACKET expression • RIGHTBRACKET
   81 expression: expression • COMMA assignment_expression

    COMMA         shift, and go to state 184
    RIGHTBRACKET  shift, and go to state 270


State 204

   68 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 68 (assignment_expression)


State 205

   36 multiplicative_expression: multiplicative_expression MULTIPLY cast_expression •

    $default  reduce using rule 36 (multiplicative_expression)


State 206

   37 multiplicative_expression: multiplicative_expression DIV cast_expression •

    $default  reduce using rule 37 (multiplicative_expression)


State 207

   38 multiplicative_expression: multiplicative_expression MOD cast_expression •

    $default  reduce using rule 38 (multiplicative_expression)


State 208

   36 multiplicative_expression: multiplicative_expression • MULTIPLY cast_expression
   37                          | multiplicative_expression • DIV cast_expression
   38                          | multiplicative_expression • MOD cast_expression
   40 additive_expression: additive_expression PLUS multiplicative_expression •

    MULTIPLY  shift, and go to state 147
    DIV       shift, and go to state 148
    MOD       shift, and go to state 149

    $default  reduce using rule 40 (additive_expression)


State 209

   36 multiplicative_expression: multiplicative_expression • MULTIPLY cast_expression
   37                          | multiplicative_expression • DIV cast_expression
   38                          | multiplicative_expression • MOD cast_expression
   41 additive_expression: additive_expression MINUS multiplicative_expression •

    MULTIPLY  shift, and go to state 147
    DIV       shift, and go to state 148
    MOD       shift, and go to state 149

    $default  reduce using rule 41 (additive_expression)


State 210

   40 additive_expression: additive_expression • PLUS multiplicative_expression
   41                    | additive_expression • MINUS multiplicative_expression
   43 shift_expression: shift_expression LEFTSHIFT additive_expression •

    PLUS   shift, and go to state 150
    MINUS  shift, and go to state 151

    $default  reduce using rule 43 (shift_expression)


State 211

   40 additive_expression: additive_expression • PLUS multiplicative_expression
   41                    | additive_expression • MINUS multiplicative_expression
   44 shift_expression: shift_expression RIGHTSHIFT additive_expression •

    PLUS   shift, and go to state 150
    MINUS  shift, and go to state 151

    $default  reduce using rule 44 (shift_expression)


State 212

   43 shift_expression: shift_expression • LEFTSHIFT additive_expression
   44                 | shift_expression • RIGHTSHIFT additive_expression
   48 relational_expression: relational_expression LESSEQUAL shift_expression •

    LEFTSHIFT   shift, and go to state 152
    RIGHTSHIFT  shift, and go to state 153

    $default  reduce using rule 48 (relational_expression)


State 213

   43 shift_expression: shift_expression • LEFTSHIFT additive_expression
   44                 | shift_expression • RIGHTSHIFT additive_expression
   49 relational_expression: relational_expression GREATEREQUAL shift_expression •

    LEFTSHIFT   shift, and go to state 152
    RIGHTSHIFT  shift, and go to state 153

    $default  reduce using rule 49 (relational_expression)


State 214

   43 shift_expression: shift_expression • LEFTSHIFT additive_expression
   44                 | shift_expression • RIGHTSHIFT additive_expression
   46 relational_expression: relational_expression LESS shift_expression •

    LEFTSHIFT   shift, and go to state 152
    RIGHTSHIFT  shift, and go to state 153

    $default  reduce using rule 46 (relational_expression)


State 215

   43 shift_expression: shift_expression • LEFTSHIFT additive_expression
   44                 | shift_expression • RIGHTSHIFT additive_expression
   47 relational_expression: relational_expression GREATER shift_expression •

    LEFTSHIFT   shift, and go to state 152
    RIGHTSHIFT  shift, and go to state 153

    $default  reduce using rule 47 (relational_expression)


State 216

   46 relational_expression: relational_expression • LESS shift_expression
   47                      | relational_expression • GREATER shift_expression
   48                      | relational_expression • LESSEQUAL shift_expression
   49                      | relational_expression • GREATEREQUAL shift_expression
   51 equality_expression: equality_expression DOUBLEEQUAL relational_expression •

    LESSEQUAL     shift, and go to state 154
    GREATEREQUAL  shift, and go to state 155
    LESS          shift, and go to state 156
    GREATER       shift, and go to state 157

    $default  reduce using rule 51 (equality_expression)


State 217

   46 relational_expression: relational_expression • LESS shift_expression
   47                      | relational_expression • GREATER shift_expression
   48                      | relational_expression • LESSEQUAL shift_expression
   49                      | relational_expression • GREATEREQUAL shift_expression
   52 equality_expression: equality_expression NOTEQUAL relational_expression •

    LESSEQUAL     shift, and go to state 154
    GREATEREQUAL  shift, and go to state 155
    LESS          shift, and go to state 156
    GREATER       shift, and go to state 157

    $default  reduce using rule 52 (equality_expression)


State 218

   51 equality_expression: equality_expression • DOUBLEEQUAL relational_expression
   52                    | equality_expression • NOTEQUAL relational_expression
   54 AND_expression: AND_expression AND equality_expression •

    DOUBLEEQUAL  shift, and go to state 158
    NOTEQUAL     shift, and go to state 159

    $default  reduce using rule 54 (AND_expression)


State 219

   54 AND_expression: AND_expression • AND equality_expression
   56 exclusive_OR_expression: exclusive_OR_expression XOR AND_expression •

    AND  shift, and go to state 160

    $default  reduce using rule 56 (exclusive_OR_expression)


State 220

   56 exclusive_OR_expression: exclusive_OR_expression • XOR AND_expression
   58 inclusive_OR_expression: inclusive_OR_expression OR exclusive_OR_expression •

    XOR  shift, and go to state 161

    $default  reduce using rule 58 (inclusive_OR_expression)


State 221

   60 logical_AND_expression: logical_AND_expression DOUBLEAND M • inclusive_OR_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 271


State 222

   62 logical_OR_expression: logical_OR_expression DOUBLEOR M • logical_AND_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 272


State 223

   64 conditional_expression: logical_OR_expression N QUESTIONMARK • M expression N COLON M conditional_expression

    $default  reduce using rule 65 (M)

    M  go to state 273


State 224

    1 primary_expression: IDENTIFIER •
  175 labeled_statement: IDENTIFIER • COLON statement

    COLON  shift, and go to state 274

    $default  reduce using rule 1 (primary_expression)


State 225

  176 labeled_statement: CASE • constant_expression COLON statement

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 191
    constant_expression        go to state 275


State 226

  177 labeled_statement: DEFAULT • COLON statement

    COLON  shift, and go to state 276


State 227

  187 selection_statement: IF • LEFTPAR expression N RIGHTPAR M statement N
  188                    | IF • LEFTPAR expression N RIGHTPAR M statement N ELSE M statement

    LEFTPAR  shift, and go to state 277


State 228

  189 selection_statement: SWITCH • LEFTPAR expression RIGHTPAR statement

    LEFTPAR  shift, and go to state 278


State 229

  190 iteration_statement: WHILE • W LEFTPAR X change_table M expression RIGHTPAR M loop_statement
  191                    | WHILE • W LEFTPAR X change_table M expression RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE

    $default  reduce using rule 199 (W)

    W  go to state 279


State 230

  192 iteration_statement: DO • D M loop_statement M WHILE LEFTPAR expression RIGHTPAR SEMICOLON
  193                    | DO • D LEFTBRACE M block_item_list_opt RIGHTBRACE M WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    $default  reduce using rule 200 (D)

    D  go to state 280


State 231

  194 iteration_statement: FOR • F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M loop_statement
  195                    | FOR • F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M loop_statement
  196                    | FOR • F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE
  197                    | FOR • F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 198 (F)

    F  go to state 281


State 232

  203 jump_statement: GOTO • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 282


State 233

  204 jump_statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 283


State 234

  205 jump_statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 284


State 235

  206 jump_statement: RETURN • SEMICOLON
  207               | RETURN • expression SEMICOLON

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 285
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 286


State 236

  185 expression_statement: SEMICOLON •

    $default  reduce using rule 185 (expression_statement)


State 237

  178 compound_statement: LEFTBRACE • X change_table block_item_list_opt RIGHTBRACE

    $default  reduce using rule 201 (X)

    X  go to state 287


State 238

   81 expression: expression • COMMA assignment_expression
  186 expression_statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 288
    COMMA      shift, and go to state 184


State 239

  183 block_item: declaration •

    $default  reduce using rule 183 (block_item)


State 240

  184 block_item: statement •

    $default  reduce using rule 184 (block_item)


State 241

  164 statement: labeled_statement •

    $default  reduce using rule 164 (statement)


State 242

  165 statement: compound_statement •

    $default  reduce using rule 165 (statement)


State 243

  212 function_definition: declaration_specifiers declarator declaration_list_opt change_table LEFTBRACE block_item_list_opt • RIGHTBRACE

    RIGHTBRACE  shift, and go to state 289


State 244

  179 block_item_list_opt: block_item_list •
  182 block_item_list: block_item_list • M block_item

    RIGHTBRACE  reduce using rule 179 (block_item_list_opt)
    $default    reduce using rule 65 (M)

    M  go to state 290


State 245

  181 block_item_list: block_item •

    $default  reduce using rule 181 (block_item_list)


State 246

  166 statement: expression_statement •

    $default  reduce using rule 166 (statement)


State 247

  167 statement: selection_statement •

    $default  reduce using rule 167 (statement)


State 248

  168 statement: iteration_statement •

    $default  reduce using rule 168 (statement)


State 249

  169 statement: jump_statement •

    $default  reduce using rule 169 (statement)


State 250

  150 identifier_list: identifier_list COMMA IDENTIFIER •

    $default  reduce using rule 150 (identifier_list)


State 251

  147 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 147 (parameter_declaration)


State 252

  134 direct_declarator: direct_declarator LEFTPAR change_table parameter_type_list RIGHTPAR •

    $default  reduce using rule 134 (direct_declarator)


State 253

  144 parameter_type_list: parameter_list COMMA • ELLIPSIS
  146 parameter_list: parameter_list COMMA • parameter_declaration

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    CONST      shift, and go to state 17
    RESTRICT   shift, and go to state 18
    VOLATILE   shift, and go to state 19
    INLINE     shift, and go to state 20
    ELLIPSIS   shift, and go to state 291

    declaration_specifiers   go to state 170
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    parameter_declaration    go to state 292


State 254

  130 direct_declarator: direct_declarator LEFTBRACKET STATIC assignment_expression RIGHTBRACKET •

    $default  reduce using rule 130 (direct_declarator)


State 255

  129 direct_declarator: direct_declarator LEFTBRACKET STATIC type_qualifier_list assignment_expression • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 293


State 256

  131 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list STATIC assignment_expression • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 294


State 257

  133 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list MULTIPLY RIGHTBRACKET •

    $default  reduce using rule 133 (direct_declarator)


State 258

  128 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list assignment_expression RIGHTBRACKET •

    $default  reduce using rule 128 (direct_declarator)


State 259

   15 postfix_expression: LEFTPAR type_name RIGHTPAR • LEFTBRACE initializer_list RIGHTBRACE
   16                   | LEFTPAR type_name RIGHTPAR • LEFTBRACE initializer_list COMMA RIGHTBRACE
   26 unary_expression: SIZEOF LEFTPAR type_name RIGHTPAR •

    LEFTBRACE  shift, and go to state 262

    $default  reduce using rule 26 (unary_expression)


State 260

   15 postfix_expression: LEFTPAR type_name RIGHTPAR • LEFTBRACE initializer_list RIGHTBRACE
   16                   | LEFTPAR type_name RIGHTPAR • LEFTBRACE initializer_list COMMA RIGHTBRACE

    LEFTBRACE  shift, and go to state 262


State 261

   81 expression: expression COMMA assignment_expression •

    $default  reduce using rule 81 (expression)


State 262

   15 postfix_expression: LEFTPAR type_name RIGHTPAR LEFTBRACE • initializer_list RIGHTBRACE
   16                   | LEFTPAR type_name RIGHTPAR LEFTBRACE • initializer_list COMMA RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    DOT             shift, and go to state 120
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 79
    LEFTBRACKET     shift, and go to state 121

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 97
    initializer                go to state 122
    initializer_list           go to state 295
    designation                go to state 124
    designator_list            go to state 125
    designator                 go to state 126


State 263

   34 cast_expression: LEFTPAR type_name RIGHTPAR cast_expression •

    $default  reduce using rule 34 (cast_expression)


State 264

  162 designator: LEFTBRACKET constant_expression RIGHTBRACKET •

    $default  reduce using rule 162 (designator)


State 265

  154 initializer: LEFTBRACE initializer_list COMMA RIGHTBRACE •

    $default  reduce using rule 154 (initializer)


State 266

  157 initializer_list: initializer_list COMMA initializer •

    $default  reduce using rule 157 (initializer_list)


State 267

  158 initializer_list: initializer_list COMMA designation • initializer

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 79

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 97
    initializer                go to state 296


State 268

   10 postfix_expression: postfix_expression LEFTPAR argument_expression_list_opt RIGHTPAR •

    $default  reduce using rule 10 (postfix_expression)


State 269

   20 argument_expression_list: argument_expression_list COMMA • assignment_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 297


State 270

    9 postfix_expression: postfix_expression LEFTBRACKET expression RIGHTBRACKET •

    $default  reduce using rule 9 (postfix_expression)


State 271

   58 inclusive_OR_expression: inclusive_OR_expression • OR exclusive_OR_expression
   60 logical_AND_expression: logical_AND_expression DOUBLEAND M inclusive_OR_expression •

    OR  shift, and go to state 162

    $default  reduce using rule 60 (logical_AND_expression)


State 272

   60 logical_AND_expression: logical_AND_expression • DOUBLEAND M inclusive_OR_expression
   62 logical_OR_expression: logical_OR_expression DOUBLEOR M logical_AND_expression •

    DOUBLEAND  shift, and go to state 163

    $default  reduce using rule 62 (logical_OR_expression)


State 273

   64 conditional_expression: logical_OR_expression N QUESTIONMARK M • expression N COLON M conditional_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 298


State 274

  175 labeled_statement: IDENTIFIER COLON • statement

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 237

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    statement                  go to state 299
    labeled_statement          go to state 241
    compound_statement         go to state 242
    expression_statement       go to state 246
    selection_statement        go to state 247
    iteration_statement        go to state 248
    jump_statement             go to state 249


State 275

  176 labeled_statement: CASE constant_expression • COLON statement

    COLON  shift, and go to state 300


State 276

  177 labeled_statement: DEFAULT COLON • statement

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 237

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    statement                  go to state 301
    labeled_statement          go to state 241
    compound_statement         go to state 242
    expression_statement       go to state 246
    selection_statement        go to state 247
    iteration_statement        go to state 248
    jump_statement             go to state 249


State 277

  187 selection_statement: IF LEFTPAR • expression N RIGHTPAR M statement N
  188                    | IF LEFTPAR • expression N RIGHTPAR M statement N ELSE M statement

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 302


State 278

  189 selection_statement: SWITCH LEFTPAR • expression RIGHTPAR statement

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 303


State 279

  190 iteration_statement: WHILE W • LEFTPAR X change_table M expression RIGHTPAR M loop_statement
  191                    | WHILE W • LEFTPAR X change_table M expression RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE

    LEFTPAR  shift, and go to state 304


State 280

  192 iteration_statement: DO D • M loop_statement M WHILE LEFTPAR expression RIGHTPAR SEMICOLON
  193                    | DO D • LEFTBRACE M block_item_list_opt RIGHTBRACE M WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    LEFTBRACE  shift, and go to state 305

    $default  reduce using rule 65 (M)

    M  go to state 306


State 281

  194 iteration_statement: FOR F • LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M loop_statement
  195                    | FOR F • LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M loop_statement
  196                    | FOR F • LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE
  197                    | FOR F • LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    LEFTPAR  shift, and go to state 307


State 282

  203 jump_statement: GOTO IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 308


State 283

  204 jump_statement: CONTINUE SEMICOLON •

    $default  reduce using rule 204 (jump_statement)


State 284

  205 jump_statement: BREAK SEMICOLON •

    $default  reduce using rule 205 (jump_statement)


State 285

  206 jump_statement: RETURN SEMICOLON •

    $default  reduce using rule 206 (jump_statement)


State 286

   81 expression: expression • COMMA assignment_expression
  207 jump_statement: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 309
    COMMA      shift, and go to state 184


State 287

  178 compound_statement: LEFTBRACE X • change_table block_item_list_opt RIGHTBRACE

    $default  reduce using rule 202 (change_table)

    change_table  go to state 310


State 288

  186 expression_statement: expression SEMICOLON •

    $default  reduce using rule 186 (expression_statement)


State 289

  212 function_definition: declaration_specifiers declarator declaration_list_opt change_table LEFTBRACE block_item_list_opt RIGHTBRACE •

    $default  reduce using rule 212 (function_definition)


State 290

  182 block_item_list: block_item_list M • block_item

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INLINE          shift, and go to state 20
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 237

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    declaration                go to state 239
    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 240
    labeled_statement          go to state 241
    compound_statement         go to state 242
    block_item                 go to state 311
    expression_statement       go to state 246
    selection_statement        go to state 247
    iteration_statement        go to state 248
    jump_statement             go to state 249


State 291

  144 parameter_type_list: parameter_list COMMA ELLIPSIS •

    $default  reduce using rule 144 (parameter_type_list)


State 292

  146 parameter_list: parameter_list COMMA parameter_declaration •

    $default  reduce using rule 146 (parameter_list)


State 293

  129 direct_declarator: direct_declarator LEFTBRACKET STATIC type_qualifier_list assignment_expression RIGHTBRACKET •

    $default  reduce using rule 129 (direct_declarator)


State 294

  131 direct_declarator: direct_declarator LEFTBRACKET type_qualifier_list STATIC assignment_expression RIGHTBRACKET •

    $default  reduce using rule 131 (direct_declarator)


State 295

   15 postfix_expression: LEFTPAR type_name RIGHTPAR LEFTBRACE initializer_list • RIGHTBRACE
   16                   | LEFTPAR type_name RIGHTPAR LEFTBRACE initializer_list • COMMA RIGHTBRACE
  157 initializer_list: initializer_list • COMMA initializer
  158                 | initializer_list • COMMA designation initializer

    COMMA       shift, and go to state 312
    RIGHTBRACE  shift, and go to state 313


State 296

  158 initializer_list: initializer_list COMMA designation initializer •

    $default  reduce using rule 158 (initializer_list)


State 297

   20 argument_expression_list: argument_expression_list COMMA assignment_expression •

    $default  reduce using rule 20 (argument_expression_list)


State 298

   64 conditional_expression: logical_OR_expression N QUESTIONMARK M expression • N COLON M conditional_expression
   81 expression: expression • COMMA assignment_expression

    COMMA  shift, and go to state 184

    $default  reduce using rule 66 (N)

    N  go to state 314


State 299

  175 labeled_statement: IDENTIFIER COLON statement •

    $default  reduce using rule 175 (labeled_statement)


State 300

  176 labeled_statement: CASE constant_expression COLON • statement

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 237

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    statement                  go to state 315
    labeled_statement          go to state 241
    compound_statement         go to state 242
    expression_statement       go to state 246
    selection_statement        go to state 247
    iteration_statement        go to state 248
    jump_statement             go to state 249


State 301

  177 labeled_statement: DEFAULT COLON statement •

    $default  reduce using rule 177 (labeled_statement)


State 302

   81 expression: expression • COMMA assignment_expression
  187 selection_statement: IF LEFTPAR expression • N RIGHTPAR M statement N
  188                    | IF LEFTPAR expression • N RIGHTPAR M statement N ELSE M statement

    COMMA  shift, and go to state 184

    $default  reduce using rule 66 (N)

    N  go to state 316


State 303

   81 expression: expression • COMMA assignment_expression
  189 selection_statement: SWITCH LEFTPAR expression • RIGHTPAR statement

    COMMA     shift, and go to state 184
    RIGHTPAR  shift, and go to state 317


State 304

  190 iteration_statement: WHILE W LEFTPAR • X change_table M expression RIGHTPAR M loop_statement
  191                    | WHILE W LEFTPAR • X change_table M expression RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE

    $default  reduce using rule 201 (X)

    X  go to state 318


State 305

  193 iteration_statement: DO D LEFTBRACE • M block_item_list_opt RIGHTBRACE M WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    $default  reduce using rule 65 (M)

    M  go to state 319


State 306

  192 iteration_statement: DO D M • loop_statement M WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    loop_statement             go to state 320
    labeled_statement          go to state 321
    expression_statement       go to state 322
    selection_statement        go to state 323
    iteration_statement        go to state 324
    jump_statement             go to state 325


State 307

  194 iteration_statement: FOR F LEFTPAR • X change_table declaration M expression_statement M expression N RIGHTPAR M loop_statement
  195                    | FOR F LEFTPAR • X change_table expression_statement M expression_statement M expression N RIGHTPAR M loop_statement
  196                    | FOR F LEFTPAR • X change_table declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE
  197                    | FOR F LEFTPAR • X change_table expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 201 (X)

    X  go to state 326


State 308

  203 jump_statement: GOTO IDENTIFIER SEMICOLON •

    $default  reduce using rule 203 (jump_statement)


State 309

  207 jump_statement: RETURN expression SEMICOLON •

    $default  reduce using rule 207 (jump_statement)


State 310

  178 compound_statement: LEFTBRACE X change_table • block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INLINE          shift, and go to state 20
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 237

    $default  reduce using rule 180 (block_item_list_opt)

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    declaration                go to state 239
    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 240
    labeled_statement          go to state 241
    compound_statement         go to state 242
    block_item_list_opt        go to state 327
    block_item_list            go to state 244
    block_item                 go to state 245
    expression_statement       go to state 246
    selection_statement        go to state 247
    iteration_statement        go to state 248
    jump_statement             go to state 249


State 311

  182 block_item_list: block_item_list M block_item •

    $default  reduce using rule 182 (block_item_list)


State 312

   16 postfix_expression: LEFTPAR type_name RIGHTPAR LEFTBRACE initializer_list COMMA • RIGHTBRACE
  157 initializer_list: initializer_list COMMA • initializer
  158                 | initializer_list COMMA • designation initializer

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    DOT             shift, and go to state 120
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 79
    RIGHTBRACE      shift, and go to state 328
    LEFTBRACKET     shift, and go to state 121

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 97
    initializer                go to state 266
    designation                go to state 267
    designator_list            go to state 125
    designator                 go to state 126


State 313

   15 postfix_expression: LEFTPAR type_name RIGHTPAR LEFTBRACE initializer_list RIGHTBRACE •

    $default  reduce using rule 15 (postfix_expression)


State 314

   64 conditional_expression: logical_OR_expression N QUESTIONMARK M expression N • COLON M conditional_expression

    COLON  shift, and go to state 329


State 315

  176 labeled_statement: CASE constant_expression COLON statement •

    $default  reduce using rule 176 (labeled_statement)


State 316

  187 selection_statement: IF LEFTPAR expression N • RIGHTPAR M statement N
  188                    | IF LEFTPAR expression N • RIGHTPAR M statement N ELSE M statement

    RIGHTPAR  shift, and go to state 330


State 317

  189 selection_statement: SWITCH LEFTPAR expression RIGHTPAR • statement

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 237

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    statement                  go to state 331
    labeled_statement          go to state 241
    compound_statement         go to state 242
    expression_statement       go to state 246
    selection_statement        go to state 247
    iteration_statement        go to state 248
    jump_statement             go to state 249


State 318

  190 iteration_statement: WHILE W LEFTPAR X • change_table M expression RIGHTPAR M loop_statement
  191                    | WHILE W LEFTPAR X • change_table M expression RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE

    $default  reduce using rule 202 (change_table)

    change_table  go to state 332


State 319

  193 iteration_statement: DO D LEFTBRACE M • block_item_list_opt RIGHTBRACE M WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INLINE          shift, and go to state 20
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 237

    $default  reduce using rule 180 (block_item_list_opt)

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    declaration                go to state 239
    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 240
    labeled_statement          go to state 241
    compound_statement         go to state 242
    block_item_list_opt        go to state 333
    block_item_list            go to state 244
    block_item                 go to state 245
    expression_statement       go to state 246
    selection_statement        go to state 247
    iteration_statement        go to state 248
    jump_statement             go to state 249


State 320

  192 iteration_statement: DO D M loop_statement • M WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    $default  reduce using rule 65 (M)

    M  go to state 334


State 321

  170 loop_statement: labeled_statement •

    $default  reduce using rule 170 (loop_statement)


State 322

  171 loop_statement: expression_statement •

    $default  reduce using rule 171 (loop_statement)


State 323

  172 loop_statement: selection_statement •

    $default  reduce using rule 172 (loop_statement)


State 324

  173 loop_statement: iteration_statement •

    $default  reduce using rule 173 (loop_statement)


State 325

  174 loop_statement: jump_statement •

    $default  reduce using rule 174 (loop_statement)


State 326

  194 iteration_statement: FOR F LEFTPAR X • change_table declaration M expression_statement M expression N RIGHTPAR M loop_statement
  195                    | FOR F LEFTPAR X • change_table expression_statement M expression_statement M expression N RIGHTPAR M loop_statement
  196                    | FOR F LEFTPAR X • change_table declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE
  197                    | FOR F LEFTPAR X • change_table expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 202 (change_table)

    change_table  go to state 335


State 327

  178 compound_statement: LEFTBRACE X change_table block_item_list_opt • RIGHTBRACE

    RIGHTBRACE  shift, and go to state 336


State 328

   16 postfix_expression: LEFTPAR type_name RIGHTPAR LEFTBRACE initializer_list COMMA RIGHTBRACE •

    $default  reduce using rule 16 (postfix_expression)


State 329

   64 conditional_expression: logical_OR_expression N QUESTIONMARK M expression N COLON • M conditional_expression

    $default  reduce using rule 65 (M)

    M  go to state 337


State 330

  187 selection_statement: IF LEFTPAR expression N RIGHTPAR • M statement N
  188                    | IF LEFTPAR expression N RIGHTPAR • M statement N ELSE M statement

    $default  reduce using rule 65 (M)

    M  go to state 338


State 331

  189 selection_statement: SWITCH LEFTPAR expression RIGHTPAR statement •

    $default  reduce using rule 189 (selection_statement)


State 332

  190 iteration_statement: WHILE W LEFTPAR X change_table • M expression RIGHTPAR M loop_statement
  191                    | WHILE W LEFTPAR X change_table • M expression RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE

    $default  reduce using rule 65 (M)

    M  go to state 339


State 333

  193 iteration_statement: DO D LEFTBRACE M block_item_list_opt • RIGHTBRACE M WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    RIGHTBRACE  shift, and go to state 340


State 334

  192 iteration_statement: DO D M loop_statement M • WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    WHILE  shift, and go to state 341


State 335

  194 iteration_statement: FOR F LEFTPAR X change_table • declaration M expression_statement M expression N RIGHTPAR M loop_statement
  195                    | FOR F LEFTPAR X change_table • expression_statement M expression_statement M expression N RIGHTPAR M loop_statement
  196                    | FOR F LEFTPAR X change_table • declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE
  197                    | FOR F LEFTPAR X change_table • expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INLINE          shift, and go to state 20
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    declaration                go to state 342
    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    expression_statement       go to state 343


State 336

  178 compound_statement: LEFTBRACE X change_table block_item_list_opt RIGHTBRACE •

    $default  reduce using rule 178 (compound_statement)


State 337

   64 conditional_expression: logical_OR_expression N QUESTIONMARK M expression N COLON M • conditional_expression

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 344


State 338

  187 selection_statement: IF LEFTPAR expression N RIGHTPAR M • statement N
  188                    | IF LEFTPAR expression N RIGHTPAR M • statement N ELSE M statement

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 237

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    statement                  go to state 345
    labeled_statement          go to state 241
    compound_statement         go to state 242
    expression_statement       go to state 246
    selection_statement        go to state 247
    iteration_statement        go to state 248
    jump_statement             go to state 249


State 339

  190 iteration_statement: WHILE W LEFTPAR X change_table M • expression RIGHTPAR M loop_statement
  191                    | WHILE W LEFTPAR X change_table M • expression RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 346


State 340

  193 iteration_statement: DO D LEFTBRACE M block_item_list_opt RIGHTBRACE • M WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    $default  reduce using rule 65 (M)

    M  go to state 347


State 341

  192 iteration_statement: DO D M loop_statement M WHILE • LEFTPAR expression RIGHTPAR SEMICOLON

    LEFTPAR  shift, and go to state 348


State 342

  194 iteration_statement: FOR F LEFTPAR X change_table declaration • M expression_statement M expression N RIGHTPAR M loop_statement
  196                    | FOR F LEFTPAR X change_table declaration • M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 65 (M)

    M  go to state 349


State 343

  195 iteration_statement: FOR F LEFTPAR X change_table expression_statement • M expression_statement M expression N RIGHTPAR M loop_statement
  197                    | FOR F LEFTPAR X change_table expression_statement • M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 65 (M)

    M  go to state 350


State 344

   64 conditional_expression: logical_OR_expression N QUESTIONMARK M expression N COLON M conditional_expression •

    $default  reduce using rule 64 (conditional_expression)


State 345

  187 selection_statement: IF LEFTPAR expression N RIGHTPAR M statement • N
  188                    | IF LEFTPAR expression N RIGHTPAR M statement • N ELSE M statement

    $default  reduce using rule 66 (N)

    N  go to state 351


State 346

   81 expression: expression • COMMA assignment_expression
  190 iteration_statement: WHILE W LEFTPAR X change_table M expression • RIGHTPAR M loop_statement
  191                    | WHILE W LEFTPAR X change_table M expression • RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE

    COMMA     shift, and go to state 184
    RIGHTPAR  shift, and go to state 352


State 347

  193 iteration_statement: DO D LEFTBRACE M block_item_list_opt RIGHTBRACE M • WHILE LEFTPAR expression RIGHTPAR SEMICOLON

    WHILE  shift, and go to state 353


State 348

  192 iteration_statement: DO D M loop_statement M WHILE LEFTPAR • expression RIGHTPAR SEMICOLON

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 354


State 349

  194 iteration_statement: FOR F LEFTPAR X change_table declaration M • expression_statement M expression N RIGHTPAR M loop_statement
  196                    | FOR F LEFTPAR X change_table declaration M • expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    expression_statement       go to state 355


State 350

  195 iteration_statement: FOR F LEFTPAR X change_table expression_statement M • expression_statement M expression N RIGHTPAR M loop_statement
  197                    | FOR F LEFTPAR X change_table expression_statement M • expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    expression_statement       go to state 356


State 351

  187 selection_statement: IF LEFTPAR expression N RIGHTPAR M statement N •
  188                    | IF LEFTPAR expression N RIGHTPAR M statement N • ELSE M statement

    ELSE  shift, and go to state 357

    $default  reduce using rule 187 (selection_statement)


State 352

  190 iteration_statement: WHILE W LEFTPAR X change_table M expression RIGHTPAR • M loop_statement
  191                    | WHILE W LEFTPAR X change_table M expression RIGHTPAR • LEFTBRACE M block_item_list_opt RIGHTBRACE

    LEFTBRACE  shift, and go to state 358

    $default  reduce using rule 65 (M)

    M  go to state 359


State 353

  193 iteration_statement: DO D LEFTBRACE M block_item_list_opt RIGHTBRACE M WHILE • LEFTPAR expression RIGHTPAR SEMICOLON

    LEFTPAR  shift, and go to state 360


State 354

   81 expression: expression • COMMA assignment_expression
  192 iteration_statement: DO D M loop_statement M WHILE LEFTPAR expression • RIGHTPAR SEMICOLON

    COMMA     shift, and go to state 184
    RIGHTPAR  shift, and go to state 361


State 355

  194 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement • M expression N RIGHTPAR M loop_statement
  196                    | FOR F LEFTPAR X change_table declaration M expression_statement • M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 65 (M)

    M  go to state 362


State 356

  195 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement • M expression N RIGHTPAR M loop_statement
  197                    | FOR F LEFTPAR X change_table expression_statement M expression_statement • M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 65 (M)

    M  go to state 363


State 357

  188 selection_statement: IF LEFTPAR expression N RIGHTPAR M statement N ELSE • M statement

    $default  reduce using rule 65 (M)

    M  go to state 364


State 358

  191 iteration_statement: WHILE W LEFTPAR X change_table M expression RIGHTPAR LEFTBRACE • M block_item_list_opt RIGHTBRACE

    $default  reduce using rule 65 (M)

    M  go to state 365


State 359

  190 iteration_statement: WHILE W LEFTPAR X change_table M expression RIGHTPAR M • loop_statement

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    loop_statement             go to state 366
    labeled_statement          go to state 321
    expression_statement       go to state 322
    selection_statement        go to state 323
    iteration_statement        go to state 324
    jump_statement             go to state 325


State 360

  193 iteration_statement: DO D LEFTBRACE M block_item_list_opt RIGHTBRACE M WHILE LEFTPAR • expression RIGHTPAR SEMICOLON

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 367


State 361

  192 iteration_statement: DO D M loop_statement M WHILE LEFTPAR expression RIGHTPAR • SEMICOLON

    SEMICOLON  shift, and go to state 368


State 362

  194 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M • expression N RIGHTPAR M loop_statement
  196                    | FOR F LEFTPAR X change_table declaration M expression_statement M • expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 369


State 363

  195 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M • expression N RIGHTPAR M loop_statement
  197                    | FOR F LEFTPAR X change_table expression_statement M expression_statement M • expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 64
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    LEFTPAR         shift, and go to state 78

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 370


State 364

  188 selection_statement: IF LEFTPAR expression N RIGHTPAR M statement N ELSE M • statement

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 237

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    statement                  go to state 371
    labeled_statement          go to state 241
    compound_statement         go to state 242
    expression_statement       go to state 246
    selection_statement        go to state 247
    iteration_statement        go to state 248
    jump_statement             go to state 249


State 365

  191 iteration_statement: WHILE W LEFTPAR X change_table M expression RIGHTPAR LEFTBRACE M • block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INLINE          shift, and go to state 20
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 237

    $default  reduce using rule 180 (block_item_list_opt)

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    declaration                go to state 239
    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 240
    labeled_statement          go to state 241
    compound_statement         go to state 242
    block_item_list_opt        go to state 372
    block_item_list            go to state 244
    block_item                 go to state 245
    expression_statement       go to state 246
    selection_statement        go to state 247
    iteration_statement        go to state 248
    jump_statement             go to state 249


State 366

  190 iteration_statement: WHILE W LEFTPAR X change_table M expression RIGHTPAR M loop_statement •

    $default  reduce using rule 190 (iteration_statement)


State 367

   81 expression: expression • COMMA assignment_expression
  193 iteration_statement: DO D LEFTBRACE M block_item_list_opt RIGHTBRACE M WHILE LEFTPAR expression • RIGHTPAR SEMICOLON

    COMMA     shift, and go to state 184
    RIGHTPAR  shift, and go to state 373


State 368

  192 iteration_statement: DO D M loop_statement M WHILE LEFTPAR expression RIGHTPAR SEMICOLON •

    $default  reduce using rule 192 (iteration_statement)


State 369

   81 expression: expression • COMMA assignment_expression
  194 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M expression • N RIGHTPAR M loop_statement
  196                    | FOR F LEFTPAR X change_table declaration M expression_statement M expression • N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    COMMA  shift, and go to state 184

    $default  reduce using rule 66 (N)

    N  go to state 374


State 370

   81 expression: expression • COMMA assignment_expression
  195 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M expression • N RIGHTPAR M loop_statement
  197                    | FOR F LEFTPAR X change_table expression_statement M expression_statement M expression • N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    COMMA  shift, and go to state 184

    $default  reduce using rule 66 (N)

    N  go to state 375


State 371

  188 selection_statement: IF LEFTPAR expression N RIGHTPAR M statement N ELSE M statement •

    $default  reduce using rule 188 (selection_statement)


State 372

  191 iteration_statement: WHILE W LEFTPAR X change_table M expression RIGHTPAR LEFTBRACE M block_item_list_opt • RIGHTBRACE

    RIGHTBRACE  shift, and go to state 376


State 373

  193 iteration_statement: DO D LEFTBRACE M block_item_list_opt RIGHTBRACE M WHILE LEFTPAR expression RIGHTPAR • SEMICOLON

    SEMICOLON  shift, and go to state 377


State 374

  194 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M expression N • RIGHTPAR M loop_statement
  196                    | FOR F LEFTPAR X change_table declaration M expression_statement M expression N • RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    RIGHTPAR  shift, and go to state 378


State 375

  195 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N • RIGHTPAR M loop_statement
  197                    | FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N • RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE

    RIGHTPAR  shift, and go to state 379


State 376

  191 iteration_statement: WHILE W LEFTPAR X change_table M expression RIGHTPAR LEFTBRACE M block_item_list_opt RIGHTBRACE •

    $default  reduce using rule 191 (iteration_statement)


State 377

  193 iteration_statement: DO D LEFTBRACE M block_item_list_opt RIGHTBRACE M WHILE LEFTPAR expression RIGHTPAR SEMICOLON •

    $default  reduce using rule 193 (iteration_statement)


State 378

  194 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR • M loop_statement
  196                    | FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR • M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 65 (M)

    M  go to state 380


State 379

  195 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR • M loop_statement
  197                    | FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR • M LEFTBRACE block_item_list_opt RIGHTBRACE

    $default  reduce using rule 65 (M)

    M  go to state 381


State 380

  194 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M • loop_statement
  196                    | FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M • LEFTBRACE block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 382

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    loop_statement             go to state 383
    labeled_statement          go to state 321
    expression_statement       go to state 322
    selection_statement        go to state 323
    iteration_statement        go to state 324
    jump_statement             go to state 325


State 381

  195 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M • loop_statement
  197                    | FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M • LEFTBRACE block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 384

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    loop_statement             go to state 385
    labeled_statement          go to state 321
    expression_statement       go to state 322
    selection_statement        go to state 323
    iteration_statement        go to state 324
    jump_statement             go to state 325


State 382

  196 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE • block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INLINE          shift, and go to state 20
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 237

    $default  reduce using rule 180 (block_item_list_opt)

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    declaration                go to state 239
    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 240
    labeled_statement          go to state 241
    compound_statement         go to state 242
    block_item_list_opt        go to state 386
    block_item_list            go to state 244
    block_item                 go to state 245
    expression_statement       go to state 246
    selection_statement        go to state 247
    iteration_statement        go to state 248
    jump_statement             go to state 249


State 383

  194 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M loop_statement •

    $default  reduce using rule 194 (iteration_statement)


State 384

  197 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE • block_item_list_opt RIGHTBRACE

    IDENTIFIER      shift, and go to state 224
    FLO_CONSTANT    shift, and go to state 65
    CHAR_CONSTANT   shift, and go to state 66
    INT_CONSTANT    shift, and go to state 67
    STRING_LITERAL  shift, and go to state 68
    SIZEOF          shift, and go to state 69
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    INLINE          shift, and go to state 20
    CASE            shift, and go to state 225
    DEFAULT         shift, and go to state 226
    IF              shift, and go to state 227
    SWITCH          shift, and go to state 228
    WHILE           shift, and go to state 229
    DO              shift, and go to state 230
    FOR             shift, and go to state 231
    GOTO            shift, and go to state 232
    CONTINUE        shift, and go to state 233
    BREAK           shift, and go to state 234
    RETURN          shift, and go to state 235
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TILDA           shift, and go to state 75
    NOT             shift, and go to state 76
    AND             shift, and go to state 77
    SEMICOLON       shift, and go to state 236
    LEFTPAR         shift, and go to state 78
    LEFTBRACE       shift, and go to state 237

    $default  reduce using rule 180 (block_item_list_opt)

    primary_expression         go to state 80
    constant                   go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    AND_expression             go to state 91
    exclusive_OR_expression    go to state 92
    inclusive_OR_expression    go to state 93
    logical_AND_expression     go to state 94
    logical_OR_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 114
    expression                 go to state 238
    declaration                go to state 239
    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 240
    labeled_statement          go to state 241
    compound_statement         go to state 242
    block_item_list_opt        go to state 387
    block_item_list            go to state 244
    block_item                 go to state 245
    expression_statement       go to state 246
    selection_statement        go to state 247
    iteration_statement        go to state 248
    jump_statement             go to state 249


State 385

  195 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M loop_statement •

    $default  reduce using rule 195 (iteration_statement)


State 386

  196 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt • RIGHTBRACE

    RIGHTBRACE  shift, and go to state 388


State 387

  197 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt • RIGHTBRACE

    RIGHTBRACE  shift, and go to state 389


State 388

  196 iteration_statement: FOR F LEFTPAR X change_table declaration M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE •

    $default  reduce using rule 196 (iteration_statement)


State 389

  197 iteration_statement: FOR F LEFTPAR X change_table expression_statement M expression_statement M expression N RIGHTPAR M LEFTBRACE block_item_list_opt RIGHTBRACE •

    $default  reduce using rule 197 (iteration_statement)
